<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Esent.Collections</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.CollectionsSystemParameters">
            <summary>
            Global parameters for all collections.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.CollectionsSystemParameters.InitLock">
            <summary>
            Used to make sure only one thread can perform the global initialization.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.CollectionsSystemParameters.isInit">
            <summary>
            True if the Init() method has already run.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.CollectionsSystemParameters.Init">
            <summary>
            A global initialization function. This should be called
            exactly once, before any ESENT instances are created.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.CollectionsSystemParameters.DoInit">
            <summary>
            Perform the global initialization. This sets the page
            size, configuration, cache size and other global
            parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1">
            <summary>
            Contains methods to set and get data from the ESENT
            database.
            </summary>
            <typeparam name="TColumn">The type of the column.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnMethodNamesMap">
            <summary>
            A mapping of types to RetrieveColumn function names.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnMethodNonNullableNamesMap">
            <summary>
            A mapping of types to RetrieveColumn function names for non-nullable versions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.ColumnTypeMap">
            <summary>
            A mapping of types to ESENT column types.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.columnSetter">
            <summary>
            The SetColumn delegate for this object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.columnRetriever">
            <summary>
            The RetrieveColumn delegate for this object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.coltyp">
            <summary>
            The column type for this object.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.#ctor">
            <summary>
            Initializes a new instance of the ColumnConverter class.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumnDelegate">
            <summary>
            Represents a SetColumn operation.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the value in. An update should be prepared.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnDelegate">
            <summary>
            Represents a RetrieveColumn operation.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the value from.</param>
            <param name="columnid">The column to retrieve.</param>
            <returns>The retrieved value.</returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.Coltyp">
            <summary>
            Gets the type of database column the value should be stored in.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.ColumnSetter">
            <summary>
            Gets a delegate that can be used to set the Key column with an object of
            type <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.ColumnRetriever">
            <summary>
            Gets a delegate that can be used to retrieve the Key column, returning
            type <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.IsNullableType(System.Type)">
            <summary>
            Determine if the given type is a nullable type.
            </summary>
            <param name="t">The type to check.</param>
            <returns>True if the type is nullable.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.GetUnderlyingType(System.Type)">
            <summary>
            Get the type that underlies the nullable type.
            </summary>
            <param name="t">The nullable type.</param>
            <returns>The type that underlies the nullable type.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.IsSerializable(System.Type)">
            <summary>
            Determine if the given type is a serializable structure.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            True if the type (and the types it contains) are all serializable structures.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.String)">
            <summary>
            Set a string.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.Boolean})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.Byte})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.Int16})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.UInt16})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.Int32})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.UInt32})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.Int64})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.UInt64})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.Single})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.Double})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.Guid})">
            <summary>
            Set a nullable value.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.DateTime})">
            <summary>
            Set a nullable date time.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.DateTime)">
            <summary>
            Set a date time.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{System.TimeSpan})">
            <summary>
            Set a nullable timespan.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.TimeSpan)">
            <summary>
            Set a timespan.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Collections.Generic.PersistentBlob)">
            <summary>
            Set a PersistentBlob.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to set the value in.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsDateTime(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a nullable date time. We do not use Api.RetrieveColumnAsDateTime because
            that stores the value in OADate format, which is less accurate than System.DateTime.
            Instead we store a DateTime as its Tick value in an Int64 column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A nullable DateTime constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsTimeSpan(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a nullable TimeSpan.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A nullable TimeSpan constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsPersistentBlob(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a PersistentBlob.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A PersistentBlob constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableBoolean(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable Boolean
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable Boolean constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableByte(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable Byte
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable Byte constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableInt16(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable Int16
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable Int16 constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableUInt16(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable UInt16
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable UInt16 constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableInt32(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable Int32
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable Int32 constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableUInt32(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable UInt32
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable UInt32 constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableInt64(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable Int64
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable Int64 constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableUInt64(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable UInt64
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable UInt64 constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableFloat(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable Float
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable Float constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableDouble(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable Double
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable Double constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableGuid(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable Guid
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable Guid constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableDateTime(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable DateTime
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable DateTime constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.RetrieveColumnAsNonNullableTimeSpan(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieve a non-nullable TimeSpan
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve the value from.</param>
            <param name="columnid">The column containing the value.</param>
            <returns>A non-nullable Float constructed from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.UnwrapNullableColumnValue``1(System.Nullable{``0})">
            <summary>
            Unwraps a nullable column value when used with a dictionary that is not
            using nullable types
            </summary>
            <typeparam name="T">Type of value</typeparam>
            <param name="val">Value to unwrap</param>
            <returns>Unwrapped value</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.SetColumnIfNull``1(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Nullable{``0})">
            <summary>
            Set the column to null, if the nullable value is null.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The tableid to set.</param>
            <param name="columnid">The column to set.</param>
            <param name="value">The nullable value to set.</param>
            <returns>
            True if the value was null and the column was set to null
            .</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.CreateRetrieveColumnDelegate">
            <summary>
            Get the retrieve column delegate for the type.
            </summary>
            <returns>The retrieve column delegate for the type.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ColumnConverter`1.CreateSetColumnDelegate">
            <summary>
            Create the set column delegate.
            </summary>
            <returns>The set column delegate.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.Compare">
            <summary>
            Provides generic comparison methods.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Compare.AreEqual``1(``0,``0)">
            <summary>
            Compare two objects to determine if they are equal.
            </summary>
            <typeparam name="T">The type to compare.</typeparam>
            <param name="value1">The first object.</param>
            <param name="value2">The second object.</param>
            <returns>True if they are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionCompiler">
            <summary>
            Compile and evaluate expressions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionCompiler.CompilersMap">
            <summary>
            Dictionary of type => compiler mapping. The compiler functions
            take an expression and return its value.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionCompiler.Compile(System.Linq.Expressions.Expression)">
            <summary>
            Compile an expression and return its value.
            </summary>
            <param name="expression">The expression to compile.</param>
            <returns>The value of the expression or null if no value can be determined.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionCompiler.GetValue``1(System.Linq.Expressions.Expression)">
            <summary>
            Compile an expression of a specific type and return its value.
            </summary>
            <typeparam name="T">The return type of the expression.</typeparam>
            <param name="expression">The expression.</param>
            <returns>The value of the compiled expression.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionEvaluator`1">
            <summary>
            Methods to evaluate an expression which returns a T.
            </summary>
            <typeparam name="T">The type returned by the expression.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionEvaluator`1.TryGetConstantExpression(System.Linq.Expressions.Expression,`0@)">
            <summary>
            Determine if the given expression is a constant expression, and
            return the value of the expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="value">The value of the expression.</param>
            <returns>True if the expression was a constant, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionEvaluator`1.GetExpressionValue(System.Linq.Expressions.Expression)">
            <summary>
            Get the value of the expression.
            </summary>
            <param name="expression">The expression to get the value of.</param>
            <returns>The value of the expression.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ConstantExpressionEvaluator`1.HasNoParameterAccess(System.Linq.Expressions.Expression)">
            <summary>
            Determine if there are any parameter access calls in the expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>
            True if there are no parameter accesses in the expression.
            </returns>
            <remarks>
            This method is conservative. We only return true if we end up with
            null, a constant or parameter access. Unknown expressions return false.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.Copy">
            <summary>
            Provides generic copy methods.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Copy.CopyTo``1(System.Collections.Generic.ICollection{``0},``0[],System.Int32)">
            <summary>
            Copy one collection to an array.
            </summary>
            <typeparam name="T">The type to compare.</typeparam>
            <param name="items">The items to copy.</param>
            <param name="array">The index to copy into.</param>
            <param name="arrayIndex">The location in the index to start copying into.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig">
            <summary>
            An interface for meta-data configuration for the dictionary database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.Version">
            <summary>
            Gets a string describing the current version of the 
            PersistentDictionary.
            </summary>
            <value>
            A string describing the current version of the 
            PersistentDictionary.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.GlobalsTableName">
            <summary>
            Gets the name of the globals table.
            </summary>
            <value>
            The name of the globals table.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.VersionColumnName">
            <summary>
            Gets the name of the version column in the globals table.
            </summary>
            <value>
            The name of the version column in the globals table.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.CountColumnName">
            <summary>
            Gets the name of the count column in the globals table.
            </summary>
            <value>
            The name of the count column in the globals table.
            This column tracks the number of items in the collection.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.FlushColumnName">
            <summary>
            Gets the name of the flush column in the globals table.
            </summary>
            <value>
            The name of the flush column in the globals table.
            This column is updated when a Flush operation is performed.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.KeyTypeColumnName">
            <summary>
            Gets the name of the key type column in the globals table.
            </summary>
            <value>
            The name of the key type column in the globals table.
            This column stores the type of the key in the dictionary.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.KeyTypeNameColumnName">
            <summary>
            Gets the name of the key type column in the globals table.
            This column stores the type of the key in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.ValueTypeColumnName">
            <summary>
            Gets the name of the value type column in the globals table.
            </summary>
            <value>
            The name of the value type column in the globals table.
            This column stores the type of the value in the dictionary.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.ValueTypeNameColumnName">
            <summary>
            Gets the name of the value type name column in the globals table.
            This column stores the name of the type of the value in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.DataTableName">
            <summary>
            Gets the name of the data table.
            </summary>
            <value>
            The name of the data table.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.KeyColumnName">
            <summary>
            Gets the name of the key column in the data table.
            </summary>
            <value>
            The name of the key column in the data table.
            This column stores the key of the item.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig.ValueColumnName">
            <summary>
            Gets the name of the value column in the data table.
            </summary>
            <value>
            The name of the value column in the data table.
            This column stores the value of the item.
            </value>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.Key`1">
            <summary>
            Represents a generic key value.
            </summary>
            <typeparam name="T">The datatype of the key.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Key`1.#ctor(`0,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the Key class.
            </summary>
            <param name="value">The value of the key.</param>
            <param name="isInclusive">True if this key is inclusive.</param>
            <param name="isPrefix">True if this key is a prefix.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.Key`1.IsInclusive">
            <summary>
            Gets a value indicating whether the key is inclusive.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.Key`1.IsPrefix">
            <summary>
            Gets a value indicating whether the key is a prefix.
            This only makes sense for string types.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.Key`1.Value">
            <summary>
            Gets the value of the key.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Key`1.CreateKey(`0,System.Boolean)">
            <summary>
            Create a new Key.
            </summary>
            <param name="value">The value of the key.</param>
            <param name="isInclusive">True if the key is to be inclusive.</param>
            <returns>The new key.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Key`1.CreatePrefixKey(`0)">
            <summary>
            Create a new prefix Key.
            </summary>
            <param name="value">The value of the key.</param>
            <returns>The new key.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Key`1.ToString">
            <summary>
            Gets a string representation of the key.
            </summary>
            <returns>A string representation of the key.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Key`1.Equals(System.Object)">
            <summary>
            Compare an object to this one, to see if they are equal.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns>True if this range equals the other object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Key`1.GetHashCode">
            <summary>
            Gets a hash code for this object.
            </summary>
            <returns>
            A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Key`1.Equals(Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Determine if this Key matches another Key.
            </summary>
            <param name="other">The Key to compare with.</param>
            <returns>True if the keys are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.Key`1.ValueEquals(Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Compare the value of this Key to another key.
            </summary>
            <param name="other">The Key to compare with.</param>
            <returns>True if the values are equal, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter`1">
            <summary>
            Extends the ColumnConverter class with methods to make a key.
            </summary>
            <typeparam name="TColumn">The type of the column.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter`1.keyMaker">
            <summary>
            The MakeKey delegate for this object.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter`1.#ctor">
            <summary>
            Initializes a new instance of the KeyColumnConverter class.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter`1.MakeKeyDelegate">
            <summary>
            Represents a MakeKey operation.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to make the key in.</param>
            <param name="value">The value to make the key with.</param>
            <param name="grbit">Make key options.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter`1.KeyMaker">
            <summary>
            Gets a delegate that can be used to call JetMakeKey with an object of
            type <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter`1.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.DateTime,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter`1.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.TimeSpan,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyColumnConverter`1.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`1">
            <summary>
            Contains methods to evaluate a predicate Expression which operates
            on Key types to determine a key range which contains all items
            matched by the predicate.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`1.GetKeyRange(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Evaluate a predicate Expression and determine a key range which
            contains all items matched by the predicate.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <returns>
            A KeyRange that contains all items matched by the predicate. If no
            range can be determined the range will include all items.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`1.KeyRangeIsExact(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Evaluate a predicate Expression and determine whether a key range can
            be found that completely satisfies the expression. If this method returns
            true then the key range returned by <see cref="M:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`1.GetKeyRange(System.Linq.Expressions.Expression{System.Predicate{`0}})"/> will return
            only records which match the expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <returns>
            True if the key range returned by <see cref="M:Microsoft.Isam.Esent.Collections.Generic.KeyExpressionEvaluator`1.GetKeyRange(System.Linq.Expressions.Expression{System.Predicate{`0}})"/> will perfectly
            match all records found by the expression.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1">
            <summary>
            Represents a range of keys, where each end can be inclusive or
            exclusive.
            </summary>
            <typeparam name="T">The type of the key.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.OpenRangeInstance">
            <summary>
            A singleton instance of the open range (a range with no limits).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.EmptyRangeInstance">
            <summary>
            A singleton instance of the empty range (a range with no records).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.#ctor(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Initializes a new instance of the KeyRange class.
            </summary>
            <param name="min">The minimum key. This can be null.</param>
            <param name="max">The maximum key. This can be null.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.OpenRange">
            <summary>
            Gets a singleton instance of the open range (a range with no limits).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.EmptyRange">
            <summary>
            Gets a singleton instance of the empty range (a range with no records).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.Min">
            <summary>
            Gets the minimum key value. This is null if there is
            no minumum.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.Max">
            <summary>
            Gets the maximum key value. This is null if there is
            no maximum.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.IsEmpty">
            <summary>
            Gets a value indicating whether the range is empty.
            </summary>
            <value>
            A value indicating whether the range is empty.
            </value>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.op_BitwiseAnd(Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0},Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0})">
            <summary>
            Return the intersection of two ranges.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <returns>The intersection of the two ranges.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.op_BitwiseOr(Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0},Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0})">
            <summary>
            Return the union of two ranges.
            </summary>
            <param name="a">The first range.</param>
            <param name="b">The second range.</param>
            <returns>The union of the two ranges.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.Invert">
            <summary>
            Invert the key range, if possible. If only one of the lower
            or upper bounds is set then swap them and invert the inclusive
            setting, otherwise return an open range.
            </summary>
            <returns>
            An inversion of the key range.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.Equals(System.Object)">
            <summary>
            Compare an object to this one, to see if they are equal.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns>True if this range equals the other object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.GetHashCode">
            <summary>
            Gets a hash code for this object.
            </summary>
            <returns>
            A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.Equals(Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0})">
            <summary>
            Compare two key ranges to see if they are equal.
            </summary>
            <param name="other">The key range to compare against.</param>
            <returns>True if they are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.ToString">
            <summary>
            Generate a string representation of the range.
            </summary>
            <returns>A string representation of the range.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.LowerIntersection(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Returns the lower bound of two keys for range intersection.
            This is the maximum of the keys, where null represents the
            minimum value and exclusive ranges are preferred.
            </summary>
            <param name="a">The first key.</param>
            <param name="b">The second key.</param>
            <returns>The upper bound of the two keys.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.UpperIntersection(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Returns the upper bound of two keys for range union.
            This is the minimum of the keys, where null represents the
            maximum value and exclusive ranges are preferred.
            </summary>
            <param name="a">The first key.</param>
            <param name="b">The second key.</param>
            <returns>The lower bound of the two keys.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.LowerUnion(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Returns the lower bound of two keys for range union.
            This is the minimum of the keys, where null represents the
            minimum value and inclusive ranges are preferred.
            </summary>
            <param name="a">The first key.</param>
            <param name="b">The second key.</param>
            <returns>The upper bound of the two keys.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.UpperUnion(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Returns the upper bound of two keys for range union.
            This is the maximum of the keys, where null represents the
            maximum value. When two keys are equal the order of preference is:
             1. prefix
             2. inclusive
             3. exclusive.
            </summary>
            <param name="a">The first key.</param>
            <param name="b">The second key.</param>
            <returns>The lower bound of the two keys.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.CompareNonPrefixAndPrefix(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Compare a prefix and non-prefix key.
            </summary>
            <param name="nonPrefix">The non prefix key.</param>
            <param name="prefix">The prefix key.</param>
            <returns>If the first key is less than the second then -1. 0 or 1 otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.ComparePrefixes(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Compare two prefix keys.
            </summary>
            <param name="a">The first prefix key.</param>
            <param name="b">The second prefix key.</param>
            <returns>If the first key is less than the second then -1. 0 or 1 otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyRange`1.CompareKeys(Microsoft.Isam.Esent.Collections.Generic.Key{`0},Microsoft.Isam.Esent.Collections.Generic.Key{`0})">
            <summary>
            Compare two keys. The keys cannot be null but their values can be.
            Null is treated as less than any other value.
            </summary>
            <param name="a">The first key.</param>
            <param name="b">The second key.</param>
            <returns>
            The result of the comparison.
            </returns>
            <remarks>
            Null keys have different semantics depending on whether we are
            comparing min or max keys. Null values can be treated uniformly
            though.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.KeyValueExpressionEvaluator`2">
            <summary>
            Contains methods to evaluate a predicate Expression which operates
            on KeyValuePair types to determine a key range which
            contains all items matched by the predicate.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TValue">The value type.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.KeyValueExpressionEvaluator`2.KeyMemberInfo">
            <summary>
            The MemberInfo for KeyValuePair.Key. This is used to identify the key parameter when
            getting the key range.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyValueExpressionEvaluator`2.GetKeyRange(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Evaluate a predicate Expression and determine a key range which
            contains all items matched by the predicate.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <returns>
            A KeyRange that contains all items matched by the predicate. If no
            range can be determined the range will include all items.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.KeyValueExpressionEvaluator`2.KeyRangeIsExact(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Evaluate a predicate Expression and determine whether a key range can
            be found that completely satisfies the expression. If this method returns
            true then the key range returned by <see cref="M:Microsoft.Isam.Esent.Collections.Generic.KeyValueExpressionEvaluator`2.GetKeyRange(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})"/> will return
            only records which match the expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <returns>
            True if the key range returned by <see cref="M:Microsoft.Isam.Esent.Collections.Generic.KeyValueExpressionEvaluator`2.GetKeyRange(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})"/> will perfectly
            match all records found by the expression.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.LazyTransaction">
            <summary>
            Disposable wrapper for a lazy transaction. The Dispose method
            will rollback the transaction if it isn't committed. Unlike
            the Transaction class this is a struct, so it isn't as flexible,
            but it can be faster.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.LazyTransaction.sesid">
            <summary>
            The session that has the transaction.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.LazyTransaction.inTransaction">
            <summary>
            True if we are in a transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.LazyTransaction.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.LazyTransaction"/> struct.
            </summary>
            <param name="sesid">
            The sesid.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.LazyTransaction.Commit">
            <summary>
            Commit the transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.LazyTransaction.Dispose">
            <summary>
            Rollback the transaction if not already committed.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob">
            <summary>
            Represents a blob that can be persisted in a PersistentDictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.blobData">
            <summary>
            Byte array containing the Blob.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.blobHashCode">
            <summary>
            Hash code to detect illegal changes to the Blob.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the PersistentBlob class.
            </summary>
            <param name="fromBytes">The byte array to construct the Blob from.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.op_Equality(Microsoft.Isam.Esent.Collections.Generic.PersistentBlob,Microsoft.Isam.Esent.Collections.Generic.PersistentBlob)">
            <summary>
            Test for equality.
            </summary>
            <param name="lhs">Left hand side.</param>
            <param name="rhs">Right hand side.</param>
            <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.op_Inequality(Microsoft.Isam.Esent.Collections.Generic.PersistentBlob,Microsoft.Isam.Esent.Collections.Generic.PersistentBlob)">
            <summary>
            Test for inequality.
            </summary>
            <param name="lhs">Left hand side.</param>
            <param name="rhs">Right hand side.</param>
            <returns>true if the current object is not equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.GetBytes">
            <summary>
            Returns the byte array representing the blob.
            </summary>
            <returns>The byte[] array.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.GetStream">
            <summary>
            Returns a stream that can be used to read and write to the blob.
            </summary>
            <returns>The stream.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.Equals(Microsoft.Isam.Esent.Collections.Generic.PersistentBlob)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A Int32 that contains the hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentBlob.CheckImmutability">
            <summary>
            Checks that this instance hasn't changed illegally, throws an exception if it did.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2">
            <summary>
            Represents a collection of persistent keys and values.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <content>
            Represents a collection of persistent keys and values.
            These are the methods that optimize LINQ extension methods
            on a dictionary.
            </content>
            <content>
            PersistentDictionary tracing.
            </content>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.NumUpdateLocks">
            <summary>
            Number of lock objects. Keys are mapped to lock objects using their
            hash codes. Making this count a prime number reduces the chance of
            collisions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.instance">
            <summary>
            The ESENT instance this dictionary uses. An Instance object inherits
            from SafeHandle so this instance will be (eventually) terminated even
            if the dictionary isn't disposed. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.updateLocks">
            <summary>
            An update lock should be taken when the Dictionary is being updated. 
            Read operations can proceed without any locks (the cursor cache has
            its own lock to control access to the cursors). There are multiple
            update locks, which allows multiple writers. When updating a key
            take the lock which maps to key.GetHashCode() % updateLocks.Length.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.disposeLock">
            <summary>
            The disposeLock ensures safety when Disposing an object in a multi-threaded
            environment.
            All public access points of entry acquire a reader lock.
            Once this is acquired, it calls <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CheckObjectDisposed"/>.
            <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Dispose(System.Boolean)"/> enters as a writer, ensuring that
            any call in progress will complete. While it is disposing, new calls
            will be blocked.
            </summary>
            <remarks>
            Consider moving to NoRecursion.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.converters">
            <summary>
            Methods to set and retrieve data in ESE.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.schema">
            <summary>
            Meta-data information for the dictionary database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.cursors">
            <summary>
            Cache of cursors used to access the dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.databaseDirectory">
            <summary>
            Path to the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.databasePath">
            <summary>
            Path to the database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.LocalCacheSize">
            <summary>
            Set this to a non-zero value to enable local caching of values to speed up read-only access
            </summary>
            <value>If set to zero, the default, the local cache will not be used and all values will be retrieved
            from the database.  This is only intended for read-only dictionaries.  The local cache will not be
            updated if the dictionary entries are updated.</value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.LocalCacheFlushCount">
            <summary>
            This read-only property returns the number of times the local cache was flushed because it filled up
            </summary>
            <value>This can help in figuring out an appropriate local cache size</value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CurrentLocalCacheCount">
            <summary>
            This read-only property returns the current number of local cache entries in use
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.database">
            <summary>
            Database object associated with the PersistentDictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.alreadyDisposed">
            <summary>
            Tracks whether the object has been Disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="directory">
            The directory in which to create the database.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="directory">
            The directory in which to create the database.
            </param>
            <param name="compressColumns">If true, the column data compression option will be enabled when the
            database is created.  If false, the compression option is left off.  This only has an effect when
            creating the database.  It will not change the compression option in existing files.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(Microsoft.Database.Isam.Config.IConfigSet)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="customConfig">The custom config to use for creating the PersistentDictionary.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(System.String,Microsoft.Database.Isam.Config.IConfigSet)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="directory">The directory in which to create the database.</param>
            <param name="customConfig">The custom config to use for creating the PersistentDictionary.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.String)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="dictionary">
            The IDictionary whose contents are copied to the new dictionary.
            </param>
            <param name="directory">
            The directory in which to create the database.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},Microsoft.Database.Isam.Config.IConfigSet)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="dictionary">The IDictionary whose contents are copied to the new dictionary.</param>
            <param name="customConfig">The custom config to use for creating the PersistentDictionary.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.String,Microsoft.Database.Isam.Config.IConfigSet)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="dictionary">The IDictionary whose contents are copied to the new dictionary.</param>
            <param name="directory">The directory in which to create the database.</param>
            <param name="customConfig">The custom config to use for creating the PersistentDictionary.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.#ctor(System.String,Microsoft.Database.Isam.Config.IConfigSet,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Boolean)">
            <summary>
            Initializes a new instance of the PersistentDictionary class.
            </summary>
            <param name="directory">The directory to create the database in.</param>
            <param name="customConfig">The custom config to use for creating the PersistentDictionary.</param>
            <param name="dictionary">The IDictionary whose contents are copied to the new dictionary.</param>
            <param name="compressColumns">If true, the column data compression option will be enabled when the
            database is created.  If false, the compression option is left off.  This only has an effect when
            creating the database.  It will not change the compression option in existing files.</param>
            <remarks>The constructor can either initialize PersistentDictionary from a directory string, or a full custom config set. But not both.</remarks>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> is read-only.
            </summary>
            <value>
            True if the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> is read-only; otherwise, false.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the keys of the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            An <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2"/> containing the keys of the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the keys of the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <value>
            An <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2"/> containing the keys of the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the values in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <value>
            An <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> containing the values in the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the values in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <value>
            An <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> containing the values in the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Schema">
            <summary>
            Gets the schema configuration used by dictionary to store data in the underlying database.
            </summary>
            <value>
            The schema configuration used by dictionary to store data in the underlying database.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.DatabasePath">
            <summary>
            Gets the path of the directory that contains the dictionary database.
            The database consists of a set of files found in the directory.
            </summary>
            <value>
            The path of the directory that contains the dictionary database.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Database">
            <summary>
            Gets the Database object associated with the dictionary.
            Database can be used to control runtime parameters affecting the dictionary's backing database (e.g. database cache size).
            See <see cref="T:Microsoft.Database.Isam.Config.DatabaseConfig"/>.
            </summary>
            <value>
            The Database object associated with the dictionary.
            Database can be used to control runtime parameters affecting the dictionary's backing database (e.g. database cache size).
            See <see cref="T:Microsoft.Database.Isam.Config.DatabaseConfig"/>.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Item(`0)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <returns>
            The element with the specified key.
            </returns>
            <param name="key">The key of the element to get or set.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The property is retrieved and <paramref name="key"/> is not found.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> 
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.IEnumerator"/>
            object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            True if <paramref name="item"/> was successfully removed from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>;
            otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original
            <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds an item to the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the
            <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>;
            otherwise, false.
            </returns>
            <param name="item">
            The object to locate in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination
            of the elements copied from <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-The number of elements in the source <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Clear">
            <summary>
            Removes all items from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains an element with the specified key.
            </summary>
            <returns>
            True if the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains an element with the key; otherwise, false.
            </returns>
            <param name="key">The key to locate in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Add(`0,`1)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </summary>
            <returns>
            True if the element is successfully removed; otherwise, false. This method also returns false if
            <paramref name="key"/> was not found in the original <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.
            </returns>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <returns>
            True if the object that implements <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>
            contains an element with the specified key; otherwise, false.
            </returns>
            <param name="key">
            The key whose value to get.</param>
            <param name="value">When this method returns, the value associated
            with the specified key, if the key is found; otherwise, the default
            value for the type of the <paramref name="value"/> parameter. This
            parameter is passed uninitialized.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.ContainsValue(`1)">
            <summary>
            Determines whether the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains an element with the specified value.
            </summary>
            <remarks>
            This method requires a complete enumeration of all items in the dictionary so it can be much slower than
            <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.ContainsKey(`0)"/>.
            </remarks>
            <returns>
            True if the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/> contains an element with the value; otherwise, false.
            </returns>
            <param name="value">The value to locate in the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Flush">
            <summary>
            Force all changes made to this dictionary to be written to disk.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Dispose">
            <summary>
            Invokes the Dispose(bool) function.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.GetCursor">
            <summary>
            Opens a cursor on the PersistentDictionary. Used by enumerators.
            </summary>
            <returns>
            A new cursor that can be used to enumerate the PersistentDictionary.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.FreeCursor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor{`0,`1})">
            <summary>
            Frees a cursor on the PersistentDictionary. Used by enumerators.
            </summary>
            <param name="cursor">
            The cursor being freed.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.GetValueEnumerator">
            <summary>
            Returns an enumerator that iterates through the values.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the values.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.DoReadLockedOperation(System.Action)">
            <summary>
            Performs the specified action while under a ReadLock.
            </summary>
            <param name="action">The action to perform.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.ReturnReadLockedOperation``1(System.Func{``0})">
            <summary>
            Performs the specified action while under a ReadLock. This is usually done to
            prevent the underlying dictionary from being Dispose'd from underneath us.
            </summary>
            <param name="action">The action to perform.</param>
            <typeparam name="TReturn">The type of the return value of the block.</typeparam>
            <returns>Returns the value of the function.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.ColumnCanBeCompressed(Microsoft.Isam.Esent.Interop.JET_COLUMNDEF)">
            <summary>
            Determine if the given column can be compressed.
            </summary>
            <param name="columndef">The definition of the column.</param>
            <returns>True if the column can be compressed.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="userInitiatedDisposing">Whether it's a user-initiated call.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CheckDatabaseMetaData(Microsoft.Database.Isam.Config.DatabaseConfig)">
            <summary>
            Check the database meta-data. This makes sure the tables and columns exist and
            checks the type of the database.
            </summary>
            <param name="databaseConfig">The database configuration to use.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CreateDatabase(Microsoft.Database.Isam.Config.DatabaseConfig)">
            <summary>
            Create the database.
            </summary>
            <param name="databaseConfig">The database configuration to use.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CreateGlobalsTable(Microsoft.Isam.Esent.Interop.Session,Microsoft.Isam.Esent.Interop.JET_DBID)">
            <summary>
            Create the globals table.
            </summary>
            <param name="session">The session to use.</param>
            <param name="dbid">The database to create the table in.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CreateDataTable(Microsoft.Isam.Esent.Interop.Session,Microsoft.Isam.Esent.Interop.JET_DBID)">
            <summary>
            Create the data table.
            </summary>
            <param name="session">The session to use.</param>
            <param name="dbid">The database to create the table in.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.CheckObjectDisposed">
            <summary>
            Verifies that the object is not already disposed.
            This should be checked while the disposeLock ReadLock is held. If
            the read lock is not held, then the caller must acquire the lock
            first and check for a guaranteed correct value.
            (The caller may call this without the lock first to get a fast-but-
            inaccurate result).
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Thrown if the object has already been disposed.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.LockObject(System.Byte[])">
            <summary>
            Gets an object used to lock updates to the key.
            </summary>
            <param name="normalizedKey">The normalized key to be locked.</param>
            <returns>
            An object that should be locked when the key is updated.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Where(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Optimize a where statement which uses this dictionary.
            </summary>
            <param name="expression">
            The predicate determining which items should be enumerated.
            </param>
            <returns>
            An enumerator matching only the records matched by the predicate.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Reverse">
            <summary>
            Inverts the order of the elements in the dictionary.
            </summary>
            <returns>
            A sequence whose elements correspond to those of the dictionary in reverse order.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Any(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Determine whether any element of the dictionary satisfies a condition.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            True if any elements match the predicate, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.First(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Returns the first element in the dictionary that satisfies a specified condition.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The first element in the dictionary that satisfies a specified condition.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.FirstOrDefault(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Returns the first element in the dictionary that satisfies a specified condition or a default
            value if no element exists.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The first element in the dictionary that satisfies a specified condition or a default value.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Last(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Returns the last element in the dictionary that satisfies a specified condition.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The last element in the dictionary that satisfies a specified condition.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.LastOrDefault(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Returns the last element in the dictionary that satisfies a specified condition or a default
            value if no element exists.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The last element in the dictionary that satisfies a specified condition or a default value.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Single(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Returns the only element in the dictionary that satisfies a specified condition and throws
            an exception if there is more than one element.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The last element in the dictionary that satisfies a specified condition.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.SingleOrDefault(System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>
            Returns the only element of the dictionary that satisfies a specified condition or a default
            value if no such element exists; this method throws an exception if more than one element
            satisfies the condition.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The last element in the dictionary that satisfies a specified condition or a default value.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.Last">
            <summary>
            Returns the last element of the dictionary.
            </summary>
            <returns>The last element.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the dictionary is empty.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.LastOrDefault">
            <summary>
            Returns the last element of the dictionary or a default value.
            </summary>
            <returns>The last element.</returns>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.traceSwitch">
            <summary>
            PersistentDictionary tracing.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.TraceSwitch">
            <summary>
            Gets the TraceSwitch for the dictionary.
            </summary>
            <value>
            The TraceSwitch for the dictionary.
            </value>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2.TraceWhere(Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0},System.Boolean)">
            <summary>
            Trace the results of examining a Where expression.
            </summary>
            <param name="range">The calculated range.</param>
            <param name="isReversed">True if the range is to be enumerated in reverse order.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3">
            <summary>
            Base class for collections which can be returned from
            a PersistentDictionary (i.e. Keys and Values).
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="T">The type to be enumerated.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.dictionary">
            <summary>
            The dictionary being enumerated.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the PersistentDictionaryCollection class.
            </summary>
            <param name="dictionary">
            The dictionary being enumerated to provide the collection.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value>
            True if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </value>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Dictionary">
            <summary>
            Gets the dictionary being enumerated by this collection.
            </summary>
            <value>
            The dictionary being enumerated by this collection.
            </value>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Add(`2)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Contains(`2)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.CopyTo(`2[],System.Int32)">
            <summary>
            Copies the elements of the collection to an <see cref="T:System.Array"/>,
            starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from
            <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of
            <paramref name="array"/>.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/>
            is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            -or-Type T cannot be cast automatically to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCollection`3.Remove(`2)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            True if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>;
            otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original 
            <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">
            The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig">
            <summary>
            Meta-data configuration for the dictionary database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.Version">
            <summary>
            Gets a string describing the current version of the 
            PersistentDictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.GlobalsTableName">
            <summary>
            Gets the name of the globals table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.VersionColumnName">
            <summary>
            Gets the name of the version column in the globals table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.CountColumnName">
            <summary>
            Gets the name of the count column in the globals table.
            This column tracks the number of items in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.FlushColumnName">
            <summary>
            Gets the name of the flush column in the globals table.
            This column is updated when a Flush operation is performed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.KeyTypeColumnName">
            <summary>
            Gets the name of the key type column in the globals table.
            This column stores the type of the key in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.KeyTypeNameColumnName">
            <summary>
            Gets the name of the key type-name column in the globals table.
            This column stores the type of the key in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.ValueTypeColumnName">
            <summary>
            Gets the name of the value type column in the globals table.
            This column stores the type of the value in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.ValueTypeNameColumnName">
            <summary>
            Gets the name of the value type-name column in the globals table.
            This column stores the name of the type of the value in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.DataTableName">
            <summary>
            Gets the name of the data table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.KeyColumnName">
            <summary>
            Gets the name of the key column in the data table.
            This column stores the key of the item.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConfig.ValueColumnName">
            <summary>
            Gets the name of the value column in the data table.
            This column stores the value of the item.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2">
            <summary>
            Contains methods to set and get data from the ESENT
            database.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.keyColumnConverter">
            <summary>
            Column converter for the key column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.valueColumnConverter">
            <summary>
            Column converter for the value column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.MakeKey">
            <summary>
            Gets a delegate that can be used to call JetMakeKey with an object of
            type <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.SetKeyColumn">
            <summary>
            Gets a delegate that can be used to set the Key column with an object of
            type <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.SetValueColumn">
            <summary>
            Gets a delegate that can be used to set the Value column with an object of
            type <typeparamref name="TValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.RetrieveKeyColumn">
            <summary>
            Gets a delegate that can be used to retrieve the Key column, returning
            an object of type <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.RetrieveValueColumn">
            <summary>
            Gets a delegate that can be used to retrieve the Value column, returning
            an object of type <typeparamref name="TValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.KeyColtyp">
            <summary>
            Gets the JET_coltyp that the key column should have.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters`2.ValueColtyp">
            <summary>
            Gets the JET_coltyp that the value column should have.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2">
            <summary>
            Combines a JET_SESID and JET_TABLEID into a cursor which can
            retrieve data from and update a PersistentDictionary database.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.instance">
            <summary>
            The ESENT instance the cursor is opened against.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.sesid">
            <summary>
            The ESENT session the cursor is using.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.converters">
            <summary>
            Converters used to interact with ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.config">
            <summary>
            Database meta-data configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.database">
            <summary>
            The database to use.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.dbid">
            <summary>
            ID of the opened database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.globalsTable">
            <summary>
            ID of the opened globals table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.countColumn">
            <summary>
            ID of the count column in the globals table. This stores the
            number of items in the collection.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.flushColumn">
            <summary>
            ID of the flush column in the globals table. This is updated
            when we want to flush the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.dataTable">
            <summary>
            ID of the opened data table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.keyColumn">
            <summary>
            ID of the key column in the data table. This stores the keys of
            the items.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.valueColumn">
            <summary>
            ID of the value column in the data table. This stores the values
            of the items.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.#ctor(Microsoft.Isam.Esent.Interop.Instance,System.String,Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters{`0,`1},Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig)">
            <summary>
            Initializes a new instance of the PersistentDictionaryCursor class.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="database">The database to open.</param>
            <param name="converters">ESENT conversion functions.</param>
            <param name="config">The database meta-data config.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TransactionLevel">
            <summary>
            Gets the current transaction level of the
            <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2"/>.
            Requires Win10. Otherwise returns -1, since 0 and positive numbers
            are legitimate output.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.BeginTransaction">
            <summary>
            Begin a new transaction for this cursor.
            </summary>
            <returns>The new transaction.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.BeginLazyTransaction">
            <summary>
            Begin a new lazy transaction for this cursor. This is cheaper than
            <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.BeginTransaction"/> because it returns a struct.
            </summary>
            <returns>The new transaction.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.BeginReadOnlyTransaction">
            <summary>
            Begin a new transaction for this cursor. This is the cheapest
            transaction type because it returns a struct and no separate
            commit call has to be made.
            </summary>
            <returns>The new transaction.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TrySeek(`0)">
            <summary>
            Try to find the specified key. If the key is found
            the cursor will be positioned on the record with the
            key.
            </summary>
            <param name="key">The key to find.</param>
            <returns>True if the key was found, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TrySeek">
            <summary>
            Try to find the key specified with a previous call to <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.MakeKey(`0)"/>.
            If the key is found
            the cursor will be positioned on the record with the
            key.
            </summary>
            <returns>True if the key was found, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.SeekWithKeyNotFoundException(`0)">
            <summary>
            Seek for the specified key. If the key is found the
            cursor will be positioned with the record on the key.
            If the key is not found then an exception will be thrown.
            </summary>
            <param name="key">The key to find.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The key wasn't found.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.MoveBeforeFirst">
            <summary>
            Position the cursor before the first record in the table.
            A <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TryMoveNext"/> will then position the cursor
            on the first record.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TryMoveNext">
            <summary>
            Try to move to the next record.
            </summary>
            <returns>
            True if the move was successful, false if there are no more records.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.TryMovePrevious">
            <summary>
            Try to move to the previous record.
            </summary>
            <returns>
            True if the move was successful, false if there are no more records.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.SetIndexRange(Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0})">
            <summary>
            Create an index range on the cursor, controlling which records will be enumerated.
            </summary>
            <param name="range">The range to set.</param>
            <returns>False if the range is empty.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.SetReverseIndexRange(Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0})">
            <summary>
            Create an index range on the cursor, controlling which records will be enumerated.
            After this call the cursor will be positioned on range.Max and can be enumerated
            backwards to range.Min with TryMovePrevious.
            </summary>
            <param name="range">The range to set.</param>
            <returns>False if the range is empty.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.RetrieveCurrentKey">
            <summary>
            Retrieve the key column of the record the cursor is currently positioned on.
            </summary>
            <returns>The key of the record.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.RetrieveCurrentValue">
            <summary>
            Retrieve the value column of the record the cursor is currently positioned on.
            </summary>
            <returns>The value of the record.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.RetrieveCurrent">
            <summary>
            Retrieve the key and value of record the cursor is currently positioned on.
            </summary>
            <returns>The key and value of the record as a KeyValuePair.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.RetrieveCount">
            <summary>
            Retrieve the count of items in the database from the globals table.
            </summary>
            <returns>The number of items in the database.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.Insert(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Insert data into the data table. No record with the same key
            should exist.
            </summary>
            <param name="data">The data to add.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.DeleteCurrent">
            <summary>
            Delete the record the cursor is currently positioned on.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.ReplaceCurrentValue(`1)">
            <summary>
            Replace the value column of the record the cursor is currently on.
            </summary>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.Flush">
            <summary>
            Generate a null database update that we can wrap in a non-lazy transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.GetNormalizedKey">
            <summary>
            Calls JetRetrieveKey.
            </summary>
            <returns>The byte value of the normalized key.</returns> 
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.MakeKey(`0)">
            <summary>
            Calls JetMakeKey.
            </summary>
            <param name="key">The value of the key column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.MakePrefixKey(`0)">
            <summary>
            Calls JetMakeKey for a prefix.
            </summary>
            <param name="key">The value of the key column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.SetKeyColumn(`0)">
            <summary>
            Sets the key column.
            </summary>
            <param name="key">The value of the key column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.SetValue(`1)">
            <summary>
            Sets the value column.
            </summary>
            <param name="value">The value of the value column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.UpdateCount(System.Int32)">
            <summary>
            Update the count in the globals table. This is done with EscrowUpdate
            so that there won't be any write conflicts.
            </summary>
            <param name="delta">The delta to apply to the count.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2.OpenDatabase">
            <summary>
            Open the database, open the global and data tables and get the required columnids.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2">
            <summary>
            A cache of <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor`2"/>
            objects.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.MaxCachedCursors">
            <summary>
            The maximum number of cursors that can be cached.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.instance">
            <summary>
            The underlying ESENT instance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.converters">
            <summary>
            Data converters for the cursors.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.config">
            <summary>
            Configuration for the cursors.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.database">
            <summary>
            The name of the database to attach.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.cursors">
            <summary>
            The cached cursors.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.#ctor(Microsoft.Isam.Esent.Interop.Instance,System.String,Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryConverters{`0,`1},Microsoft.Isam.Esent.Collections.Generic.IPersistentDictionaryConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2"/>
            class.
            </summary>
            <param name="instance">The ESENT instance to use when opening a cursor.</param>
            <param name="database">The database to open the cursors on.</param>
            <param name="converters">The converters the cursors should use.</param>
            <param name="config">The configuration for the cursors.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.GetCursor">
            <summary>
            Gets a new cursor. This will return a cached cursor if available,
            or create a new one.
            </summary>
            <returns>A new cursor.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.FreeCursor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor{`0,`1})">
            <summary>
            Free a cursor. This will cache the cursor if the cache isn't full
            and dispose of it otherwise.
            </summary>
            <param name="cursor">The cursor to free.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.OpenCursor">
            <summary>
            Create a new cursor.
            </summary>
            <returns>A new cursor.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursorCache`2.GetStartingOffset">
            <summary>
            Get the offset in the cached buffers array to start allocating or freeing 
            buffers to. This is done so that all threads don't start operating on
            slot zero, which would increase contention.
            </summary>
            <returns>The starting offset for Allocate/Free operations.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryDefaultConfig">
            <summary>
            Default configuration used by the dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryDefaultConfig.GetDefaultDatabaseConfig">
            <summary>
            Returns the default Ese configuration params.
            </summary>
            <returns>The default configuration params.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3">
            <summary>
            A PersistentDictionary enumerator that takes a key range and a filter.
            </summary>
            <typeparam name="TKey">The type of the dictionary .key.</typeparam>
            <typeparam name="TValue">The type of the dictionary value.</typeparam>
            <typeparam name="TReturn">The return value of the enumerator.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.dictionary">
            <summary>
            The dictionary being iterated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.range">
            <summary>
            The key range being iterated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.getter">
            <summary>
            A function that gets the value from a cursor.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.predicate">
            <summary>
            A compiled predicated expression to apply to the entries. Only values that
            match the predicate are returned.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.cursor">
            <summary>
            Cursor being used to iterate the dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.isAtEnd">
            <summary>
            Set to true once we reach the end.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1},Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0},System.Func{Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor{`0,`1},`2},System.Predicate{`2})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3"/> class.
            </summary>
            <param name="dictionary">The dictionary to enumerate.</param>
            <param name="range">The range to enumerate.</param>
            <param name="getter">A function that gets the value from a cursor.</param>
            <param name="predicate">The predicate to filter items with.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.Current">
            <summary>
            Gets the current entry.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current entry.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.Reset">
            <summary>
            Resets the enumerator. The next call to <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.MoveNext"/> will move
            to the first entry.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.Dispose">
            <summary>
            Disposes of any resources the enumerator is using.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.MoveNext">
            <summary>
            Move to the next entry.
            </summary>
            <returns>
            True if an entry was found, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.MoveToMatch">
            <summary>
            Move to an entry that matches the predicate. This will only move off
            the current entry if it doesn't match the predicate.
            </summary>
            <returns>True if a matching entry was found.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryEnumerator`3.CloseCursor">
            <summary>
            Close the cursor if it is open.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile">
            <summary>
            Methods that deal with <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary`2"/>
            database files.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile.AllowReferenceTypeSerialization">
            <summary>
            This is used to get or set whether or not to allow reference type serialiation
            </summary>
            <value>False by default to disallow reference type serialization to avoid issues with persisted
            copies not containing changes made to the original object.  Set to true to allow serialization in
            cases where you don't care or if the persisted data is used in a read-only fashion when read back in
            and will not change and is thus not affected by the issue.</value>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile.Exists(System.String)">
            <summary>
            Determine if a dictionary database file exists in the specified directory.
            </summary>
            <param name="directory">The directory to look in.</param>
            <returns>True if the database file exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile.Exists(Microsoft.Database.Isam.Config.DatabaseConfig)">
            <summary>
            Determine if a dictionary database file exists in the specified directory.
            </summary>
            <param name="config">The config to use for locating dictionary files.</param>
            <returns>True if the database file exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile.DeleteFiles(System.String)">
            <summary>
            Delete all files associated with a PersistedDictionary database from
            the specified directory.
            </summary>
            <param name="directory">The directory to delete the files from.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile.DeleteFiles(Microsoft.Database.Isam.Config.DatabaseConfig)">
            <summary>
            Delete all files associated with a PersistedDictionary database from
            the specified directory.
            </summary>
            <param name="config">The config to use for locating dictionary files.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryFile.DeleteIfExists(System.String)">
            <summary>
            Delete the file if it exists.
            </summary>
            <param name="path">File path to delete.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2">
            <summary>
            Collection of the keys in a PersistentDictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the PersistentDictionaryKeyCollection class.
            </summary>
            <param name="dictionary">The dictionary containing the keys.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Reverse">
            <summary>
            Inverts the order of the elements in the collection.
            </summary>
            <returns>
            A sequence whose elements correspond to those of the collection in reverse order.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Where(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Optimize a where statement which uses this collection.
            </summary>
            <param name="expression">
            The predicate determining which items should be enumerated.
            </param>
            <returns>
            An enumerator matching only the records matched by the predicate.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Min">
            <summary>
            Returns the minimum key.
            </summary>
            <returns>The minimum key.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the key collection is empty.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Max">
            <summary>
            Returns the maximum key.
            </summary>
            <returns>The maximum key.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the key collection is empty.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Any(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Determine whether any element of the collection satisfies a condition.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            True if any elements match the predicate, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.First(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Returns the first element in the collection that satisfies a specified condition.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The first element in the collection that satisfies a specified condition.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.FirstOrDefault(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Returns the first element in the collection that satisfies a specified condition or a default
            value if no element exists.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The first element in the collection that satisfies a specified condition or a default value.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Last(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Returns the last element in the collection that satisfies a specified condition.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The last element in the collection that satisfies a specified condition.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.LastOrDefault(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Returns the last element in the collection that satisfies a specified condition or a default
            value if no element exists.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The last element in the collection that satisfies a specified condition or a default value.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Last">
            <summary>
            Returns the last element of the collection.
            </summary>
            <returns>The last element.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the collection is empty.
            </exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.LastOrDefault">
            <summary>
            Returns the last element of the collection or a default value.
            </summary>
            <returns>The last element.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.Single(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Returns the only element in the collection that satisfies a specified condition and throws
            an exception if there is more than one element.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The last element in the collection that satisfies a specified condition.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection`2.SingleOrDefault(System.Linq.Expressions.Expression{System.Predicate{`0}})">
            <summary>
            Returns the only element of the collection that satisfies a specified condition or a default
            value if no such element exists; this method throws an exception if more than one element
            satisfies the condition.
            </summary>
            <param name="expression">
            A function to test each element for a condition.
            </param>
            <returns>
            The last element in the collection that satisfies a specified condition or a default value.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqExtensions">
            <summary>
            Extension methods for LINQ queries on a dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqExtensions.Count``2(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryKeyCollection{``0,``1},System.Linq.Expressions.Expression{System.Predicate{``0}})">
            <summary>
            Returns a number that represents how many elements in the key collection satisfy a condition.
            </summary>
            <typeparam name="TKey">The type of the dictionary's keys.</typeparam>
            <typeparam name="TValue">The type of the dictionary's values.</typeparam>
            <param name="source">The dictionary key collection.</param>
            <param name="expression">A function to test each element for a condition.</param>
            <returns>The number of elements that satisfy the condition.</returns>
            <remarks>
            This method cannot be defined on the PersistentDictionaryKeyCollection because it conflicts
            with the Count property.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqExtensions.Count``2(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{``0,``1},System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{``0,``1}}})">
            <summary>
            Returns a number that represents how many elements in the dictionary satisfy a condition.
            </summary>
            <typeparam name="TKey">The type of the dictionary's keys.</typeparam>
            <typeparam name="TValue">The type of the dictionary's values.</typeparam>
            <param name="source">The dictionary.</param>
            <param name="expression">A function to test each element for a condition.</param>
            <returns>The number of elements that satisfy the condition.</returns>
            <remarks>
            This method cannot be defined on the PersistentDictionary because it conflicts
            with the Count property.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2">
            <summary>
            An object which can enumerate the specified key range in a PersistentDictionary and apply a filter.
            </summary>
            <typeparam name="TKey">The type of the key in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the value in the dictionary.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.dictionary">
            <summary>
            The dictionary being iterated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.expression">
            <summary>
            The expression describing the key range to be iterated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.predicate">
            <summary>
            A predicate to apply to the return values. Only entries that match 
            the predicate are returned.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.isReversed">
            <summary>
            A value that controls whether enumerators produced by this enumerable 
            should be reversed.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1},System.Linq.Expressions.Expression{System.Predicate{`0}},System.Predicate{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the PersistentDictionaryLinqKeyEnumerable class.
            </summary>
            <param name="dict">The dictionary to enumerate.</param>
            <param name="expression">The expression describing the range of keys to return.</param>
            <param name="predicate">Predicate to apply to the return values.</param>
            <param name="isReversed">
            A value that controls whether enumerators produced by this enumerable should be reversed.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.Reverse">
            <summary>
            Inverts the order of the elements in a sequence.
            </summary>
            <returns>
            A sequence whose elements correspond to those of the input sequence in reverse order.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.Last">
            <summary>
            Returns the last element in a sequence.
            </summary>
            <returns>
            The last element in a sequence.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyEnumerable`2.LastOrDefault">
            <summary>
            Returns the last element in a sequence that satisfies a specified condition or a default
            value if no element exists.
            </summary>
            <returns>
            The last element in a sequence that satisfies a specified condition or a default value.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2">
            <summary>
            An object which can enumerate the specified key range in a PersistentDictionary and apply a filter.
            </summary>
            <typeparam name="TKey">The type of the key in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the value in the dictionary.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.dictionary">
            <summary>
            The dictionary being iterated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.expression">
            <summary>
            The expression describing the key range to be iterated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.predicate">
            <summary>
            A predicate to apply to the return values. Only entries that match 
            the predicate are returned.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.isReversed">
            <summary>
            A value that controls whether enumerators produced by this enumerable 
            should be reversed.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1},System.Linq.Expressions.Expression{System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}}},System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}},System.Boolean)">
            <summary>
            Initializes a new instance of the PersistentDictionaryLinqKeyValueEnumerable class.
            </summary>
            <param name="dict">The dictionary to enumerate.</param>
            <param name="expression">The expression describing the range of keys to return.</param>
            <param name="predicate">Predicate to apply to the return values.</param>
            <param name="isReversed">
            A value that controls whether enumerators produced by this enumerable should be reversed.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.Reverse">
            <summary>
            Inverts the order of the elements in a sequence.
            </summary>
            <returns>
            A sequence whose elements correspond to those of the input sequence in reverse order.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.Last">
            <summary>
            Returns the last element in a sequence.
            </summary>
            <returns>
            The last element in a sequence.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryLinqKeyValueEnumerable`2.LastOrDefault">
            <summary>
            Returns the last element in a sequence that satisfies a specified condition or a default
            value if no element exists.
            </summary>
            <returns>
            The last element in a sequence that satisfies a specified condition or a default value.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryMath">
            <summary>
            A collection of math-related functions useful for PersistentDictionary utilization.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryMath.GetHashCodeForKey(System.Byte[])">
            <summary>
            Calculates a hash code for the normalized key.
            </summary>
            <param name="normalizedKey">A byte array.</param>
            <returns>A hash code based on the byte array.</returns>
            <remarks>
            This is similar to Store's IEqualityComparer&lt;object[]&gt;.GetHashCode(object[] x).
            It is not meant to be cryptographically secure.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3">
            <summary>
            A PersistentDictionary enumerator that takes a key range and a filter and enumerates
            the records from the last key to the first.
            </summary>
            <typeparam name="TKey">The type of the dictionary .key.</typeparam>
            <typeparam name="TValue">The type of the dictionary value.</typeparam>
            <typeparam name="TReturn">The return value of the enumerator.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.dictionary">
            <summary>
            The dictionary being iterated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.range">
            <summary>
            The key range being iterated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.getter">
            <summary>
            A function that gets the value from a cursor.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.predicate">
            <summary>
            A compiled predicated expression to apply to the entries. Only values that
            match the predicate are returned.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.cursor">
            <summary>
            Cursor being used to iterate the dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.isAtEnd">
            <summary>
            Set to true once we reach the end.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1},Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0},System.Func{Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryCursor{`0,`1},`2},System.Predicate{`2})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3"/> class.
            </summary>
            <param name="dictionary">The dictionary to enumerate.</param>
            <param name="range">The range to enumerate.</param>
            <param name="getter">A function that gets the value from a cursor.</param>
            <param name="predicate">The predicate to filter items with.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.Current">
            <summary>
            Gets the current entry.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current entry.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.Reset">
            <summary>
            Resets the enumerator. The next call to MoveNext will move
            to the first entry.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.Dispose">
            <summary>
            Disposes of any resources the enumerator is using.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.MoveNext">
            <summary>
            Move to the next entry.
            </summary>
            <returns>
            True if an entry was found, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.MoveToMatch">
            <summary>
            Move to an entry that matches the predicate. This will only move off
            the current entry if it doesn't match the predicate.
            </summary>
            <returns>True if a matching entry was found.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryReverseEnumerator`3.CloseCursor">
            <summary>
            Close the cursor if it is open.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryValueCollection`2">
            <summary>
            Collection of the values in a PersistentDictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryValueCollection`2.#ctor(Microsoft.Isam.Esent.Collections.Generic.PersistentDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the PersistentDictionaryValueCollection class.
            </summary>
            <param name="dictionary">The dictionary containing the values.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryValueCollection`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PersistentDictionaryValueCollection`2.Contains(`1)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1">
            <summary>
            Contains methods to evaluate a predicate Expression and determine
            a key range which contains all items matched by the predicate.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.CompareToMethod">
            <summary>
            A MethodInfo describes TKey.CompareTo(TKey).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.EqualsMethod">
            <summary>
            A MethodInfo describing TKey.Equals(TKey).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.GetKeyRange(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
            <summary>
            Evaluate a predicate Expression and determine a key range which
            contains all items matched by the predicate.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="keyMemberInfo">The name of the parameter member that is the key.</param>
            <returns>
            A KeyRange that contains all items matched by the predicate. If no
            range can be determined the range will include all items.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.KeyRangeIsExact(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
            <summary>
            Evaluate a predicate Expression and determine whether a key range can
            be found that completely satisfies the expression. If this method returns
            true then the key range returned by <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.GetKeyRange(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)"/> will return
            only records which match the expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="keyMemberInfo">The name of the parameter member that is the key.</param>
            <returns>
            True if the key range returned by <see cref="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.GetKeyRange(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)"/> will perfectly
            match all records found by the expression.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.GetKeyRangeOfSubtree(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
            <summary>
            Evaluate a predicate Expression and determine key range which
            contains all items matched by the predicate.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="keyMemberInfo">The name of the parameter member that is the key.</param>
            <returns>
            A KeyRange containing all items matched by the predicate. If no
            range can be determined the ranges will include all items.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.IsComparisonMethod(System.Linq.Expressions.MethodCallExpression,System.Reflection.MemberInfo,Microsoft.Isam.Esent.Collections.Generic.KeyRange{`0}@)">
            <summary>
            Determine if the MethodCallExpression is a key comparison method, and
            return the index range if it is.
            </summary>
            <param name="methodCall">The method call expression.</param>
            <param name="keyMemberInfo">The name of the parameter member that is the key.</param>
            <param name="keyRange">Returns the key range if this is a key comparison method.</param>
            <returns>True if the method is a key comparison method.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.GetNegationOf(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
            <summary>
            Get the negation of the given expression.
            </summary>
            <param name="expression">The expression.</param>
            <param name="keyMemberInfo">The name of the parameter member that is the key.</param>
            <returns>The negation of the given range.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.IsConstantComparison(System.Linq.Expressions.BinaryExpression,System.Reflection.MemberInfo,`0@,System.Linq.Expressions.ExpressionType@)">
            <summary>
            Determine if the current binary expression involves the Key of the parameter
            and a constant value.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="keyMemberInfo">The name of the parameter member that is the key.</param>
            <param name="value">Returns the value being compared to the key.</param>
            <param name="expressionType">Returns the type of the expression.</param>
            <returns>
            True if the expression involves the key of the parameter and a constant value.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.IsSimpleComparisonExpression(System.Linq.Expressions.BinaryExpression,System.Reflection.MemberInfo,`0@,System.Linq.Expressions.ExpressionType@)">
            <summary>
            Determine if the binary expression is comparing the key value against a constant.
            </summary>
            <param name="expression">The expression.</param>
            <param name="keyMemberInfo">The name of the parameter key.</param>
            <param name="value">Returns the constant being compared against.</param>
            <param name="expressionType">Returns the type of the comparison.</param>
            <returns>True if this expression is comparing the key value against a constant.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.IsCompareToExpression(System.Linq.Expressions.BinaryExpression,System.Reflection.MemberInfo,`0@,System.Linq.Expressions.ExpressionType@)">
            <summary>
            Determine if the binary expression is comparing the key value against a constant
            using CompareTo.
            </summary>
            <param name="expression">The expression.</param>
            <param name="keyMemberInfo">The name of the parameter key.</param>
            <param name="value">Returns the constant being compared against.</param>
            <param name="expressionType">Returns the type of the comparison.</param>
            <returns>True if this expression is comparing the key value against a constant.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.IsStringComparisonExpression(System.Linq.Expressions.BinaryExpression,System.Reflection.MemberInfo,`0@,System.Linq.Expressions.ExpressionType@)">
            <summary>
            Determine if the binary expression is comparing the key value against a string
            using the simplest (two-argument) form of String.Compare.
            </summary>
            <param name="expression">The expression.</param>
            <param name="keyMemberInfo">The name of the parameter key.</param>
            <param name="value">Returns the constant being compared against.</param>
            <param name="expressionType">Returns the type of the comparison.</param>
            <returns>True if this expression is comparing the key value against a constant string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.GetReverseExpressionType(System.Linq.Expressions.ExpressionType)">
            <summary>
            Reverse the type of the comparison. This is used when the key is on the right hand side
            of the comparison, so that 3 LT Key becomes Key GT 3.
            </summary>
            <param name="originalExpressionType">The original expression type.</param>
            <returns>The reverse of a comparison expression type or the original expression type.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.IsKeyAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
            <summary>
            Determine if the expression is accessing the key of the paramter of the expression.
            parameter.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="keyMemberInfo">The name of the parameter member that is the key.</param>
            <returns>True if the expression is accessing the key of the parameter.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.IsCompareTo(System.Linq.Expressions.Expression,System.Reflection.MemberInfo,`0@)">
            <summary>
            Determine if the expression is a call to [param].[member].CompareTo(value).
            </summary>
            <param name="expression">The expression to examine.</param>
            <param name="keyMemberInfo">The name of the key member.</param>
            <param name="value">Returns the string value being compared against.</param>
            <returns>
            True if the expression is a call to parameter.keyMember.CompareTo(value).
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.IsStringCompare(System.Linq.Expressions.Expression,System.Reflection.MemberInfo,`0@)">
            <summary>
            Determine if the expression is a call to String.Compare(key, value).
            </summary>
            <param name="expression">The expression to examine.</param>
            <param name="keyMemberInfo">The name of the key member.</param>
            <param name="value">Returns the string value being compared against.</param>
            <returns>
            True if the expression is a call to String.Compare(key, value).
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.PredicateExpressionEvaluator`1.IsStringCompareReversed(System.Linq.Expressions.Expression,System.Reflection.MemberInfo,`0@)">
            <summary>
            Determine if the expression is a call to String.Compare(value, key).
            </summary>
            <param name="expression">The expression to examine.</param>
            <param name="keyMemberInfo">The name of the key member.</param>
            <param name="value">Returns the string value being compared against.</param>
            <returns>
            True if the expression is a call to String.Compare(value, key).
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.ReadOnlyTransaction">
            <summary>
            Disposable wrapper for a read-only transaction. The Dispose method
            will commit the transaction. Unlike the Transaction class this is
            a struct, so it isn't as flexible, but it can be faster.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.ReadOnlyTransaction.sesid">
            <summary>
            The session that has the transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ReadOnlyTransaction.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Collections.Generic.ReadOnlyTransaction"/> struct.
            </summary>
            <param name="sesid">
            The sesid.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Collections.Generic.ReadOnlyTransaction.Dispose">
            <summary>
            Rollback the transaction if not already committed.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Collections.Generic.StringExpressionEvaluatorHelper">
            <summary>
            Methods for dealing with string expressions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.StringExpressionEvaluatorHelper.StringStaticCompareMethodImplementation">
            <summary>
            A MethodInfo describing the static String.Compare(string, string).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.StringExpressionEvaluatorHelper.StringStaticEqualsMethodImplementation">
            <summary>
            A MethodInfo describing the static String.Equals(string, string).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Collections.Generic.StringExpressionEvaluatorHelper.StringStartsWithMethodImplementation">
            <summary>
            A MethodInfo describing String.StartsWith(string).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.StringExpressionEvaluatorHelper.StringStaticCompareMethod">
            <summary>
            Gets a MethodInfo describing the static String.Compare(string, string).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.StringExpressionEvaluatorHelper.StringStaticEqualsMethod">
            <summary>
            Gets a MethodInfo describing the static String.Equals(string, string).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Collections.Generic.StringExpressionEvaluatorHelper.StringStartWithMethod">
            <summary>
            Gets a MethodInfo describing String.StartsWith(string, string).
            </summary>
        </member>
    </members>
</doc>
