<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Esent.Interop</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Isam.Esent.Interop.Api">
            <summary>
            Managed versions of the ESENT Api. This class contains static methods corresponding
            with the unmanaged ESENT Api. These methods throw exceptions when errors are returned.
            </summary>
            <summary>
            Helper methods for the ESENT API. These wrap JetMakeKey.
            </summary>
            <summary>
            Internal-only methods of the Api.
            </summary>
            <summary>
            Helper methods for the ESENT API. These do data conversion for
            JetMakeKey.
            </summary>
            <summary>
            Helper methods for the ESENT API. These methods deal with database
            meta-data.
            </summary>
            <summary>
            Helper methods for the ESENT API. These aren't interop versions
            of the API, but encapsulate very common uses of the functions.
            </summary>
            <summary>
            API members that are marked as obsolete.
            </summary>
            <summary>
            Helper methods for the ESENT API. These methods deal with database
            meta-data.
            </summary>
            <summary>
            Helper methods for the ESENT API. These aren't interop versions
            of the API, but encapsulate very common uses of the functions.
            </summary>
            <summary>
            Helper methods for the ESENT API. These do data conversion for
            setting columns.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.#cctor">
            <summary>
            Initializes static members of the Api class.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Api.ErrorHandler">
            <summary>
            Delegate for error handling code.
            </summary>
            <param name="error">The error that has been encountered.</param>
        </member>
        <member name="E:Microsoft.Isam.Esent.Interop.Api.HandleError">
            <summary>
            Gets or sets the ErrorHandler for all errors. This can
            be used for logging or to throw an exception.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Api.Impl">
            <summary>
            Gets or sets the IJetApi this is called for all functions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCreateInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String)">
            <summary>
            Allocates a new instance of the database engine.
            </summary>
            <param name="instance">Returns the new instance.</param>
            <param name="name">The name of the instance. Names must be unique.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCreateInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String,System.String,Microsoft.Isam.Esent.Interop.CreateInstanceGrbit)">
            <summary>
            Allocate a new instance of the database engine for use in a single
            process, with a display name specified.
            </summary>
            <param name="instance">Returns the newly create instance.</param>
            <param name="name">
            Specifies a unique string identifier for the instance to be created.
            This string must be unique within a given process hosting the
            database engine.
            </param>
            <param name="displayName">
            A display name for the instance to be created. This will be used
            in eventlog entries.
            </param>
            <param name="grbit">Creation options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)">
            <summary>
            Initialize the ESENT database engine.
            </summary>
            <param name="instance">
            The instance to initialize. If an instance hasn't been
            allocated then a new one is created and the engine
            will operate in single-instance mode.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetInit2(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,Microsoft.Isam.Esent.Interop.InitGrbit)">
            <summary>
            Initialize the ESENT database engine.
            </summary>
            <param name="instance">
            The instance to initialize. If an instance hasn't been
            allocated then a new one is created and the engine
            will operate in single-instance mode.
            </param>
            <param name="grbit">
            Initialization options.
            </param>
            <returns>
            A warning code.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetInstanceInfo(System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@)">
            <summary>
            Retrieves information about the instances that are running.
            </summary>
            <param name="numInstances">
            Returns the number of instances.
            </param>
            <param name="instances">
            Returns an array of instance info objects, one for each running
            instance.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetStopBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Prevents streaming backup-related activity from continuing on a
            specific running instance, thus ending the streaming backup in
            a predictable way.
            </summary>
            <param name="instance">The instance to use.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetStopServiceInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Prepares an instance for termination.
            </summary>
            <param name="instance">The (running) instance to use.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetTerm(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Terminate an instance that was created with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)"/> or
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String)"/>.
            </summary>
            <param name="instance">The instance to terminate.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetTerm2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.TermGrbit)">
            <summary>
            Terminate an instance that was created with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)"/> or
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String)"/>.
            </summary>
            <param name="instance">The instance to terminate.</param>
            <param name="grbit">Termination options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.Int32,System.String)">
            <summary>
            Sets database configuration options.
            </summary>
            <param name="instance">
            The instance to set the option on or <see cref="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Nil"/>
            to set the option on all instances.
            </param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to set.</param>
            <param name="paramValue">The value of the parameter to set, if the parameter is an integer type.</param>
            <param name="paramString">The value of the parameter to set, if the parameter is a string type.</param>
            <returns>An ESENT warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.String)">
            <summary>
            Sets database configuration options.
            </summary>
            <param name="instance">
            The instance to set the option on or <see cref="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Nil"/>
            to set the option on all instances.
            </param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to set.</param>
            <param name="paramValue">The value of the parameter to set, if the parameter is a JET_CALLBACK.</param>
            <param name="paramString">The value of the parameter to set, if the parameter is a string type.</param>
            <returns>An ESENT warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.IntPtr,System.String)">
            <summary>
            Sets database configuration options.
            </summary>
            <param name="instance">
            The instance to set the option on or <see cref="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Nil"/>
            to set the option on all instances.
            </param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to set.</param>
            <param name="paramValue">The value of the parameter to set, if the parameter is an integer type.</param>
            <param name="paramString">The value of the parameter to set, if the parameter is a string type.</param>
            <returns>An ESENT warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.IntPtr@,System.String@,System.Int32)">
            <summary>
            Gets database configuration options.
            </summary>
            <param name="instance">The instance to retrieve the options from.</param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to get.</param>
            <param name="paramValue">Returns the value of the parameter, if the value is an integer.</param>
            <param name="paramString">Returns the value of the parameter, if the value is a string.</param>
            <param name="maxParam">The maximum size of the parameter string.</param>
            <returns>An ESENT warning code.</returns>
            <remarks>
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_param.ErrorToString"/> passes in the error number in the paramValue, which is why it is
            a ref parameter and not an out parameter.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.Int32@,System.String@,System.Int32)">
            <summary>
            Gets database configuration options.
            </summary>
            <param name="instance">The instance to retrieve the options from.</param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to get.</param>
            <param name="paramValue">Returns the value of the parameter, if the value is an integer.</param>
            <param name="paramString">Returns the value of the parameter, if the value is a string.</param>
            <param name="maxParam">The maximum size of the parameter string.</param>
            <returns>An ESENT warning code.</returns>
            <remarks>
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_param.ErrorToString"/> passes in the error number in the paramValue, which is why it is
            a ref parameter and not an out parameter.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetVersion(Microsoft.Isam.Esent.Interop.JET_SESID,System.UInt32@)">
            <summary>
            Retrieves the version of the database engine.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="version">Returns the version number of the database engine.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCreateDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)">
            <summary>
            Creates and attaches a database file.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The path to the database file to create.</param>
            <param name="connect">The parameter is not used.</param>
            <param name="dbid">Returns the dbid of the new database.</param>
            <param name="grbit">Database creation options.</param>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.CreateDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCreateDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)">
            <summary>
            Creates and attaches a database file with a maximum database size specified.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetAttachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The path to the database file to create.</param>
            <param name="maxPages">
            The maximum size, in database pages, of the database. Passing 0 means there is
            no enforced maximum.
            </param>
            <param name="dbid">Returns the dbid of the new database.</param>
            <param name="grbit">Database creation options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)">
            <summary>
            Attaches a database file for use with a database instance. In order to use the
            database, it will need to be subsequently opened with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The database to attach.</param>
            <param name="grbit">Attach options.</param>
            <returns>An ESENT warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetAttachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)">
            <summary>
            Attaches a database file for use with a database instance. In order to use the
            database, it will need to be subsequently opened with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The database to attach.</param>
            <param name="maxPages">
            The maximum size, in database pages, of the database. Passing 0 means there is
            no enforced maximum.
            </param>
            <param name="grbit">Attach options.</param>
            <returns>An ESENT warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)">
            <summary>
            Opens a database previously attached with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/>,
            for use with a database session. This function can be called multiple times
            for the same database.
            </summary>
            <param name="sesid">The session that is opening the database.</param>
            <param name="database">The database to open.</param>
            <param name="connect">Reserved for future use.</param>
            <param name="dbid">Returns the dbid of the attached database.</param>
            <param name="grbit">Open database options.</param>
            <returns>An ESENT warning code.</returns>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.OpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCloseDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.CloseDatabaseGrbit)">
            <summary>
            Closes a database file that was previously opened with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/> or
            created with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to close.</param>
            <param name="grbit">Close options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDetachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String)">
            <summary>
            Releases a database file that was previously attached to a database session.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="database">The database to detach.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDetachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit)">
            <summary>
            Releases a database file that was previously attached to a database session.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="database">The database to detach.</param>
            <param name="grbit">Detach options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCompact(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS,Microsoft.Isam.Esent.Interop.JET_CONVERT,Microsoft.Isam.Esent.Interop.CompactGrbit)">
            <summary>
            Makes a copy of an existing database. The copy is compacted to a
            state optimal for usage. Data in the copied data will be packed
            according to the measures chosen for the indexes at index create.
            In this way, compacted data may be stored as densely as possible.
            Alternatively, compacted data may reserve space for subsequent
            record growth or index insertions.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="sourceDatabase">The source database that will be compacted.</param>
            <param name="destinationDatabase">The name to use for the compacted database.</param>
            <param name="statusCallback">
            A callback function that can be called periodically through the
            database compact operation to report progress.
            </param>
            <param name="ignored">
            This parameter is ignored and should be null.
            </param>
            <param name="grbit">Compact options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGrowDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32,System.Int32@)">
            <summary>
            Extends the size of a database that is currently open.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to grow.</param>
            <param name="desiredPages">The desired size of the database, in pages.</param>
            <param name="actualPages">
            The size of the database, in pages, after the call.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetDatabaseSize(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,System.Int32@)">
            <summary>
            Sets the size of an unopened database file.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The name of the database.</param>
            <param name="desiredPages">The desired size of the database, in pages.</param>
            <param name="actualPages">
            The size of the database, in pages, after the call.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database identifier.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_DBINFOMISC@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database identifier.</param>
            <param name="dbinfomisc">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database identifier.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetDatabaseFileInfo(System.String,System.Int32@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="databaseName">The file name of the database.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetDatabaseFileInfo(System.String,System.Int64@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="databaseName">The file name of the database.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetDatabaseFileInfo(System.String,Microsoft.Isam.Esent.Interop.JET_DBINFOMISC@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="databaseName">The file name of the database.</param>
            <param name="dbinfomisc">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)">
            <summary>
            Performs a streaming backup of an instance, including all the attached
            databases, to a directory. With multiple backup methods supported by
            the engine, this is the simplest and most encapsulated function.
            </summary>
            <param name="instance">The instance to backup.</param>
            <param name="destination">
            The directory where the backup is to be stored. If the backup path is
            null to use the function will truncate the logs, if possible.
            </param>
            <param name="grbit">Backup options.</param>
            <param name="statusCallback">
            Optional status notification callback.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRestoreInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)">
            <summary>
            Restores and recovers a streaming backup of an instance including all
            the attached databases. It is designed to work with a backup created
            with the <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)"/> function. This is the
            simplest and most encapsulated restore function.
            </summary>
            <param name="instance">
            The instance to use. The instance should not be initialized.
            Restoring the files will initialize the instance.
            </param>
            <param name="source">
            Location of the backup. The backup should have been created with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)"/>.
            </param>
            <param name="destination">
            Name of the folder where the database files from the backup set will
            be copied and recovered. If this is set to null, the database files
            will be copied and recovered to their original location.
            </param>
            <param name="statusCallback">
            Optional status notification callback.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotFreeze(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@,Microsoft.Isam.Esent.Interop.SnapshotFreezeGrbit)">
            <summary>
            Starts a snapshot. While the snapshot is in progress, no
            write-to-disk activity by the engine can take place.
            </summary>
            <param name="snapshot">The snapshot session.</param>
            <param name="numInstances">
            Returns the number of instances that are part of the snapshot session.
            </param>
            <param name="instances">
            Returns information about the instances that are part of the snapshot session.
            </param>
            <param name="grbit">
            Snapshot freeze options.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotPrepare(Microsoft.Isam.Esent.Interop.JET_OSSNAPID@,Microsoft.Isam.Esent.Interop.SnapshotPrepareGrbit)">
            <summary>
            Begins the preparations for a snapshot session. A snapshot session
            is a short time interval in which the engine does not issue any
            write IOs to disk, so that the engine can participate in a volume
            snapshot session (when driven by a snapshot writer).
            </summary>
            <param name="snapshot">Returns the ID of the snapshot session.</param>
            <param name="grbit">Snapshot options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)">
            <summary>
            Notifies the engine that it can resume normal IO operations after a
            freeze period and a successful snapshot.
            </summary>
            <param name="snapshot">The ID of the snapshot.</param>
            <param name="grbit">Thaw options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)">
            <summary>
            Initiates an external backup while the engine and database are online and active.
            </summary>
            <param name="instance">The instance prepare for backup.</param>
            <param name="grbit">Backup options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCloseFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE)">
            <summary>
            Closes a file that was opened with JetOpenFileInstance after the
            data from that file has been extracted using JetReadFileInstance.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="handle">The handle to close.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetEndExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Ends an external backup session. This API is the last API in a series
            of APIs that must be called to execute a successful online
            (non-VSS based) backup.
            </summary>
            <param name="instance">The instance to end the backup for.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetEndExternalBackupInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.EndExternalBackupGrbit)">
            <summary>
            Ends an external backup session. This API is the last API in a series
            of APIs that must be called to execute a successful online
            (non-VSS based) backup.
            </summary>
            <param name="instance">The instance to end the backup for.</param>
            <param name="grbit">Options that specify how the backup ended.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetAttachInfoInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String@,System.Int32,System.Int32@)">
            <summary>
            Used during a backup initiated by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>
            to query an instance for the names of database files that should become part of
            the backup file set. Only databases that are currently attached to the instance
            using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/> will be considered. These files may
            subsequently be opened using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)"/> and read
            using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetReadFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <remarks>
            It is important to note that this API does not return an error or warning if
            the output buffer is too small to accept the full list of files that should be
            part of the backup file set.
            </remarks>
            <param name="instance">The instance to get the information for.</param>
            <param name="files">
            Returns a list of null terminated strings describing the set of database files
            that should be a part of the backup file set. The list of strings returned in
            this buffer is in the same format as a multi-string used by the registry. Each
            null-terminated string is returned in sequence followed by a final null terminator.
            </param>
            <param name="maxChars">
            Maximum number of characters to retrieve.
            </param>
            <param name="actualChars">
            Actual size of the file list. If this is greater than maxChars
            then the list has been truncated.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetLogInfoInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String@,System.Int32,System.Int32@)">
            <summary>
            Used during a backup initiated by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>
            to query an instance for the names of database patch files and logfiles that
            should become part of the backup file set. These files may subsequently be
            opened using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)"/> and read using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetReadFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <remarks>
            It is important to note that this API does not return an error or warning if
            the output buffer is too small to accept the full list of files that should be
            part of the backup file set.
            </remarks>
            <param name="instance">The instance to get the information for.</param>
            <param name="files">
            Returns a list of null terminated strings describing the set of database patch files
            and log files that should be a part of the backup file set. The list of strings returned in
            this buffer is in the same format as a multi-string used by the registry. Each
            null-terminated string is returned in sequence followed by a final null terminator.
            </param>
            <param name="maxChars">
            Maximum number of characters to retrieve.
            </param>
            <param name="actualChars">
            Actual size of the file list. If this is greater than maxChars
            then the list has been truncated.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTruncateLogInfoInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String@,System.Int32,System.Int32@)">
            <summary>
            Used during a backup initiated by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>
            to query an instance for the names of the transaction log files that can be safely
            deleted after the backup has successfully completed.
            </summary>
            <remarks>
            It is important to note that this API does not return an error or warning if
            the output buffer is too small to accept the full list of files that should be
            part of the backup file set.
            </remarks>
            <param name="instance">The instance to get the information for.</param>
            <param name="files">
            Returns a list of null terminated strings describing the set of database log files
            that can be safely deleted after the backup completes. The list of strings returned in
            this buffer is in the same format as a multi-string used by the registry. Each
            null-terminated string is returned in sequence followed by a final null terminator.
            </param>
            <param name="maxChars">
            Maximum number of characters to retrieve.
            </param>
            <param name="actualChars">
            Actual size of the file list. If this is greater than maxChars
            then the list has been truncated.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)">
            <summary>
            Opens an attached database, database patch file, or transaction log
            file of an active instance for the purpose of performing a streaming
            fuzzy backup. The data from these files can subsequently be read
            through the returned handle using JetReadFileInstance. The returned
            handle must be closed using JetCloseFileInstance. An external backup
            of the instance must have been previously initiated using
            JetBeginExternalBackupInstance.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="file">The file to open.</param>
            <param name="handle">Returns a handle to the file.</param>
            <param name="fileSizeLow">Returns the least significant 32 bits of the file size.</param>
            <param name="fileSizeHigh">Returns the most significant 32 bits of the file size.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetReadFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves the contents of a file opened with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)"/>.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="file">The file to read from.</param>
            <param name="buffer">The buffer to read into.</param>
            <param name="bufferSize">The size of the buffer.</param>
            <param name="bytesRead">Returns the amount of data read into the buffer.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetTruncateLogInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Used during a backup initiated by JetBeginExternalBackup to delete
            any transaction log files that will no longer be needed once the
            current backup completes successfully.
            </summary>
            <param name="instance">The instance to truncate.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetBeginSession(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID@,System.String,System.String)">
            <summary>
            Initialize a new ESENT session.
            </summary>
            <param name="instance">The initialized instance to create the session in.</param>
            <param name="sesid">Returns the created session.</param>
            <param name="username">The parameter is not used.</param>
            <param name="password">The parameter is not used.</param>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.BeginSession(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID@)"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetSessionContext(Microsoft.Isam.Esent.Interop.JET_SESID,System.IntPtr)">
            <summary>
            Associates a session with the current thread using the given context
            handle. This association overrides the default engine requirement
            that a transaction for a given session must occur entirely on the
            same thread. Use <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetResetSessionContext(Microsoft.Isam.Esent.Interop.JET_SESID)"/> to remove the
            association.
            </summary>
            <param name="sesid">The session to set the context on.</param>
            <param name="context">The context to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetResetSessionContext(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Disassociates a session from the current thread. This should be
            used in conjunction with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetSessionContext(Microsoft.Isam.Esent.Interop.JET_SESID,System.IntPtr)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetEndSession(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.EndSessionGrbit)">
            <summary>
            Ends a session.
            </summary>
            <param name="sesid">The session to end.</param>
            <param name="grbit">This parameter is not used.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDupSession(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_SESID@)">
            <summary>
            Initialize a new ESE session in the same instance as the given sesid.
            </summary>
            <param name="sesid">The session to duplicate.</param>
            <param name="newSesid">Returns the new session.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.OpenTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@)">
            <summary>
            Opens a cursor on a previously created table.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="dbid">The database to open the table in.</param>
            <param name="tablename">The name of the table to open.</param>
            <param name="parameters">The parameter is not used.</param>
            <param name="parametersSize">The parameter is not used.</param>
            <param name="grbit">Table open options.</param>
            <param name="tableid">Returns the opened table.</param>
            <returns>An ESENT warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCloseTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Close an open table.
            </summary>
            <param name="sesid">The session which opened the table.</param>
            <param name="tableid">The table to close.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDupCursor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.DupCursorGrbit)">
            <summary>
            Duplicates an open cursor and returns a handle to the duplicated cursor.
            If the cursor that was duplicated was a read-only cursor then the
            duplicated cursor is also a read-only cursor.
            Any state related to constructing a search key or updating a record is
            not copied into the duplicated cursor. In addition, the location of the
            original cursor is not duplicated into the duplicated cursor. The
            duplicated cursor is always opened on the clustered index and its
            location is always on the first row of the table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to duplicate.</param>
            <param name="newTableid">The duplicated cursor.</param>
            <param name="grbit">Reserved for future use.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetComputeStats(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Walks each index of a table to exactly compute the number of entries
            in an index, and the number of distinct keys in an index. This
            information, together with the number of database pages allocated
            for an index and the current time of the computation is stored in
            index metadata in the database. This data can be subsequently retrieved
            with information operations.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table that the statistics will be computed on.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.LsGrbit)">
            <summary>
            Enables the application to associate a context handle known as
            Local Storage with a cursor or the table associated with that
            cursor. This context handle can be used by the application to
            store auxiliary data that is associated with a cursor or table.
            The application is later notified using a runtime callback when
            the context handle must be released. This makes it possible to
            associate dynamically allocated state with a cursor or table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use.</param>
            <param name="ls">The context handle to be associated with the session or cursor.</param>
            <param name="grbit">Set options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS@,Microsoft.Isam.Esent.Interop.LsGrbit)">
            <summary>
            Enables the application to retrieve the context handle known
            as Local Storage that is associated with a cursor or the table
            associated with that cursor. This context handle must have been
            previously set using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.LsGrbit)"/>. JetGetLS can also
            be used to simultaneously fetch the current context handle for
            a cursor or table and reset that context handle.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use.</param>
            <param name="ls">Returns the retrieved context handle.</param>
            <param name="grbit">Retrieve options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetCursorInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Determine whether an update of the current record of a cursor
            will result in a write conflict, based on the current update
            status of the record. It is possible that a write conflict will
            ultimately be returned even if JetGetCursorInfo returns successfully.
            because another session may update the record before the current
            session is able to update the same record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to check.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetBeginTransaction(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Causes a session to enter a transaction or create a new save point in an existing
            transaction.
            </summary>
            <param name="sesid">The session to begin the transaction for.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetBeginTransaction2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.BeginTransactionGrbit)">
            <summary>
            Causes a session to enter a transaction or create a new save point in an existing
            transaction.
            </summary>
            <param name="sesid">The session to begin the transaction for.</param>
            <param name="grbit">Transaction options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCommitTransaction(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.CommitTransactionGrbit)">
            <summary>
            Commits the changes made to the state of the database during the current save point
            and migrates them to the previous save point. If the outermost save point is committed
            then the changes made during that save point will be committed to the state of the
            database and the session will exit the transaction.
            </summary>
            <param name="sesid">The session to commit the transaction for.</param>
            <param name="grbit">Commit options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRollback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.RollbackTransactionGrbit)">
            <summary>
            Undoes the changes made to the state of the database
            and returns to the last save point. JetRollback will also close any cursors
            opened during the save point. If the outermost save point is undone, the
            session will exit the transaction.
            </summary>
            <param name="sesid">The session to rollback the transaction for.</param>
            <param name="grbit">Rollback options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCreateTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32,System.Int32,Microsoft.Isam.Esent.Interop.JET_TABLEID@)">
            <summary>
            Create an empty table. The newly created table is opened exclusively.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to create the table in.</param>
            <param name="table">The name of the table to create.</param>
            <param name="pages">Initial number of pages in the table.</param>
            <param name="density">
            The default density of the table. This is used when doing sequential inserts.
            </param>
            <param name="tableid">Returns the tableid of the new table.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetAddColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.JET_COLUMNID@)">
            <summary>
            Add a new column to an existing table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to add the column to.</param>
            <param name="column">The name of the column.</param>
            <param name="columndef">The definition of the column.</param>
            <param name="defaultValue">The default value of the column.</param>
            <param name="defaultValueSize">The size of the default value.</param>
            <param name="columnid">Returns the columnid of the new column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDeleteColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Deletes a column from a database table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">A cursor on the table to delete the column from.</param>
            <param name="column">The name of the column to be deleted.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDeleteColumn2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.DeleteColumnGrbit)">
            <summary>
            Deletes a column from a database table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">A cursor on the table to delete the column from.</param>
            <param name="column">The name of the column to be deleted.</param>
            <param name="grbit">Column deletion options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDeleteIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Deletes an index from a database table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">A cursor on the table to delete the index from.</param>
            <param name="index">The name of the index to be deleted.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDeleteTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String)">
            <summary>
            Deletes a table from a database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to delete the table from.</param>
            <param name="table">The name of the table to delete.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.CreateIndexGrbit,System.String,System.Int32,System.Int32)">
            <summary>
            Creates an index over data in an ESE database. An index can be used to locate
            specific data quickly.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexName">
            Pointer to a null-terminated string that specifies the name of the index to create.
            </param>
            <param name="grbit">Index creation options.</param>
            <param name="keyDescription">
            Pointer to a double null-terminated string of null-delimited tokens.
            </param>
            <param name="keyDescriptionLength">
            The length, in characters, of szKey including the two terminating nulls.
            </param>
            <param name="density">Initial B+ tree density.</param>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.CreateIndexGrbit,System.String,System.Int32,System.Int32)"/>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetCreateIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <remarks>
            When creating multiple indexes (i.e. with numIndexCreates
            greater than 1) this method MUST be called
            outside of any transactions and with exclusive access to the
            table. The JET_TABLEID returned by "JetCreateTable"
            will have exlusive access or the table can be opened for
            exclusive access by passing <see cref="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.DenyRead"/>
            to <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.OpenTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@)"/>.
            <para>
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/> and <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetCreateIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/>
            are very similar, and appear to take the same arguments. The difference is in the
            implementation. JetCreateIndex2 uses LCIDs for Unicode indices (e.g. 1033), while
            JetCreateIndex4 uses Locale Names (e.g. "en-US" or "de-DE". LCIDs are older, and not as well
            supported in newer version of windows.
            </para>
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.CreateIndexGrbit,System.String,System.Int32,System.Int32)"/>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetCreateIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            Also see
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOpenTemporaryTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columns">
            Column definitions for the columns created in the temporary table.
            </param>
            <param name="numColumns">Number of column definitions.</param>
            <param name="grbit">Table creation options.</param>
            <param name="tableid">
            Returns the tableid of the temporary table. Closing this tableid
            with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCloseTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/> frees the resources associated
            with the temporary table.
            </param>
            <param name="columnids">
            The output buffer that receives the array of column IDs generated
            during the creation of the temporary table. The column IDs in this
            array will exactly correspond to the input array of column definitions.
            As a result, the size of this buffer must correspond to the size of
            the input array.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            Also see
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>,
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOpenTemporaryTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columns">
            Column definitions for the columns created in the temporary table.
            </param>
            <param name="numColumns">Number of column definitions.</param>
            <param name="lcid">
            The locale ID to use to compare any Unicode key column data in the temporary table.
            Any locale may be used as long as the appropriate language pack has been installed
            on the machine.
            </param>
            <param name="grbit">Table creation options.</param>
            <param name="tableid">
            Returns the tableid of the temporary table. Closing this tableid
            with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCloseTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/> frees the resources associated
            with the temporary table.
            </param>
            <param name="columnids">
            The output buffer that receives the array of column IDs generated
            during the creation of the temporary table. The column IDs in this
            array will exactly correspond to the input array of column definitions.
            As a result, the size of this buffer must correspond to the size of
            the input array.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            Also see
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>,
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOpenTemporaryTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columns">
            Column definitions for the columns created in the temporary table.
            </param>
            <param name="numColumns">Number of column definitions.</param>
            <param name="unicodeindex">
            The Locale ID and normalization flags that will be used to compare
            any Unicode key column data in the temporary table. When this
            is not present then the default options are used.
            </param>
            <param name="grbit">Table creation options.</param>
            <param name="tableid">
            Returns the tableid of the temporary table. Closing this tableid
            with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCloseTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/> frees the resources associated
            with the temporary table.
            </param>
            <param name="columnids">
            The output buffer that receives the array of column IDs generated
            during the creation of the temporary table. The column IDs in this
            array will exactly correspond to the input array of column definitions.
            As a result, the size of this buffer must correspond to the size of
            the input array.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetCreateTableColumnIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Creates a table, adds columns, and indices on that table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to which to add the new table.</param>
            <param name="tablecreate">Object describing the table to create.</param>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetCreateTableColumnIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columndef">Filled in with information about the column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnid">The columnid of the column.</param>
            <param name="columndef">Filled in with information about the column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columnbase">Filled in with information about the column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNLIST@)">
            <summary>
            Retrieves information about all columns in the table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnName">The parameter is ignored.</param>
            <param name="columnlist">Filled in with information about the columns in the table.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.ColInfoGrbit,Microsoft.Isam.Esent.Interop.JET_COLUMNLIST@)">
            <summary>
            Retrieves information about all columns in the table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnName">The parameter is ignored.</param>
            <param name="grbit">Additional options for JetGetTableColumnInfo.</param>
            <param name="columnlist">Filled in with information about the columns in the table.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columndef">Filled in with information about the column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNLIST@)">
            <summary>
            Retrieves information about all columns in a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="columnName">This parameter is ignored.</param>
            <param name="columnlist">Filled in with information about the columns in the table.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a column in a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columnbase">Filled in with information about the columns in the table.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetObjectInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_OBJECTLIST@)">
            <summary>
            Retrieves information about database objects.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="objectlist">Filled in with information about the objects in the database.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetObjectInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_objtyp,System.String,Microsoft.Isam.Esent.Interop.JET_OBJECTINFO@)">
            <summary>
            Retrieves information about database objects.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="objtyp">The type of the object.</param>
            <param name="objectName">The object name about which to retrieve information.</param>
            <param name="objectinfo">Filled in with information about the objects in the database.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String@,System.Int32)">
             <summary>
             Determines the name of the current index of a given cursor.
             </summary>
             <remarks>
             This name is also used to later re-select that index as the current index using
             <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)"/>.  It can also be used to discover the properties of that index using
             JetGetTableIndexInfo.
            
             The returned name of the index will be an empty string if the current index is the clustered index and no
             primary index was explicitly defined.
             </remarks>
             <param name="sesid">The session to use.</param>
             <param name="tableid">The cursor to get the index name for.</param>
             <param name="indexName">Returns the name of the index.</param>
             <param name="maxNameLength">
             The maximum length of the index name. Index names are no more than
             <see cref="F:Microsoft.Isam.Esent.Interop.SystemParameters.NameMost"/> characters.
             </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_OBJECTINFO@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Default"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Name"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.TemplateTableName"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Dbid"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32[],Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceUsage"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceAlloc"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceOwned"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceAvailable"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.UInt16@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.Int32@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXLIST@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.String@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.UInt16@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.Int32@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXLIST@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.String@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRenameTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String)">
            <summary>
            Changes the name of an existing table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database containing the table.</param>
            <param name="tableName">The name of the table.</param>
            <param name="newTableName">The new name of the table.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRenameColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.String,Microsoft.Isam.Esent.Interop.RenameColumnGrbit)">
            <summary>
            Changes the name of an existing column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="name">The name of the column.</param>
            <param name="newName">The new name of the column.</param>
            <param name="grbit">Column rename options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumnDefaultValue(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.SetColumnDefaultValueGrbit)">
            <summary>
            Changes the default value of an existing column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database containing the column.</param>
            <param name="tableName">The name of the table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="data">The new default value.</param>
            <param name="dataSize">Size of the new default value.</param>
            <param name="grbit">Column default value options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGotoBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32)">
            <summary>
            Positions a cursor to an index entry for the record that is associated with
            the specified bookmark. The bookmark can be used with any index defined over
            a table. The bookmark for a record can be retrieved using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="bookmark">The bookmark used to position the cursor.</param>
            <param name="bookmarkSize">The size of the bookmark.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGotoSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit)">
            <summary>
            Positions a cursor to an index entry that is associated with the
            specified secondary index bookmark. The secondary index bookmark
            must be used with the same index over the same table from which it
            was originally retrieved. The secondary index bookmark for an index
            entry can be retrieved using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGotoSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table cursor to position.</param>
            <param name="secondaryKey">The buffer that contains the secondary key.</param>
            <param name="secondaryKeySize">The size of the secondary key.</param>
            <param name="primaryKey">The buffer that contains the primary key.</param>
            <param name="primaryKeySize">The size of the primary key.</param>
            <param name="grbit">Options for positioning the bookmark.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)">
            <summary>
            Navigate through an index. The cursor can be positioned at the start or
            end of the index and moved backwards and forwards by a specified number
            of index entries. Also see
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TryMoveFirst(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>, <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TryMoveLast(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>,
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TryMoveNext(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>, <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TryMovePrevious(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="numRows">An offset which indicates how far to move the cursor.</param>
            <param name="grbit">Move options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_Move,Microsoft.Isam.Esent.Interop.MoveGrbit)">
            <summary>
            Navigate through an index. The cursor can be positioned at the start or
            end of the index and moved backwards and forwards by a specified number
            of index entries. Also see
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TryMoveFirst(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>, <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TryMoveLast(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>,
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TryMoveNext(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>, <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TryMovePrevious(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="numRows">An offset which indicates how far to move the cursor.</param>
            <param name="grbit">Move options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetMakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs search keys that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/> and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <remarks>
            The MakeKey functions provide datatype-specific make key functionality.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="dataSize">Size of the data.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)">
            <summary>
            Efficiently positions a cursor to an index entry that matches the search
            criteria specified by the search key in that cursor and the specified
            inequality. A search key must have been previously constructed using
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetMakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)"/>.
            Also see <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TrySeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="grbit">Seek options.</param>
            <returns>An ESENT warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)">
            <summary>
            Temporarily limits the set of index entries that the cursor can walk using
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)"/> to those starting
            from the current index entry and ending at the index entry that matches the
            search criteria specified by the search key in that cursor and the specified
            bound criteria. A search key must have been previously constructed using
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetMakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)"/>.
            Also see <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.TrySetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index range on.</param>
            <param name="grbit">Index range options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetIntersectIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_INDEXRANGE[],System.Int32,Microsoft.Isam.Esent.Interop.JET_RECORDLIST@,Microsoft.Isam.Esent.Interop.IntersectIndexesGrbit)">
            <summary>
            Computes the intersection between multiple sets of index entries from different secondary
            indices over the same table. This operation is useful for finding the set of records in a
            table that match two or more criteria that can be expressed using index ranges. Also see
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.IntersectIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID[])"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="ranges">
            An the index ranges to intersect. The tableids in the ranges
            must have index ranges set on them. Use <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>
            to create an index range.
            </param>
            <param name="numRanges">
            The number of index ranges.
            </param>
            <param name="recordlist">
            Returns information about the temporary table containing the intersection results.
            </param>
            <param name="grbit">Intersection options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetCurrentIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <param name="grbit">
            Set index options.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetCurrentIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit,System.Int32)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <param name="grbit">
            Set index options.
            </param>
            <param name="itagSequence">
            Sequence number of the multi-valued column value which will be used
            to position the cursor on the new index. This parameter is only used
            in conjunction with <see cref="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.NoMove"/>. When
            this parameter is not present or is set to zero, its value is presumed
            to be 1.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetCurrentIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit,System.Int32)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <param name="indexid">
            The id of the index to select. This id can be obtained using JetGetIndexInfo
            or JetGetTableIndexInfo with the <see cref="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.IndexId"/> option.
            </param>
            <param name="grbit">
            Set index options.
            </param>
            <param name="itagSequence">
            Sequence number of the multi-valued column value which will be used
            to position the cursor on the new index. This parameter is only used
            in conjunction with <see cref="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.NoMove"/>. When
            this parameter is not present or is set to zero, its value is presumed
            to be 1.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetIndexRecordCount(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32@,System.Int32)">
            <summary>
            Counts the number of entries in the current index from the current position forward.
            The current position is included in the count. The count can be greater than the
            total number of records in the table if the current index is over a multi-valued
            column and instances of the column have multiple-values. If the table is empty,
            then 0 will be returned for the count.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to count the records in.</param>
            <param name="numRecords">Returns the number of records.</param>
            <param name="maxRecordsToCount">
            The maximum number of records to count. A value of 0 indicates that the count
            is unlimited.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetIndexRecordCount2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int64@,System.Int64)">
            <summary>
            Counts the number of entries in the current index from the current position forward.
            The current position is included in the count. The count can be greater than the
            total number of records in the table if the current index is over a multi-valued
            column and instances of the column have multiple-values. If the table is empty,
            then 0 will be returned for the count. 
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to count the records in.</param>
            <param name="numRecords">Returns the number of records.</param>
            <param name="maxRecordsToCount">
            The maximum number of records to count. A value of 0 indicates that the count
            is unlimited.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetTableSequentialGrbit)">
            <summary>
            Notifies the database engine that the application is scanning the entire
            index that the cursor is positioned on. Consequently, the methods that
            are used to access the index data will be tuned to make this scenario as
            fast as possible.
            Also see <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetResetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ResetTableSequentialGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor that will be accessing the data.</param>
            <param name="grbit">Reserved for future use.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetResetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ResetTableSequentialGrbit)">
            <summary>
            Notifies the database engine that the application is no longer scanning the
            entire index the cursor is positioned on. This call reverses a notification
            sent by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetTableSequentialGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor that was accessing the data.</param>
            <param name="grbit">Reserved for future use.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetRecordPosition(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RECPOS@)">
            <summary>
            Returns the fractional position of the current record in the current index
            in the form of a <see cref="T:Microsoft.Isam.Esent.Interop.JET_RECPOS"/> structure.
            Also see <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetGotoPosition(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RECPOS)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor positioned on the record.</param>
            <param name="recpos">Returns the approximate fractional position of the record.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGotoPosition(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RECPOS)">
            <summary>
            Moves a cursor to a new location that is a fraction of the way through
            the current index.
            Also see <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetRecordPosition(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RECPOS@)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="recpos">The approximate position to move to.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves the bookmark for the record that is associated with the index entry
            at the current position of a cursor. This bookmark can then be used to
            reposition that cursor back to the same record using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGotoBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32)"/>.
            The bookmark will be no longer than <see cref="P:Microsoft.Isam.Esent.Interop.SystemParameters.BookmarkMost"/>
            bytes.
            Also see <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.GetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the bookmark from.</param>
            <param name="bookmark">Buffer to contain the bookmark.</param>
            <param name="bookmarkSize">Size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.GetSecondaryIndexBookmarkGrbit)">
            <summary>
            Retrieves a special bookmark for the secondary index entry at the
            current position of a cursor. This bookmark can then be used to
            efficiently reposition that cursor back to the same index entry
            using JetGotoSecondaryIndexBookmark. This is most useful when
            repositioning on a secondary index that contains duplicate keys or
            that contains multiple index entries for the same record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the bookmark from.</param>
            <param name="secondaryKey">Output buffer for the secondary key.</param>
            <param name="secondaryKeySize">Size of the secondary key buffer.</param>
            <param name="actualSecondaryKeySize">Returns the size of the secondary key.</param>
            <param name="primaryKey">Output buffer for the primary key.</param>
            <param name="primaryKeySize">Size of the primary key buffer.</param>
            <param name="actualPrimaryKeySize">Returns the size of the primary key.</param>
            <param name="grbit">Options for the call.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRetrieveKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.RetrieveKeyGrbit)">
            <summary>
            Retrieves the key for the index entry at the current position of a cursor.
            Also see <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.RetrieveKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.RetrieveKeyGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the key from.</param>
            <param name="data">The buffer to retrieve the key into.</param>
            <param name="dataSize">The size of the buffer.</param>
            <param name="actualDataSize">Returns the actual size of the data.</param>
            <param name="grbit">Retrieve key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRetrieveColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit,Microsoft.Isam.Esent.Interop.JET_RETINFO)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            Alternatively, this function can retrieve a column from a record being created
            in the cursor copy buffer. This function can also retrieve column data from an
            index entry that references the current record. In addition to retrieving the
            actual column value, JetRetrieveColumn can also be used to retrieve the size
            of a column, before retrieving the column data itself so that application
            buffers can be sized appropriately.
            </summary>
            <remarks>
            The RetrieveColumnAs functions provide datatype-specific retrieval functions.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="data">The data buffer to be retrieved into.</param>
            <param name="dataSize">The size of the data buffer.</param>
            <param name="actualDataSize">Returns the actual size of the data buffer.</param>
            <param name="grbit">Retrieve column options.</param>
            <param name="retinfo">
            If pretinfo is give as NULL then the function behaves as though an itagSequence
            of 1 and an ibLongValue of 0 (zero) were given. This causes column retrieval to
            retrieve the first value of a multi-valued column, and to retrieve long data at
            offset 0 (zero).
            </param>
            <returns>An ESENT warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRetrieveColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN[],System.Int32)">
            <summary>
            Retrieves multiple column values from the current record in a
            single operation. An array of JET_RETRIEVECOLUMN structures is
            used to describe the set of column values to be retrieved, and
            to describe output buffers for each column value to be retrieved.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the data from.</param>
            <param name="retrievecolumns">
            An array of one or more <see cref="T:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN"/> objects
            describing the data to be retrieved.
            </param>
            <param name="numColumns">
            The number of entries in the columns array.
            </param>
            <returns>
            If any column retrieved is truncated due to an insufficient
            length buffer, then the API will return
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.BufferTruncated"/>. However other errors
            JET_wrnColumnNull are returned only in the error field of
            the <see cref="T:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN"/> object.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID[],System.Int32@,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN[]@,Microsoft.Isam.Esent.Interop.JET_PFNREALLOC,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit)">
            <summary>
            Efficiently retrieves a set of columns and their values from the
            current record of a cursor or the copy buffer of that cursor. The
            columns and values retrieved can be restricted by a list of
            column IDs, itagSequence numbers, and other characteristics. This
            column retrieval API is unique in that it returns information in
            dynamically allocated memory that is obtained using a
            user-provided realloc compatible callback. This new flexibility
            permits the efficient retrieval of column data with specific
            characteristics (such as size and multiplicity) that are unknown
            to the caller. This eliminates the need for the use of the discovery
            modes of JetRetrieveColumn to determine those
            characteristics in order to setup a final call to
            JetRetrieveColumn that will successfully retrieve
            the desired data.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve data from.</param>
            <param name="numColumnids">The numbers of JET_ENUMCOLUMNIDS.</param>
            <param name="columnids">
            An optional array of column IDs, each with an optional array of itagSequence
            numbers to enumerate.
            </param>
            <param name="numColumnValues">
            Returns the number of column values retrieved.
            </param>
            <param name="columnValues">
            Returns the enumerated column values.
            </param>
            <param name="allocator">
            Callback used to allocate memory.
            </param>
            <param name="allocatorContext">
            Context for the allocation callback.
            </param>
            <param name="maxDataSize">
            Sets a cap on the amount of data to return from a long text or long
            binary column. This parameter can be used to prevent the enumeration
            of an extremely large column value.
            </param>
            <param name="grbit">Retrieve options.</param>
            <returns>A warning or success.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit,System.Collections.Generic.IEnumerable{Microsoft.Isam.Esent.Interop.EnumeratedColumn}@)">
            <summary>
            Efficiently retrieves a set of columns and their values from the
            current record of a cursor or the copy buffer of that cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve data from.</param>
            <param name="grbit">Enumerate options.</param>
            <param name="enumeratedColumns">The discovered columns and their values.</param>
            <returns>A warning or success.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Deletes the current record in a database table.
            </summary>
            <param name="sesid">The session that opened the cursor.</param>
            <param name="tableid">The cursor on a database table. The current row will be deleted.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)">
            <summary>
            Prepare a cursor for update.
            </summary>
            <param name="sesid">The session which is starting the update.</param>
            <param name="tableid">The cursor to start the update for.</param>
            <param name="prep">The type of update to prepare.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            The JetUpdate function performs an update operation including inserting a new row into
            a table or updating an existing row. Deleting a table row is performed by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session which started the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="bookmark">Returns the bookmark of the updated record. This can be null.</param>
            <param name="bookmarkSize">The size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
            <remarks>
            JetUpdate is the final step in performing an insert or an update. The update is begun by
            calling <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)"/> and then by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.SetColumnGrbit,Microsoft.Isam.Esent.Interop.JET_SETINFO)"/>
            one or more times to set the record state. Finally, <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)"/>
            is called to complete the update operation. Indexes are updated only by JetUpdate or and not during JetSetColumn.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            The JetUpdate function performs an update operation including inserting a new row into
            a table or updating an existing row. Deleting a table row is performed by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session which started the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <remarks>
            JetUpdate is the final step in performing an insert or an update. The update is begun by
            calling <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)"/> and then by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.SetColumnGrbit,Microsoft.Isam.Esent.Interop.JET_SETINFO)"/>
            one or more times to set the record state. Finally, <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)"/>
            is called to complete the update operation. Indexes are updated only by JetUpdate or and not during JetSetColumn.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.SetColumnGrbit,Microsoft.Isam.Esent.Interop.JET_SETINFO)">
            <summary>
            The JetSetColumn function modifies a single column value in a modified record to be inserted or to
            update the current record. It can overwrite an existing value, add a new value to a sequence of
            values in a multi-valued column, remove a value from a sequence of values in a multi-valued column,
            or update all or part of a long value (a column of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>
            or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>).
            </summary>
            <remarks>
            The SetColumn methods provide datatype-specific overrides which may be more efficient.
            </remarks>
            <param name="sesid">The session which is performing the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
            <param name="dataSize">The size of data to set.</param>
            <param name="grbit">SetColumn options.</param>
            <param name="setinfo">Used to specify itag or long-value offset.</param>
            <returns>A warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_SETCOLUMN[],System.Int32)">
            <summary>
            Allows an application to set multiple column values in a single
            operation. An array of <see cref="T:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN"/> structures is
            used to describe the set of column values to be set, and to describe
            input buffers for each column value to be set.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the columns on.</param>
            <param name="setcolumns">
            An array of <see cref="T:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN"/> structures describing the
            data to set.
            </param>
            <param name="numColumns">
            Number of entries in the setcolumns parameter.
            </param>
            <returns>
            A warning. If the last column set has a warning, then
            this warning will be returned from JetSetColumns itself.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetLock(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.GetLockGrbit)">
            <summary>
            Explicitly reserve the ability to update a row, write lock, or to explicitly prevent a row from
            being updated by any other session, read lock. Normally, row write locks are acquired implicitly as a
            result of updating rows. Read locks are usually not required because of record versioning. However,
            in some cases a transaction may desire to explicitly lock a row to enforce serialization, or to ensure
            that a subsequent operation will succeed.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use. A lock will be acquired on the current record.</param>
            <param name="grbit">Lock options, use this to specify which type of lock to obtain.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetEscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.EscrowUpdateGrbit)">
            <summary>
            Performs an atomic addition operation on one column. This function allows
            multiple sessions to update the same record concurrently without conflicts.
            Also see
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.EscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Int32)"/>.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.EscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Int64)"/>.
            </summary>
            <param name="sesid">
            The session to use. The session must be in a transaction.
            </param>
            <param name="tableid">The cursor to update.</param>
            <param name="columnid">
            The column to update. This must be an escrow updatable column.
            </param>
            <param name="delta">The buffer containing the addend.</param>
            <param name="deltaSize">The size of the addend.</param>
            <param name="previousValue">
            An output buffer that will recieve the current value of the column. This buffer
            can be null.
            </param>
            <param name="previousValueLength">The size of the previousValue buffer.</param>
            <param name="actualPreviousValueLength">Returns the actual size of the previousValue.</param>
            <param name="grbit">Escrow update options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)">
            <summary>
            Allows the application to configure the database engine to issue
            notifications to the application for specific events. These
            notifications are associated with a specific table and remain in
            effect only until the instance containing the table is shut down
            using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetTerm(Microsoft.Isam.Esent.Interop.JET_INSTANCE)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            A cursor opened on the table that the callback should be
            registered on.
            </param>
            <param name="cbtyp">
            The callback reasons for which the application wishes to receive notifications.
            </param>
            <param name="callback">The callback function.</param>
            <param name="context">A context that will be given to the callback.</param>
            <param name="callbackId">
            A handle that can later be used to cancel the registration of the given
            callback function using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetUnregisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_HANDLE)"/>.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetUnregisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_HANDLE)">
            <summary>
            Configures the database engine to stop issuing notifications to the
            application as previously requested through
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            A cursor opened on the table that the callback should be
            registered on.
            </param>
            <param name="cbtyp">
            The callback reasons for which the application no longer wishes to receive notifications.
            </param>
            <param name="callbackId">
            The handle of the registered callback that was returned by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)"/>.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDefragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.DefragGrbit)">
            <summary>
            Starts and stops database defragmentation tasks that improves data
            organization within a database.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="dbid">The database to be defragmented.</param>
            <param name="tableName">
            Under some options defragmentation is performed for the entire database described by the given
            database ID, and other options (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>) require
            the name of the table to defragment.
            </param>
            <param name="passes">
            When starting an online defragmentation task, this parameter sets the maximum number of defragmentation
            passes. When stopping an online defragmentation task, this parameter is set to the number of passes
            performed. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="seconds">
            When starting an online defragmentation task, this parameter sets
            the maximum time for defragmentation. When stopping an online
            defragmentation task, this output buffer is set to the length of
            time used for defragmentation. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="grbit">Defragmentation options.</param>
            <returns>A warning code.</returns>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.Defragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetDefragment2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.JET_CALLBACK,Microsoft.Isam.Esent.Interop.DefragGrbit)">
            <summary>
            Starts and stops database defragmentation tasks that improves data
            organization within a database.
            </summary>
            <remarks>
            The callback passed to JetDefragment2 can be executed asynchronously.
            The GC doesn't know that the unmanaged code has a reference to the callback
            so it is important to make sure the callback isn't collected.
            </remarks>
            <param name="sesid">The session to use for the call.</param>
            <param name="dbid">The database to be defragmented.</param>
            <param name="tableName">
            Under some options defragmentation is performed for the entire database described by the given
            database ID, and other options (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>) require
            the name of the table to defragment.
            </param>
            <param name="passes">
            When starting an online defragmentation task, this parameter sets the maximum number of defragmentation
            passes. When stopping an online defragmentation task, this parameter is set to the number of passes
            performed. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="seconds">
            When starting an online defragmentation task, this parameter sets
            the maximum time for defragmentation. When stopping an online
            defragmentation task, this output buffer is set to the length of
            time used for defragmentation. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="callback">Callback function that defrag uses to report progress.</param>
            <param name="grbit">Defragmentation options.</param>
            <returns>A warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetIdle(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.IdleGrbit)">
            <summary>
            Performs idle cleanup tasks or checks the version store status in ESE.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="grbit">A combination of JetIdleGrbit flags.</param>
            <returns>An error code if the operation fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetFreeBuffer(System.IntPtr)">
            <summary>
            Frees memory that was allocated by a database engine call.
            </summary>
            <remarks>
            This method is internal because we never expose the memory
            allocated by ESENT to our callers.
            </remarks>
            <param name="buffer">
            The buffer allocated by a call to the database engine.
            <see cref="F:System.IntPtr.Zero"/> is acceptable, and will be ignored.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.Check(System.Int32)">
            <summary>
            Throw an exception if the parameter is an ESE error,
            returns a <see cref="T:Microsoft.Isam.Esent.Interop.JET_wrn"/> otherwise.
            </summary>
            <param name="err">The error code to check.</param>
            <returns>An ESENT warning code (possibly success).</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.CreateErrorException(System.Int32)">
            <summary>
            Create an error exception that should be thrown for a failure.
            </summary>
            <param name="err">The error code.</param>
            <returns>A failure exception.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TryGetLock(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.GetLockGrbit)">
            <summary>
            Explicitly reserve the ability to update a row, write lock, or to explicitly prevent a row from
            being updated by any other session, read lock. Normally, row write locks are acquired implicitly as a
            result of updating rows. Read locks are usually not required because of record versioning. However,
            in some cases a transaction may desire to explicitly lock a row to enforce serialization, or to ensure
            that a subsequent operation will succeed. 
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use. A lock will be acquired on the current record.</param>
            <param name="grbit">Lock options, use this to specify which type of lock to obtain.</param>
            <returns>
            True if the lock was obtained, false otherwise. An exception is thrown if an unexpected
            error is encountered.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Int32,Microsoft.Isam.Esent.Interop.SetColumnGrbit,Microsoft.Isam.Esent.Interop.JET_SETINFO)">
            <summary>
            The JetSetColumn function modifies a single column value in a modified record to be inserted or to
            update the current record. It can overwrite an existing value, add a new value to a sequence of
            values in a multi-valued column, remove a value from a sequence of values in a multi-valued column,
            or update all or part of a long value (a column of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>
            or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>). 
            </summary>
            <remarks>
            This is an internal-only version of the API that takes a data buffer and an offset into the buffer.
            </remarks>
            <param name="sesid">The session which is performing the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
            <param name="dataSize">The size of data to set.</param>
            <param name="dataOffset">The offset in the data buffer to set data from.</param>
            <param name="grbit">SetColumn options.</param>
            <param name="setinfo">Used to specify itag or long-value offset.</param>
            <returns>A warning value.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRetrieveColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit,Microsoft.Isam.Esent.Interop.JET_RETINFO)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            Alternatively, this function can retrieve a column from a record being created
            in the cursor copy buffer. This function can also retrieve column data from an
            index entry that references the current record. In addition to retrieving the
            actual column value, JetRetrieveColumn can also be used to retrieve the size
            of a column, before retrieving the column data itself so that application
            buffers can be sized appropriately.  
            </summary>
            <remarks>
            This is an internal method that takes a buffer offset as well as size.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="data">The data buffer to be retrieved into.</param>
            <param name="dataSize">The size of the data buffer.</param>
            <param name="dataOffset">Offset into the data buffer to read data into.</param>
            <param name="actualDataSize">Returns the actual size of the data buffer.</param>
            <param name="grbit">Retrieve column options.</param>
            <param name="retinfo">
            If pretinfo is give as NULL then the function behaves as though an itagSequence
            of 1 and an ibLongValue of 0 (zero) were given. This causes column retrieval to
            retrieve the first value of a multi-valued column, and to retrieve long data at
            offset 0 (zero).
            </param>
            <returns>An ESENT warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetRetrieveColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.IntPtr,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit,Microsoft.Isam.Esent.Interop.JET_RETINFO)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            Alternatively, this function can retrieve a column from a record being created
            in the cursor copy buffer. This function can also retrieve column data from an
            index entry that references the current record. In addition to retrieving the
            actual column value, JetRetrieveColumn can also be used to retrieve the size
            of a column, before retrieving the column data itself so that application
            buffers can be sized appropriately.  
            </summary>
            <remarks>
            This is an internal-use version that takes an IntPtr.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="data">The data buffer to be retrieved into.</param>
            <param name="dataSize">The size of the data buffer.</param>
            <param name="actualDataSize">Returns the actual size of the data buffer.</param>
            <param name="grbit">Retrieve column options.</param>
            <param name="retinfo">
            If pretinfo is give as NULL then the function behaves as though an itagSequence
            of 1 and an ibLongValue of 0 (zero) were given. This causes column retrieval to
            retrieve the first value of a multi-valued column, and to retrieve long data at
            offset 0 (zero).
            </param>
            <returns>An ESENT warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetMakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs search keys that may then be used by JetSeek and JetSetIndexRange.
            </summary>
            <remarks>
            This is an internal (unsafe) version that takes an IntPtr.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="dataSize">Size of the data.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.SetColumnGrbit,Microsoft.Isam.Esent.Interop.JET_SETINFO)">
            <summary>
            The JetSetColumn function modifies a single column value in a modified record to be inserted or to
            update the current record. It can overwrite an existing value, add a new value to a sequence of
            values in a multi-valued column, remove a value from a sequence of values in a multi-valued column,
            or update all or part of a long value, a column of type JET_coltyp.LongText or JET_coltyp.LongBinary. 
            </summary>
            <remarks>
            This method takes an IntPtr and is intended for internal use only.
            </remarks>
            <param name="sesid">The session which is performing the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
            <param name="dataSize">The size of data to set.</param>
            <param name="grbit">SetColumn options.</param>
            <param name="setinfo">Used to specify itag or long-value offset.</param>
            <returns>A warning value.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.Text.Encoding,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="encoding">The encoding used to convert the string.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Boolean,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int16,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int64,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Guid,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.DateTime,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Single,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Double,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.UInt16,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.UInt32,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.UInt64,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs a search key that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="grbit">Key options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.BeginSession(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID@)">
            <summary>
            Initialize a new ESENT session.
            </summary>
            <param name="instance">The initialized instance to create the session in.</param>
            <param name="sesid">Returns the created session.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.CreateDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)">
            <summary>
            Creates and attaches a database file.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The path to the database file to create.</param>
            <param name="dbid">Returns the dbid of the new database.</param>
            <param name="grbit">Database creation options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.OpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)">
            <summary>
            Opens a database previously attached with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/>,
            for use with a database session. This function can be called multiple times
            for the same database.
            </summary>
            <param name="sesid">The session that is opening the database.</param>
            <param name="database">The database to open.</param>
            <param name="dbid">Returns the dbid of the attached database.</param>
            <param name="grbit">Open database options.</param>
            <returns>An ESENT warning code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.OpenTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.OpenTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@)">
            <summary>
            Opens a cursor on a previously created table.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="dbid">The database to open the table in.</param>
            <param name="tablename">The name of the table to open.</param>
            <param name="grbit">Table open options.</param>
            <param name="tableid">Returns the opened table.</param>
            <returns>An ESENT warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TryOpenTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.OpenTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@)">
            <summary>
            Try to open a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to look for the table in.</param>
            <param name="tablename">The name of the table.</param>
            <param name="grbit">Table open options.</param>
            <param name="tableid">Returns the opened tableid.</param>
            <returns>True if the table was opened, false if the table doesn't exist.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.GetColumnDictionary(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Creates a dictionary which maps column names to their column IDs.
            </summary>
            <param name="sesid">The sesid to use.</param>
            <param name="tableid">The table to retrieve the information for.</param>
            <returns>A dictionary mapping column names to column IDs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.GetTableColumnid(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Get the columnid of the specified column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <returns>The id of the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.GetTableColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Iterates over all the columns in the table, returning information about each one.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve column information for.</param>
            <returns>An iterator over ColumnInfo for each column in the table.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.GetTableColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String)">
            <summary>
            Iterates over all the columns in the table, returning information about each one.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database containing the table.</param>
            <param name="tablename">The name of the table.</param>
            <returns>An iterator over ColumnInfo for each column in the table.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.GetTableIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Iterates over all the indexes in the table, returning information about each one.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information for.</param>
            <returns>An iterator over an IndexInfo for each index in the table.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.GetTableIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String)">
            <summary>
            Iterates over all the indexs in the table, returning information about each one.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database containing the table.</param>
            <param name="tablename">The name of the table.</param>
            <returns>An iterator over an IndexInfo for each index in the table.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.GetTableNames(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID)">
            <summary>
            Returns the names of the tables in the database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database containing the table.</param>
            <returns>An iterator over the names of the tables in the database.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TryJetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>true if there was no error, false if the index wasn't found. Throws for other Jet errors.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Determines the name of the current index of a given cursor.
            </summary>
            <remarks>
            This name is also used to later re-select that index as the current index using
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)"/>.  It can also be used to discover the properties of that index using
            JetGetTableIndexInfo.
            
            The returned name of the index will be null if the current index is the clustered index and no primary
            index was explicitly defined.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to get the index name for.</param>
            <returns>Returns the name of the index.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MoveBeforeFirst(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Position the cursor before the first record in the table. A
            subsequent move next will position the cursor on the first
            record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to position.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.MoveAfterLast(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Position the cursor after the last record in the table. A
            subsequent move previous will position the cursor on the
            last record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to position.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TryMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_Move,Microsoft.Isam.Esent.Interop.MoveGrbit)">
            <summary>
            Try to navigate through an index. If the navigation succeeds this
            method returns true. If there is no record to navigate to this
            method returns false; an exception will be thrown for other errors.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="move">The direction to move in.</param>
            <param name="grbit">Move options.</param>
            <returns>True if the move was successful.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TryMoveFirst(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Try to move to the first record in the table. If the table is empty this
            returns false, if a different error is encountered an exception is thrown.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <returns>True if the move was successful.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TryMoveLast(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Try to move to the last record in the table. If the table is empty this
            returns false, if a different error is encountered an exception is thrown.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <returns>True if the move was successful.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TryMoveNext(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Try to move to the next record in the table. If there is not a next record
            this returns false, if a different error is encountered an exception is thrown.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <returns>True if the move was successful.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TryMovePrevious(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Try to move to the previous record in the table. If there is not a previous record
            this returns false, if a different error is encountered an exception is thrown.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <returns>True if the move was successful.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TrySeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)">
            <summary>
            Efficiently positions a cursor to an index entry that matches the search
            criteria specified by the search key in that cursor and the specified
            inequality. A search key must have been previously constructed using JetMakeKey.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="grbit">Seek option.</param>
            <returns>True if a record matching the criteria was found.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TrySetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)">
            <summary>
            Temporarily limits the set of index entries that the cursor can walk using
            JetMove to those starting from the current index entry and ending at the index
            entry that matches the search criteria specified by the search key in that cursor
            and the specified bound criteria. A search key must have been previously constructed
            using JetMakeKey. Returns true if the index range is non-empty, false otherwise.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="grbit">Seek option.</param>
            <returns>True if the seek was successful.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.ResetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Removes an index range created with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/> or
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.TrySetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>. If no index range is present this
            method does nothing.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to remove the index range on.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.IntersectIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID[])">
            <summary>
            Intersect a group of index ranges and return the bookmarks of the records which are found
            in all the index ranges.
            Also see <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetIntersectIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_INDEXRANGE[],System.Int32,Microsoft.Isam.Esent.Interop.JET_RECORDLIST@,Microsoft.Isam.Esent.Interop.IntersectIndexesGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableids">
            The tableids to use. Each tableid must be from a different index on the same table and
            have an active index range. Use <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>
            to create an index range.
            </param>
            <returns>
            The bookmarks of the records which are found in all the index ranges. The bookmarks
            are returned in primary key order.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.TryGotoBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32)">
            <summary>
            Positions a cursor to an index entry for the record that is associated with
            the specified bookmark. The bookmark can be used with any index defined over
            a table. The bookmark for a record can be retrieved using <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="bookmark">The bookmark used to position the cursor.</param>
            <param name="bookmarkSize">The size of the bookmark.</param>
            <returns>True if a record matching the bookmark was found.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXLIST@)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="ignored">This parameter is ignored.</param>
            <param name="indexlist">Filled in with information about indexes on the table.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXLIST@)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">This parameter is ignored.</param>
            <param name="indexlist">Filled in with information about indexes on the table.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.Defragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.DefragGrbit)">
            <summary>
            Starts and stops database defragmentation tasks that improves data
            organization within a database.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="dbid">The database to be defragmented.</param>
            <param name="tableName">
            Under some options defragmentation is performed for the entire database described by the given 
            database ID, and other options (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>) require
            the name of the table to defragment.
            </param>
            <param name="grbit">Defragmentation options.</param>
            <returns>A warning code.</returns>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetDefragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Api.AsciiDecoder">
            <summary>
            Encoding to use to decode ASCII text. We use this because
            UTF8.GetString is faster than ASCII.GetString.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.GetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Retrieves the bookmark for the record that is associated with the index entry
            at the current position of a cursor. This bookmark can then be used to
            reposition that cursor back to the same record using JetGotoBookmark.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the bookmark from.</param>
            <returns>The bookmark of the record.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.GetSecondaryBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[]@)">
            <summary>
            Retrieves the bookmark for the record that is associated with the index entry
            at the current position of a cursor. This bookmark can then be used to
            reposition that cursor back to the same record using JetGotoBookmark.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the bookmark from.</param>
            <param name="primaryBookmark">Returns the primary bookmark.</param>
            <returns>The secondary bookmark of the record.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.RetrieveKeyGrbit)">
            <summary>
            Retrieves the key for the index entry at the current position of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the key from.</param>
            <param name="grbit">Retrieve key options.</param>
            <returns>The retrieved key.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnSize(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves the size of a single column value from the current record.
            The record is that record associated with the index entry at the
            current position of the cursor. Alternatively, this function can
            retrieve a column from a record being created in the cursor copy
            buffer. This function can also retrieve column data from an index
            entry that references the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The size of the column. 0 if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnSize(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Int32,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves the size of a single column value from the current record.
            The record is that record associated with the index entry at the
            current position of the cursor. Alternatively, this function can
            retrieve a column from a record being created in the cursor copy
            buffer. This function can also retrieve column data from an index
            entry that references the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="itagSequence">
            The sequence number of value in a multi-valued column.
            The array of values is one-based. The first value is
            sequence 1, not 0. If the record column has only one value then
            1 should be passed as the itagSequence.
            </param>
            <param name="grbit">Retrieve column options.</param>
            <returns>The size of the column. 0 if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit,Microsoft.Isam.Esent.Interop.JET_RETINFO)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            Alternatively, this function can retrieve a column from a record being created
            in the cursor copy buffer. This function can also retrieve column data from an
            index entry that references the current record. In addition to retrieving the
            actual column value, JetRetrieveColumn can also be used to retrieve the size
            of a column, before retrieving the column data itself so that application
            buffers can be sized appropriately.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieve column options.</param>
            <param name="retinfo">
            If pretinfo is give as NULL then the function behaves as though an itagSequence
            of 1 and an ibLongValue of 0 (zero) were given. This causes column retrieval to
            retrieve the first value of a multi-valued column, and to retrieve long data at
            offset 0 (zero).
            </param>
            <returns>The data retrieved from the column. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsString(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            The Unicode encoding is used.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as a string. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsString(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Text.Encoding)">
            <summary>
            Retrieves a string column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="encoding">The string encoding to use when converting data.</param>
            <returns>The data retrieved from the column as a string. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsString(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Text.Encoding,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a string column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="encoding">The string encoding to use when converting data.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as a string. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsInt16(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as a short. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsInt16(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves an int16 column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as a short. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsInt32(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as an int. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsInt32(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves an int32 column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as an int. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsInt64(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as a long. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsInt64(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as a long. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsFloat(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a float column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as a float. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsFloat(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a float column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as a float. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsDouble(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a double column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as a double. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsDouble(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a double column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as a double. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsBoolean(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a boolean column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as a boolean. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsBoolean(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a boolean column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as a boolean. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsByte(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a byte column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as a byte. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsByte(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a byte column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as a byte. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsGuid(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a guid column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as a guid. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsGuid(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a guid column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as a guid. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsDateTime(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a datetime column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as a <see cref="T:System.DateTime"/>. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsDateTime(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a datetime column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as a <see cref="T:System.DateTime"/>. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsUInt16(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a uint16 column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as an UInt16. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsUInt16(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a uint16 column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as an UInt16. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsUInt32(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a uint32 column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as an UInt32. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsUInt32(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a uint32 column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as an UInt32. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsUInt64(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Retrieves a uint64 column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <returns>The data retrieved from the column as an UInt64. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumnAsUInt64(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieves a uint64 column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="grbit">Retrieval options.</param>
            <returns>The data retrieved from the column as an UInt64. Null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.DeserializeObjectFromColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Deserialize an object from a column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to read from.</param>
            <param name="columnid">The column to read from.</param>
            <returns>The deserialized object. Null if the column was null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.DeserializeObjectFromColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Deserialize an object from a column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to read from.</param>
            <param name="columnid">The column to read from.</param>
            <param name="grbit">The retrieval options to use.</param>
            <returns>The deserialized object. Null if the column was null.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[])">
            <summary>
            Retrieves columns into ColumnValue objects.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor retrieve the data from. The cursor should be positioned on a record.</param>
            <param name="values">The values to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.EnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit)">
            <summary>
            Efficiently retrieves a set of columns and their values from the
            current record of a cursor or the copy buffer of that cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve data from.</param>
            <param name="grbit">Enumerate options.</param>
            <returns>The discovered columns and their values.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.CreateReturnValue``1(``0,System.Int32,Microsoft.Isam.Esent.Interop.JET_wrn,System.Int32)">
            <summary>
            Create the nullable return value.
            </summary>
            <typeparam name="T">The (struct) type to return.</typeparam>
            <param name="data">The data retrieved from the column.</param>
            <param name="dataSize">The size of the data.</param>
            <param name="wrn">The warning code from esent.</param>
            <param name="actualDataSize">The actual size of the data retireved fomr esent.</param>
            <returns>A nullable struct of type T.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.CheckDataSize(System.Int32,System.Int32)">
            <summary>
            Make sure the retrieved data size is at least as long as the expected size.
            An exception is thrown if the data isn't long enough.
            </summary>
            <param name="expectedDataSize">The expected data size.</param>
            <param name="actualDataSize">The size of the retrieved data.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.PinColumnsAndRetrieve(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN*,System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN},System.Int32,System.Int32)">
            <summary>
            Recursively pin the retrieve buffers in the JET_RETRIEVECOLUMN
            structures and then retrieve the columns. This is done to avoid
            creating GCHandles, which are expensive. This function pins
            the current retrievecolumn structure (indicated by i) and then
            recursively calls itself until all structures are pinned. This
            is done because it isn't possible to create an arbitrary number
            of pinned variables in a method.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
            <param name="tableid">
            The table to retrieve from.
            </param>
            <param name="nativeretrievecolumns">
            The nativeretrievecolumns structure.</param>
            <param name="retrievecolumns">
            The managed retrieve columns structure.
            </param>
            <param name="numColumns">The number of columns.</param>
            <param name="i">The column currently being processed.</param>
            <returns>An error code from JetRetrieveColumns.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.RetrieveUnicodeString(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Retrieve a Unicode (UTF16) string. This is optimized to take advantage of the fact
            that no conversion is needed.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve from.</param>
            <param name="columnid">The column to retrieve.</param>
            <param name="grbit">Retrieve options.</param>
            <returns>The string retrieved from the column.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.String,System.Text.Encoding)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
            <param name="encoding">The encoding used to convert the string.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.String,System.Text.Encoding,Microsoft.Isam.Esent.Interop.SetColumnGrbit)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
            <param name="encoding">The encoding used to convert the string.</param>
            <param name="grbit">SetColumn options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[])">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],Microsoft.Isam.Esent.Interop.SetColumnGrbit)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
            <param name="grbit">SetColumn options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Boolean)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Int16)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Int32)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Int64)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Guid)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.DateTime)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Single)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Double)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.EscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Int32)">
            <summary>
            Perform atomic addition on an Int32 column. The column must be of type
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>. This function allows multiple sessions to update the
            same record concurrently without conflicts.
            </summary>
            <remarks>
            This method wraps <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetEscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.EscrowUpdateGrbit)"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update.</param>
            <param name="columnid">The column to update. This must be an escrow-updatable column.</param>
            <param name="delta">The delta to apply to the column.</param>
            <returns>The current value of the column as stored in the database (versioning is ignored).</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.EscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Int64)">
            <summary>
            Perform atomic addition on an Int64 column. The column must be of type
            <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaColtyp.LongLong"/>. This function allows multiple sessions to update the
            same record concurrently without conflicts.
            </summary>
            <remarks>
            This method wraps <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetEscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.EscrowUpdateGrbit)"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update.</param>
            <param name="columnid">The column to update. This must be an escrow-updatable column.</param>
            <param name="delta">The delta to apply to the column.</param>
            <returns>The current value of the column as stored in the database (versioning is ignored).</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.UInt16)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.UInt32)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.UInt64)">
            <summary>
            Modifies a single column value in a modified record to be inserted or to
            update the current record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SerializeObjectToColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Object)">
            <summary>
            Write a serialized form of an object to a column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to write to. An update should be prepared.</param>
            <param name="columnid">The column to write to.</param>
            <param name="value">The object to write. The object must be serializable.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[])">
            <summary>
            Sets columns from ColumnValue objects.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="values">The values to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Api.CheckEncodingIsValid(System.Text.Encoding)">
            <summary>
            Verifies that the given encoding is valid for setting/retrieving data. Only
            the ASCII and Unicode encodings are allowed. An <see cref="T:System.ArgumentOutOfRangeException"/>
            is thrown if the encoding isn't valid.
            </summary>
            <param name="encoding">The encoding to check.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SystemParameters">
            <summary>
            Constants for the ESENT API. These don't have to be looked up via
            system parameters.
            </summary>
            <summary>
            This class provides static properties to set and get
            global ESENT system parameters.
            </summary>
            <summary>
            This class provides static properties to set and get
            global ESENT system parameters.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SystemParameters.BaseNameLength">
            <summary>
            The length of the prefix used to name files used by the database
            engine.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SystemParameters.NameMost">
            <summary>
            Maximum size of a table/column/index name.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SystemParameters.ColumnMost">
            <summary>
            Maximum size for columns which are not JET_coltyp.LongBinary
            or JET_coltyp.LongText.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SystemParameters.ColumnsMost">
            <summary>
            Maximum number of columns allowed in a table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SystemParameters.ColumnsFixedMost">
            <summary>
            Maximum number of fixed columns allowed in a table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SystemParameters.ColumnsVarMost">
            <summary>
            Maximum number of variable-length columns allowed
            in a table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SystemParameters.ColumnsTaggedMost">
            <summary>
            Maximum number of tagged columns allowed in a table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SystemParameters.PageTempDBSmallest">
            <summary>
            The number of pages that gives the smallest possible
            temporary database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SystemParameters.LocaleNameMaxLength">
            <summary>
            The maximum length of a locale name (LOCALE_NAME_MAX_LENGTH from winnt.h).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.CacheSizeMax">
            <summary>
            Gets or sets the maximum size of the database page cache. The size
            is in database pages. If this parameter is left to its default value, then the
            maximum size of the cache will be set to the size of physical memory when JetInit
            is called.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.CacheSize">
            <summary>
            Gets or sets the size of the database cache in pages. By default the
            database cache will automatically tune its size, setting this property
            to a non-zero value will cause the cache to adjust itself to the target
            size.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.DatabasePageSize">
            <summary>
            Gets or sets the size of the database pages, in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.CacheSizeMin">
            <summary>
            Gets or sets the minimum size of the database page cache, in database pages.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.OutstandingIOMax">
            <summary>
            Gets or sets how many database file I/Os can be queued
            per-disk in the host operating system at one time.  A larger value
            for this parameter can significantly help the performance of a large
            database application.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.StartFlushThreshold">
            <summary>
            Gets or sets the threshold at which the database page cache begins evicting pages from the
            cache to make room for pages that are not cached. When the number of page buffers in the cache
            drops below this threshold then a background process will be started to replenish that pool
            of available buffers. This threshold is always relative to the maximum cache size as set by
            JET_paramCacheSizeMax. This threshold must also always be less than the stop threshold as
            set by JET_paramStopFlushThreshold.
            <para>
            The distance height of the start threshold will determine the response time that the database
             page cache must have to produce available buffers before the application needs them. A high
            start threshold will give the background process more time to react. However, a high start
            threshold implies a higher stop threshold and that will reduce the effective size of the
            database page cache.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.StopFlushThreshold">
            <summary>
            Gets or sets the threshold at which the database page cache ends evicting pages from the cache to make
            room for pages that are not cached. When the number of page buffers in the cache rises above
            this threshold then the background process that was started to replenish that pool of available
            buffers is stopped. This threshold is always relative to the maximum cache size as set by
            JET_paramCacheSizeMax. This threshold must also always be greater than the start threshold
            as set by JET_paramStartFlushThreshold.
            <para>
            The distance between the start threshold and the stop threshold affects the efficiency with
            which database pages are flushed by the background process. A larger gap will make it
            more likely that writes to neighboring pages may be combined. However, a high stop
            threshold will reduce the effective size of the database page cache.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.MaxInstances">
            <summary>
            Gets or sets the maximum number of instances that can be created.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.EventLoggingLevel">
            <summary>
            Gets or sets the detail level of eventlog messages that are emitted
            to the eventlog by the database engine. Higher numbers will result
            in more detailed eventlog messages.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.KeyMost">
            <summary>
            Gets the maximum key size. This depends on the Esent version and database
            page size.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.ColumnsKeyMost">
            <summary>
            Gets the maximum number of components in a sort or index key.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.BookmarkMost">
            <summary>
            Gets the maximum size of a bookmark. <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.LVChunkSizeMost">
            <summary>
            Gets the lv chunks size. This depends on the database page size.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.Configuration">
            <summary>
            Gets or sets a value specifying the default values for the
            entire set of system parameters. When this parameter is set to
            a specific configuration, all system parameter values are reset
            to their default values for that configuration. If the
            configuration is set for a specific instance then global system
            parameters will not be reset to their default values.
            Small Configuration (0): The database engine is optimized for memory use. 
            Legacy Configuration (1): The database engine has its traditional defaults.
            <para>
            Supported on Windows Vista and up. Ignored on Windows XP and
            Windows Server 2003.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.EnableAdvanced">
            <summary>
            Gets or sets a value indicating whether the database engine accepts
            or rejects changes to a subset of the system parameters. This
            parameter is used in conjunction with <see cref="P:Microsoft.Isam.Esent.Interop.SystemParameters.Configuration"/> to
            prevent some system parameters from being set away from the selected
            configuration's defaults.
            <para>
            Supported on Windows Vista and up. Ignored on Windows XP and
            Windows Server 2003.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.LegacyFileNames">
            <summary>
            Gets or sets backwards compatibility with the file naming conventions of earlier releases of the database engine.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.ExceptionAction">
            <summary>
            Gets or sets the value encoding what to do with exceptions generated within JET.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.EnableFileCache">
            <summary>
            Gets or sets a value indicating whether the database engine should
            use the OS file cache for all managed files.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.EnableViewCache">
            <summary>
            Gets or sets a value indicating whether the database engine should
            use memory mapped file I/O for database files.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.SystemParameters.SetStringParameter(Microsoft.Isam.Esent.Interop.JET_param,System.String)">
            <summary>
            Set a system parameter which is a string.
            </summary>
            <param name="param">The parameter to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.SystemParameters.GetStringParameter(Microsoft.Isam.Esent.Interop.JET_param)">
            <summary>
            Get a system parameter which is a string.
            </summary>
            <param name="param">The parameter to get.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.SystemParameters.SetIntegerParameter(Microsoft.Isam.Esent.Interop.JET_param,System.Int32)">
            <summary>
            Set a system parameter which is an integer.
            </summary>
            <param name="param">The parameter to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.SystemParameters.GetIntegerParameter(Microsoft.Isam.Esent.Interop.JET_param)">
            <summary>
            Get a system parameter which is an integer.
            </summary>
            <param name="param">The parameter to get.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.SystemParameters.SetBoolParameter(Microsoft.Isam.Esent.Interop.JET_param,System.Boolean)">
            <summary>
            Set a system parameter which is a boolean.
            </summary>
            <param name="param">The parameter to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.SystemParameters.GetBoolParameter(Microsoft.Isam.Esent.Interop.JET_param)">
            <summary>
            Get a system parameter which is a boolean.
            </summary>
            <param name="param">The parameter to get.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.MinDataForXpress">
            <summary>
            Gets or sets the smallest amount of data that should be compressed with xpress compression.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.HungIOThreshold">
            <summary>
            Gets or sets the threshold for what is considered a hung IO that should be acted upon.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.HungIOActions">
            <summary>
            Gets or sets the set of actions to be taken on IOs that appear hung.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.SystemParameters.ProcessFriendlyName">
            <summary>
            Gets or sets the friendly name for this instance of the process.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.BoolColumnValue">
            <summary>
            A <see cref="T:System.Boolean"/> column value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BoolColumnValue.BoxedTrue">
            <summary>
            A boxed true value that can be used by ValueAsObject.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BoolColumnValue.BoxedFalse">
            <summary>
            A boxed false value that can be used by ValueAsObject.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.BoolColumnValue.ValueAsObject">
            <summary>
            Gets the last set or retrieved value of the column. The
            value is returned as a generic object.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.BoolColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.BoolColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.BoolColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.BoxedValueCache`1">
            <summary>
            A cache for boxed values.
            </summary>
            <typeparam name="T">The type of object to cache.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BoxedValueCache`1.NumCachedBoxedValues">
            <summary>
            Number of boxed values to cache.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BoxedValueCache`1.BoxedValues">
            <summary>
            Cached boxed values.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.BoxedValueCache`1.GetBoxedValue(System.Nullable{`0})">
            <summary>
            Gets a boxed version of the value. A cached copy is used if possible.
            </summary>
            <param name="value">The value to box.</param>
            <returns>A boxed version of the value.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ByteColumnValue">
            <summary>
            A <see cref="T:System.Byte"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ByteColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ByteColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ByteColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.BytesColumnValue">
            <summary>
            A byte array column value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BytesColumnValue.internalValue">
            <summary>
            Internal value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.BytesColumnValue.ValueAsObject">
            <summary>
            Gets the last set or retrieved value of the column. The
            value is returned as a generic object.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.BytesColumnValue.Value">
            <summary>
            Gets or sets the value of the column. Use <see cref="M:Microsoft.Isam.Esent.Interop.Api.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[])"/> to update a
            record with the column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.BytesColumnValue.Length">
            <summary>
            Gets the byte length of a column value, which is zero if column is null, otherwise
            matches the actual length of the byte array.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.BytesColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.BytesColumnValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.BytesColumnValue"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.BytesColumnValue"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.BytesColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.BytesColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Caches">
            <summary>
            Static class containing MemoryCaches for different ESENT buffers.
            Use these to avoid memory allocations when the memory will be
            used for a brief time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Caches.KeyMostMost">
            <summary>
            The maximum key size that any version of ESENT can have for
            any page size. This is also the maximum bookmark size.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Caches.LimitKeyMostMost">
            <summary>
            Reserve 1 extra space for keys made with prefix or wildcard.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Caches.MaxBuffers">
            <summary>
            The maximum number of buffers we want in a cache.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Caches.TheColumnCache">
            <summary>
            Cached buffers for columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Caches.TheBookmarkCache">
            <summary>
            Cached buffers for keys and bookmarks.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Caches.TheSecondaryBookmarkCache">
            <summary>
            Cached buffers for keys and bookmarks.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Caches.ColumnCache">
            <summary>
            Gets the cached buffers for columns.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Caches.BookmarkCache">
            <summary>
            Gets the cached buffers for keys and bookmarks.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Caches.SecondaryBookmarkCache">
            <summary>
            Gets the cached buffers for keys and secondary bookmarks.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.CallbackWrappers">
            <summary>
            <para>
            A collection of wrapped callbacks. This is used when the wrapped callback
            can be garbage collected. The wrappers should be removed from the collection
            when the callback is collected.
            </para>
            <para>
            Removing the wrappers can lead to crashes. In this case we trust
            the client code to keep its callback alive until ESENT doesn't need it any
            more. Once the wrapped callback is garbage collected we allow the wrapper
            to be collected as well. If ESENT subsequently uses the callback there will
            be a crash.
            </para>
            <para>
            The reason this is hard to deal with is that the lifetime of a JET_CALLBACK
            isn't very clear. Table callbacks can stick around until the table meta-data
            is purged, while a JetDefragment callback can be used until defrag ends. On
            the other hand, keeping the callback wrapper alive indefinitely would lead
            to unbounded memory use.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CallbackWrappers.lockObject">
            <summary>
            Used to synchronize access to this object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CallbackWrappers.callbackWrappers">
            <summary>
            A list of the wrapped callbacks.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.CallbackWrappers.Add(Microsoft.Isam.Esent.Interop.JET_CALLBACK)">
            <summary>
            Wrap a callback and returns its wrapper. If the callback is
            already wrapped then the existing wrapper is returned.
            </summary>
            <param name="callback">The callback to add.</param>
            <returns>The callback wrapper for the callback.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.CallbackWrappers.Collect">
            <summary>
            Go through the collection of callback wrappers and remove any dead callbacks.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.CallbackWrappers.TryFindWrapperFor(Microsoft.Isam.Esent.Interop.JET_CALLBACK,Microsoft.Isam.Esent.Interop.JetCallbackWrapper@)">
            <summary>
            Look in the list of callback wrappers to see if there is already an entry for 
            this callback.
            </summary>
            <param name="callback">The callback to look for.</param>
            <param name="wrapper">Returns the wrapper, if found.</param>
            <returns>True if a wrapper was found, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ColumnInfo">
            <summary>
            Information about one Esent column. This is not an interop
            class, but is used by the meta-data helper methods.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumnInfo.defaultValue">
            <summary>
            The default value of the column.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnInfo.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_coltyp,Microsoft.Isam.Esent.Interop.JET_CP,System.Int32,System.Byte[],Microsoft.Isam.Esent.Interop.ColumndefGrbit)">
            <summary>
            Initializes a new instance of the ColumnInfo class.
            </summary>
            <param name="name">Name of the column.</param>
            <param name="columnid">ID of the column.</param>
            <param name="coltyp">Type of the column.</param>
            <param name="cp">Codepage of the column.</param>
            <param name="maxLength">Maximum length of the column.</param>
            <param name="defaultValue">Column default value.</param>
            <param name="grbit">Column option.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnInfo.Name">
            <summary>
            Gets the name of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnInfo.Columnid">
            <summary>
            Gets the ID of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnInfo.Coltyp">
            <summary>
            Gets the type of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnInfo.Cp">
            <summary>
            Gets the code page of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnInfo.MaxLength">
            <summary>
            Gets the maximum length of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnInfo.DefaultValue">
            <summary>
            Gets the default value of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnInfo.Grbit">
            <summary>
            Gets the column options.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.ColumnInfo"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.ColumnInfo"/>.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ColumnInfoEnumerator">
            <summary>
            Base class for enumerators that return ColumnInfo objects. Subclasses differ
            by how they open the table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnInfoEnumerator.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.ColumnInfoEnumerator"/> class.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnInfoEnumerator.Columnlist">
            <summary>
            Gets or sets the columnlist used to retrieve data.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnInfoEnumerator.GetCurrent">
            <summary>
            Gets the entry the cursor is currently positioned on.
            </summary>
            <returns>The entry the cursor is currently positioned on.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnInfoEnumerator.GetColumnInfoFromColumnlist(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNLIST)">
            <summary>
            Create a ColumnInfo object from the data in the current JET_COLUMNLIST entry.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columnlist">The columnlist to take the data from.</param>
            <returns>A ColumnInfo object containing the information from that record.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ColumnStream">
            <summary>
            This class provides a streaming interface to a long-value column
            (i.e. a column of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/> or
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumnStream.MaxLongValueSize">
            <summary>
            The size of the biggest long-value column ESENT supports.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumnStream.sesid">
            <summary>
            Session to use.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumnStream.tableid">
            <summary>
            Cursor to use.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumnStream.columnid">
            <summary>
            Columnid to use.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumnStream.ibLongValue">
            <summary>
            Current LV offset.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnStream.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Initializes a new instance of the ColumnStream class.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use.</param>
            <param name="columnid">The columnid of the column to set/retrieve data from.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnStream.Itag">
            <summary>
            Gets or sets the itag of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnStream.CanRead">
            <summary>
            Gets a value indicating whether the stream supports reading.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnStream.CanWrite">
            <summary>
            Gets a value indicating whether the stream supports writing.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnStream.CanSeek">
            <summary>
            Gets a value indicating whether the stream supports seeking.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnStream.Position">
            <summary>
            Gets or sets the current position in the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnStream.Length">
            <summary>
            Gets the current length of the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnStream.RetrieveGrbit">
            <summary>
            Gets the options that should be used with JetRetrieveColumn.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnStream.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.ColumnStream"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.ColumnStream"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnStream.Flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current
            position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">The buffer to write from.</param>
            <param name="offset">The offset in the buffer to write.</param>
            <param name="count">The number of bytes to write.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the
            position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">The buffer to read into.</param>
            <param name="offset">The offset in the buffer to read into.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>The number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the stream.
            </summary>
            <param name="value">The desired length, in bytes.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position in the current stream.
            </summary>
            <param name="offset">Byte offset relative to the origin parameter.</param>
            <param name="origin">A SeekOrigin indicating the reference point for the new position.</param>
            <returns>The new position in the current stream.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnStream.CheckBufferArguments(System.Collections.Generic.ICollection{System.Byte},System.Int32,System.Int32)">
            <summary>
            Check the buffer arguments given to Read/Write .
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset in the buffer to read/write to.</param>
            <param name="count">The number of bytes to read/write.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ColumnValue">
            <summary>
            Base class for objects that represent a column value to be set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumnValue.grbit">
            <summary>
            Internal grbit.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.#ctor">
            <summary>
            Initializes a new instance of the ColumnValue class.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValue.Columnid">
            <summary>
            Gets or sets the columnid to be set or retrieved.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValue.ValueAsObject">
            <summary>
            Gets the last set or retrieved value of the column. The
            value is returned as a generic object.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValue.SetGrbit">
            <summary>
            Gets or sets column update options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValue.RetrieveGrbit">
            <summary>
            Gets or sets column retrieval options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValue.ItagSequence">
            <summary>
            Gets or sets the column itag sequence.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValue.Error">
            <summary>
            Gets the warning generated by retrieving or setting this column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValue.Length">
            <summary>
            Gets the byte length of a column value, which is zero if column is null, otherwise
            it matches the Size for fixed-size columns and represent the actual value byte
            length for variable sized columns (i.e. binary and string). For strings the length
            is determined in assumption two bytes per character.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.ColumnValue"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.ColumnValue"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.RetrieveColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[])">
            <summary>
            Recursive RetrieveColumns method for data pinning. This should pin a buffer and
            call the inherited RetrieveColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to retrieve the columns from.
            </param>
            <param name="columnValues">
            Column values to retrieve.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This should populate the buffer and
            call the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32,System.Void*,System.Int32,System.Boolean)">
            <summary>
            Recursive SetColumns function used to pin data.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <param name="buffer">The buffer for this object.</param>
            <param name="bufferSize">Size of the buffer for ths object.</param>
            <param name="hasValue">True if this object is non null.</param>
            <returns>An error code.</returns>
            <remarks>
            This is marked as internal because it uses the NATIVE_SETCOLUMN type
            which is also marked as internal. It should be treated as a protected
            method though.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.ValidateRetrieveGrbit(Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Validation for the requested retrieve options for the column.
            </summary>
            <param name="grbit">The retrieve options to validate.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.RetrieveTruncatedBuffers(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN*)">
            <summary>
            Retrieve the value for columns whose buffers were truncated.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to use.</param>
            <param name="columnValues">The column values.</param>
            <param name="nativeRetrievecolumns">
            The native retrieve columns that match the column values.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.MakeNativeSetColumn(Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN@)">
            <summary>
            Create a native SetColumn from this object.
            </summary>
            <param name="setcolumn">The native setcolumn structure to fill in.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValue.MakeNativeRetrieveColumn(Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN@)">
            <summary>
            Create a native RetrieveColumn from this object.
            </summary>
            <param name="retrievecolumn">
            The retrieve column structure to fill in.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ColumnValueOfStruct`1">
            <summary>
            Set a column of a struct type (e.g. <see cref="T:System.Int32"/>/<see cref="T:System.Guid"/>).
            </summary>
            <typeparam name="T">Type to set.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumnValueOfStruct`1.internalValue">
            <summary>
            Internal value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValueOfStruct`1.ValueAsObject">
            <summary>
            Gets the last set or retrieved value of the column. The
            value is returned as a generic object.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValueOfStruct`1.Value">
            <summary>
            Gets or sets the value in the struct.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.ColumnValueOfStruct`1.Length">
            <summary>
            Gets the byte length of a column value, which is zero if column is null, otherwise
            it matches the Size for this fixed-size column.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValueOfStruct`1.ToString">
            <summary>
            Gets a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.ColumnValueOfStruct`1.CheckDataCount(System.Int32)">
            <summary>
            Make sure the retrieved data is exactly the size needed for
            the structure. An exception is thrown if there is a mismatch.
            </summary>
            <param name="count">The size of the retrieved data.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Conversions">
            <summary>
            Provide methods to convert data and flags between 
            Win32 and the .NET Framework.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Conversions.CompareOptionsToLcmapFlags">
            <summary>
            Maps a CompareOption enumeration to the corresponding LCMapString flag.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Conversions.LcmapFlagsToCompareOptions">
            <summary>
            Maps an LCMapString flag to the corresponding CompareOption enumeration.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Conversions.#cctor">
            <summary>
            Initializes static members of the Conversions class. This sets up the
            conversion mapping dictionaries.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Conversions.ConvertDoubleToDateTime(System.Double)">
            <summary>
            Convert a double (OA date time format) to a DateTime. Unlike DateTime.FromOADate
            this doesn't throw exceptions.
            </summary>
            <param name="d">The double value.</param>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Conversions.CompareOptionsFromLCMapFlags(System.UInt32)">
            <summary>
            Given flags for LCMapFlags, turn them into compare options. Unknown options 
            are ignored.
            </summary>
            <param name="lcmapFlags">LCMapString flags.</param>
            <returns>CompareOptions describing the (known) flags.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Conversions.LCMapFlagsFromCompareOptions(System.Globalization.CompareOptions)">
            <summary>
            Give CompareOptions, turn them into flags from LCMapString. Unknown options are ignored.
            </summary>
            <param name="compareOptions">The options to convert.</param>
            <returns>The LCMapString flags that match the compare options. Unsupported options are ignored.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Conversions.InvertDictionary``2(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            Given a Key=>Value dictionary create an inverted dictionary that maps Value=>Key.
            </summary>
            <typeparam name="TValue">The new value type (the key of the current dictionary).</typeparam>
            <typeparam name="TKey">The new key type (the value if the current dictionary).</typeparam>
            <param name="dict">The dictionary to invert.</param>
            <returns>An inverted dictionary.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Conversions.NativeMethods">
            <summary>
            This class contains the unmanaged constants used in the conversion.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Conversions.NativeMethods.NORM_IGNORECASE">
            <summary>
            Ignore case.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Conversions.NativeMethods.NORM_IGNORENONSPACE">
            <summary>
            Ignore nonspacing chars.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Conversions.NativeMethods.NORM_IGNORESYMBOLS">
            <summary>
            Ignore symbols.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Conversions.NativeMethods.NORM_IGNOREKANATYPE">
            <summary>
            Ignore kanatype.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Conversions.NativeMethods.NORM_IGNOREWIDTH">
            <summary>
            Ignore width.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Conversions.NativeMethods.SORT_STRINGSORT">
            <summary>
            Treat punctuation the same as symbols.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Conversions.NativeMethods.LCMAP_SORTKEY">
            <summary>
            Produce a normalized wide-character sort key.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.DateTimeColumnValue">
            <summary>
            A <see cref="T:System.Guid"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.DateTimeColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.DateTimeColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.DateTimeColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.DoubleColumnValue">
            <summary>
            A <see cref="T:System.Double"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.DoubleColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.DoubleColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.DoubleColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback">
            <summary>
            A class which wraps the callback dealing with durable commits.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback.TraceSwitch">
            <summary>
            API call tracing.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback.instance">
            <summary>
            Instance associated with this callback.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback.wrappedCallback">
            <summary>
            Hold a reference to the delegate so that it doesn't get garbage-collected.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback.wrapperCallback">
            <summary>
            Hold a reference to the delegate so that it doesn't get garbage-collected.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback.#ctor(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Windows8.JET_PFNDURABLECOMMITCALLBACK)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback"/> class. 
            The constructor.
            </summary>
            <param name="instance">
            The instance with which to associate the callback.
            </param>
            <param name="wrappedCallback">
            The managed code callback to call.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback.End">
            <summary>
            Terminate the durable commit session.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback.ReleaseResource">
            <summary>
            Free the durable commit session.
            We do not try to set the instance parameter to null, since the callback is disposed after JetTerm and
            the callback cannot be set after JetTerm.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallback.NativeDurableCommitCallback(System.IntPtr,Microsoft.Isam.Esent.Interop.Windows8.NATIVE_COMMIT_ID@,System.UInt32)">
            <summary>
            The proxy callback function to call the user-defined managed delegate.
            </summary>
            <param name="instance">
            The instance.
            </param>
            <param name="commitIdSeen">
            The commit-id flushed.
            </param>
            <param name="grbit">
            Reserved currently.
            </param>
            <returns>
            An error code.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_COMMIT_ID">
            <summary>
            Information context surrounded data emitted from JET_PFNEMITLOGDATA.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_COMMIT_ID.signLog">
            <summary>
            Signature for this log sequence.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_COMMIT_ID.reserved">
            <summary>
            Reserved value for proper alignment on x86.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_COMMIT_ID.commitId">
            <summary>
            Commit-id for this commit transaction.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID">
            <summary>
            Information context surrounded data emitted from JET_PFNEMITLOGDATA.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.signLog">
            <summary>
            Signature for this log sequence.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.commitId">
            <summary>
            Commit-id for this commit transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.#ctor(Microsoft.Isam.Esent.Interop.Windows8.NATIVE_COMMIT_ID)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID"/> class.
            </summary>
            <param name="native">The native version of the structure.
            to use as the data source.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.op_LessThan(Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID)">
            <summary>
            Determine whether one commitid is before another commitid.
            </summary>
            <param name="lhs">The first commitid to compare.</param>
            <param name="rhs">The second commitid to compare.</param>
            <returns>True if lhs comes before rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.op_GreaterThan(Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID)">
            <summary>
            Determine whether one commitid is before another commitid.
            </summary>
            <param name="lhs">The first commitid to compare.</param>
            <param name="rhs">The second commitid to compare.</param>
            <returns>True if lhs comes after rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.op_LessThanOrEqual(Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID)">
            <summary>
            Determine whether one commitid is before another commitid.
            </summary>
            <param name="lhs">The first commitid to compare.</param>
            <param name="rhs">The second commitid to compare.</param>
            <returns>True if lhs comes before or equal to rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.op_GreaterThanOrEqual(Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID)">
            <summary>
            Determine whether one commitid is before another commitid.
            </summary>
            <param name="lhs">The first commitid to compare.</param>
            <param name="rhs">The second commitid to compare.</param>
            <returns>True if lhs comes after or equal to rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.op_Equality(Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID)">
            <summary>
            Determine whether one commitid is is equal to another commitid.
            </summary>
            <param name="lhs">The first commitid to compare.</param>
            <param name="rhs">The second commitid to compare.</param>
            <returns>True if lhs comes is equal to rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.op_Inequality(Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID)">
            <summary>
            Determine whether one commitid is not equal to another commitid.
            </summary>
            <param name="lhs">The first commitid to compare.</param>
            <param name="rhs">The second commitid to compare.</param>
            <returns>True if lhs comes is not equal to rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.CompareTo(Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID)">
            <summary>
            Returns a value comparing this instance with another.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>
            A signed value representing the relative positions of the instances.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.Equals(Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>true if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>true if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID.GetNativeCommitId">
            <summary>
            Converts the class to a NATIVE_COMMIT_ID structure.
            </summary>
            <returns>A NATIVE_COMMIT_ID structure.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT">
            <summary>
            The error category. The hierarchy is as follows:
            <para>
            JET_errcatError
              |
              |-- JET_errcatOperation
              |    |-- JET_errcatFatal
              |    |-- JET_errcatIO               //      bad IO issues, may or may not be transient.
              |    |-- JET_errcatResource
              |         |-- JET_errcatMemory      //      out of memory (all variants)
              |         |-- JET_errcatQuota
              |         |-- JET_errcatDisk        //      out of disk space (all variants)
              |-- JET_errcatData
              |     |-- JET_errcatCorruption
              |     |-- JET_errcatInconsistent    //      typically caused by user Mishandling
              |     |-- JET_errcatFragmentation
              |-- JET_errcatApi
                    |-- JET_errcatUsage
                    |-- JET_errcatState
                    |-- JET_errcatObsolete
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Unknown">
            <summary>
            Unknown category.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Error">
            <summary>
            A generic category.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Operation">
            <summary>
            Errors that can usually happen any time due to uncontrollable 
            conditions.  Frequently temporary, but not always.
            <para>
            Recovery: Probably retry, or eventually inform the operator.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Fatal">
            <summary>
            This sort error happens only when ESE encounters an error condition
            so grave, that we can not continue on in a safe (often transactional)
            way, and rather than corrupt data we throw errors of this category.
            <para>
            Recovery: Restart the instance or process. If the problem persists
            inform the operator.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.IO">
            <summary>
            O errors come from the OS, and are out of ESE's control, this sort
            of error is possibly temporary, possibly not.
            <para>
            Recovery: Retry.  If not resolved, ask operator about disk issue.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Resource">
            <summary>
            This is a category that indicates one of many potential out-of-resource
            conditions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Memory">
            <summary>
            Classic out of memory condition.
            <para>
            Recovery: Wait a while and retry, free up memory, or quit.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Quota">
            <summary>
            Certain "specialty" resources are in pools of a certain size, making
            it easier to detect leaks of these resources.
            <para>
            Recovery: Bug fix, generally the application should Assert() on these
            conditions so as to detect these issues during development.  However,
            in retail code, the best to hope for is to treat like Memory.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Disk">
            <summary>
            Out of disk conditions.
            <para>
            Recovery: Can retry later in the hope more space is available, or 
            ask the operator to free some disk space.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Data">
            <summary>
            A data-related error.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Corruption">
            <summary>
            My hard drive ate my homework. Classic corruption issues, frequently
            permanent without corrective action.
            <para>
            Recovery: Restore from backup, perhaps the ese utilities repair 
            operation (which only salvages what data is left / lossy) .Also
            in the case of recovery(JetInit) perhaps recovery can be performed
            by allowing data loss.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Inconsistent">
            <summary>
            This is similar to Corruption in that the database and/or log files
            are in a state that is inconsistent and unreconcilable with each 
            other. Often this is caused by application/administrator mishandling.
            <para>
            Recovery: Restore from backup, perhaps the ese utilities repair 
            operation (which only salvages what data is left / lossy). Also
            in the case of recovery(JetInit) perhaps recovery can be performed
            by allowing data loss.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Fragmentation">
            <summary>
            This is a class of errors where some persisted internal resource ran
            out.
            <para>
            Recovery: For database errors, offline defragmentation will rectify
            the problem, for the log files _first_ recover all attached databases
            to a clean shutdown, and then delete all the log files and checkpoint.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Api">
            <summary>
            A container for <see cref="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Usage"/> and <see cref="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.State"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Usage">
            <summary>
            Classic usage error, this means the client code did not pass correct
            arguments to the JET API.  This error will likely not go away with
            retry.
            <para>
            Recovery: Generally speaking client code should Assert() this class
            of errors is not returned, so issues can be caught during development.
            In retail, the app will probably have little option but to return
            the issue up to the operator.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.State">
            <summary>
            This is the classification for different signals the API could return
            describe the state of the database, a classic case is JET_errRecordNotFound
            which can be returned by JetSeek() when the record you asked for
            was not found.
            <para>
            Recovery: Not really relevant, depends greatly on the API.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Obsolete">
            <summary>
            The error is recognized as a valid error, but is not expected to be
            returned by this version of the API.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRCAT.Max">
            <summary>
            The maximum value for the enum. This should not be used.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC">
            <summary>
            The native version of the JET_ERRINFOBASIC structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC.HierarchySize">
            <summary>
            The number of elements in the error hierarchy.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC.SourceFileLength">
            <summary>
            The length of the source file where the error occurred.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC.errValue">
            <summary>
            The error value for the requested info level.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC.errcatMostSpecific">
            <summary>
            The most specific category of the error.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC.rgCategoricalHierarchy">
            <summary>
            Hierarchy of error categories. Position 0 is the highest level in the hierarchy, and the rest are JET_errcatUnknown.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC.lSourceLine">
            <summary>
            The source file line for the requested info level.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC.rgszSourceFile">
            <summary>
            The source file name for the requested info level.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC">
            <summary>
            Contains the information about an error.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.errorValue">
            <summary>
            The error value for the requested info level.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.errorcatMostSpecific">
            <summary>
            The most specific category of the error.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.arrayCategoricalHierarchy">
            <summary>
            Hierarchy of error categories. Position 0 is the highest level in the hierarchy, and the rest are JET_errcatUnknown.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.sourceLine">
            <summary>
            The source file line for the requested info level.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.sourceFile">
            <summary>
            The source file name for the requested info level.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.#ctor">
            <summary>
            Initializes a new instance of the JET_ERRINFOBASIC class.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.errValue">
            <summary>
            Gets or sets the error value for the requested info level.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.errcat">
            <summary>
            Gets or sets the category of the error.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.rgCategoricalHierarchy">
            <summary>
            Gets or sets the hierarchy of errors. Position 0 is the highest level in the hierarchy, and the rest are JET_errcatUnknown.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.lSourceLine">
            <summary>
            Gets or sets the source file line for the requested info level.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.rgszSourceFile">
            <summary>
            Gets or sets the source file name for the requested info level.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.ContentEquals(Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.GetNativeErrInfo">
            <summary>
            Gets the native (interop) version of this object.
            </summary>
            <returns>The native (interop) version of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC.SetFromNative(Microsoft.Isam.Esent.Interop.Windows8.NATIVE_ERRINFOBASIC@)">
            <summary>
            Sets the fields of the object from a native JET_ERRINFOBASIC struct.
            </summary>
            <param name="value">
            The native errinfobasic to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JET_ErrorInfo">
            <summary>
            The valid values of InfoLevel for JetGetErrorInfo.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_ErrorInfo.SpecificErr">
            <summary>
            Retrieve information about the specific error passed in pvContext.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JetRelop">
            <summary>
            Comparison operation for filter defined as <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetRelop.Equals">
            <summary>
            Accept only rows which have column value equal to the given value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetRelop.PrefixEquals">
            <summary>
            Accept only rows which have columns whose prefix matches the given value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetRelop.NotEquals">
            <summary>
            Accept only rows which have column value not equal to the given value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetRelop.LessThanOrEqual">
            <summary>
            Accept only rows which have column value less than or equal a given value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetRelop.LessThan">
            <summary>
            Accept only rows which have column value less than a given value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetRelop.GreaterThanOrEqual">
            <summary>
            Accept only rows which have column value greater than or equal a given value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetRelop.GreaterThan">
            <summary>
            Accept only rows which have column value greater than a given value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetRelop.BitmaskEqualsZero">
            <summary>
            Accept only rows which have column value AND'ed with a given bitmask yielding zero.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetRelop.BitmaskNotEqualsZero">
            <summary>
            Accept only rows which have column value AND'ed with a given bitmask yielding non-zero.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_COLUMN">
            <summary>
            The native version of the <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN"/> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_COLUMN.columnid">
            <summary>
            The column identifier for the column to check.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_COLUMN.relop">
            <summary>
            The comparison operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_COLUMN.pvData">
            <summary>
            A pointer to a value to compare.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_COLUMN.cbData">
            <summary>
            The size of value beginning at pvData, in bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_COLUMN.grbit">
            <summary>
            Options regarding this column value.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN">
            <summary>
            Contains filter definition for <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetPrereadIndexRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)"/> and <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetSetCursorFilter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN[],Microsoft.Isam.Esent.Interop.Windows8.CursorFilterGrbit)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN.columnid">
            <summary>
            Gets or sets the column identifier for the column to retrieve.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN.relop">
            <summary>
            Gets or sets the filter comparison operation.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN.pvData">
            <summary>
            Gets or sets the value to compare the column with.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN.grbit">
            <summary>
            Gets or sets the option for this column comparison.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN.GetNativeIndexColumn(Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection@)">
            <summary>
            Gets the NATIVE_indexcolumn structure that represents the object.
            </summary>
            <param name="handles">GC handle collection to add any pinned handles.</param>
            <returns>The NATIVE_indexcolumn structure.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_RANGE">
            <summary>
            The native version of the <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE"/> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_RANGE.rgStartColumns">
            <summary>
            The column values for the start of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_RANGE.cStartColumns">
            <summary>
            Number of column values for the start of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_RANGE.rgEndColumns">
            <summary>
            The column values for the end of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_INDEX_RANGE.cEndColumns">
            <summary>
            Number of column values for the end of the index.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE">
            <summary>
            Contains definition for <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetPrereadIndexRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE.startColumns">
            <summary>
            Gets or sets the column values for the start of the index.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE.endColumns">
            <summary>
            Gets or sets the column values for the end of the index.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE.GetNativeIndexRange(Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection@)">
            <summary>
            Gets the NATIVE_indexcolumn structure that represents the object.
            </summary>
            <param name="handles">GC handle collection to add any pinned handles.</param>
            <returns>The NATIVE_indexcolumn structure.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JET_PFNDURABLECOMMITCALLBACK">
            <summary>
            Callback for JET_paramDurableCommitCallback.
            </summary>
            <param name="instance">Instance to use.</param>
            <param name="pCommitIdSeen">Commit-id that has just been flushed.</param>
            <param name="grbit">Reserved currently.</param>
            <returns>An error code.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.NATIVE_JET_PFNDURABLECOMMITCALLBACK">
            <summary>
            Callback for JET_paramDurableCommitCallback.
            </summary>
            <param name="instance">Instance to use.</param>
            <param name="pCommitIdSeen">Commit-id that has just been flushed.</param>
            <param name="grbit">Reserved currently.</param>
            <returns>An error code.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam">
            <summary>
            ESENT session parameters.
            </summary>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam.Base">
            <summary>
            This parameter is not meant to be used. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam.CommitDefault">
            <summary>
            This parameter sets the grbits for commit.  It is functionally the same as the
            system parameter JET_param.CommitDefault when used with an instance and a sesid.
            Note: JET_param.CommitDefault is not currently exposed in the ESE interop layer.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam.CommitGenericContext">
            <summary>
            This parameter sets a user specific commit context that will be placed in the
            transaction log on commit to level 0.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api">
            <summary>
            Api calls introduced in Windows 8.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetStopServiceInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit)">
            <summary>
            Prepares an instance for termination. Can also be used to resume a previous quiescing.
            </summary>
            <param name="instance">The (running) instance to use.</param>
            <param name="grbit">The options to stop or resume the instance.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetBeginTransaction3(Microsoft.Isam.Esent.Interop.JET_SESID,System.Int64,Microsoft.Isam.Esent.Interop.BeginTransactionGrbit)">
            <summary>
            Causes a session to enter a transaction or create a new save point in an existing
            transaction.
            </summary>
            <param name="sesid">The session to begin the transaction for.</param>
            <param name="userTransactionId">An optional identifier supplied by the user for identifying the transaction.</param>
            <param name="grbit">Transaction options.</param>
            <remarks>Introduced in Windows 8.</remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetCommitTransaction2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.CommitTransactionGrbit,System.TimeSpan,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID@)">
            <summary>
            Commits the changes made to the state of the database during the current save point
            and migrates them to the previous save point. If the outermost save point is committed
            then the changes made during that save point will be committed to the state of the
            database and the session will exit the transaction.
            </summary>
            <param name="sesid">The session to commit the transaction for.</param>
            <param name="grbit">Commit options.</param>
            <param name="durableCommit">Duration to commit lazy transaction.</param>
            <param name="commitId">Commit-id associated with this commit record.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetGetErrorInfo(Microsoft.Isam.Esent.Interop.JET_err,Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC@)">
            <summary>
            Gets extended information about an error.
            </summary>
            <param name="error">The error code about which to retrieve information.</param>
            <param name="errinfo">Information about the specified error code.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetResizeDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows8.ResizeDatabaseGrbit)">
            <summary>
            Resizes a currently open database. Windows 8: Only supports growing a database file.
            Windows 8.1: When <see cref="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EnableShrinkDatabase"/> is set to
            <see cref="F:Microsoft.Isam.Esent.Interop.Windows81.ShrinkDatabaseGrbit.On"/>, and if the
            file system supports Sparse Files, then space may be freed up in the middle of the
            file.
            </summary>
            <remarks>
            Many APIs return the logical size of the file, not how many bytes it takes up on disk.
            Win32's GetCompressedFileSize returns the correct on-disk size.
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_DbInfo)"/>
            returns the on-disk size when used with
            <see cref="F:Microsoft.Isam.Esent.Interop.Windows81.Windows81DbInfo.FilesizeOnDisk"/>
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to grow.</param>
            <param name="desiredPages">The desired size of the database, in pages.</param>
            <param name="actualPages">The size of the database, in pages, after the call. </param>
            <param name="grbit">Resize options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetCreateIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <remarks>
            When creating multiple indexes (i.e. with numIndexCreates
            greater than 1) this method MUST be called
            outside of any transactions and with exclusive access to the
            table. The JET_TABLEID returned by "Api.JetCreateTable"
            will have exlusive access or the table can be opened for
            exclusive access by passing <see cref="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.DenyRead"/>
            to <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.OpenTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@)"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetOpenTemporaryTable2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            Also see
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>,
            "Api.JetOpenTempTable2",
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOpenTemporaryTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)"/>.
            </summary>
            <remarks>
            Use <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOpenTemporaryTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)"/>
            for earlier versions of Esent.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="temporarytable">
            Description of the temporary table to create on input. After a
            successful call, the structure contains the handle to the temporary
            table and column identifications. Use <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCloseTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>
            to free the temporary table when finished.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetCreateTableColumnIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Creates a table, adds columns, and indices on that table.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateTableColumnIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)"/>
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to which to add the new table.</param>
            <param name="tablecreate">Object describing the table to create.</param>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateTableColumnIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetGetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Int32@)">
            <summary>
            Gets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set, see
            <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/> and <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam"/>.</param>
            <param name="value">A 32-bit integer to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetGetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Gets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set, see
            <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/> and <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam"/>.</param>
            <param name="data">A byte array to retrieve.</param>
            <param name="length">AThe length of the data array.</param>
            <param name="actualDataSize">The actual size of the data field.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetSetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Int32)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="value">A 32-bit integer to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetSetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Byte[],System.Int32)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="data">Data to set in this session parameter.</param>
            <param name="dataSize">Size of the data provided.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetTryPrereadIndexRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)">
            <summary>
            If the records with the specified key ranges are not in the buffer
            cache, then start asynchronous reads to bring the records into the
            database buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="indexRanges">The key ranges to preread.</param>
            <param name="rangeIndex">The index of the first key range in the array to read.</param>
            <param name="rangeCount">The maximum number of key ranges to preread.</param>
            <param name="rangesPreread">Returns the number of keys actually preread.</param>
            <param name="columnsPreread">List of column ids for long value columns to preread.</param>
            <param name="grbit">Preread options. Used to specify the direction of the preread.</param>
            <returns><c>true</c> if some preread done, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetPrereadIndexRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)">
            <summary>
            If the records with the specified key ranges are not in the buffer
            cache, then start asynchronous reads to bring the records into the
            database buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="indexRanges">The key ranges to preread.</param>
            <param name="rangeIndex">The index of the first key range in the array to read.</param>
            <param name="rangeCount">The maximum number of key ranges to preread.</param>
            <param name="rangesPreread">Returns the number of keys actually preread.</param>
            <param name="columnsPreread">List of column ids for long value columns to preread.</param>
            <param name="grbit">Preread options. Used to specify the direction of the preread.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.PrereadKeyRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[][],System.Int32[],System.Byte[][],System.Int32[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)">
            <summary>
            If the records with the specified key ranges are not in the
            buffer cache then start asynchronous reads to bring the records
            into the database buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="keysStart">The start of key ranges to preread.</param>
            <param name="keyStartLengths">The lengths of the start keys to preread.</param>
            <param name="keysEnd">The end of key rangess to preread.</param>
            <param name="keyEndLengths">The lengths of the end keys to preread.</param>
            <param name="rangeIndex">The index of the first key range in the array to read.</param>
            <param name="rangeCount">The maximum number of key ranges to preread.</param>
            <param name="rangesPreread">Returns the number of keys actually preread.</param>
            <param name="columnsPreread">List of column ids for long value columns to preread.</param>
            <param name="grbit">Preread options. Used to specify the direction of the preread.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetSetCursorFilter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN[],Microsoft.Isam.Esent.Interop.Windows8.CursorFilterGrbit)">
            <summary>
            Set an array of simple filters for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)"/>.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="filters">Simple record filters.</param>
            <param name="grbit">Move options.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.ErrorInfoGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetGetErrorInfo(Microsoft.Isam.Esent.Interop.JET_err,Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC@)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.ErrorInfoGrbit.None">
            <summary>
            No option.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.ResizeDatabaseGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetResizeDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows8.ResizeDatabaseGrbit)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows81.Windows81Grbits.OnlyShrink"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.ResizeDatabaseGrbit.None">
            <summary>
            No option.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.ResizeDatabaseGrbit.OnlyGrow">
            <summary>
            Only grow the database. If the resize call would shrink the database, do nothing.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallbackGrbit">
            <summary>
            Options passed to log flush callback.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Grbits.LogUnavailable"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallbackGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetPrereadIndexRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit.Forward">
            <summary>
            Preread forward.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit.Backwards">
            <summary>
            Preread backwards.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit.FirstPageOnly">
            <summary>
            Preread only first page of any long column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit.NormalizedKey">
            <summary>
            Normalized key/bookmark provided instead of column value.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetStopServiceInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit.All">
            <summary>
            Stops all ESE services for the specified instance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit.BackgroundUserTasks">
            <summary>
            Stops restartable client specificed background maintenance tasks (B+ Tree Defrag).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit.QuiesceCaches">
            <summary>
            Quiesces all dirty caches to disk. Asynchronous. Quiescing is cancelled if the <see cref="F:Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit.Resume"/>
            bit is called subsequently.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit.Resume">
            <summary>
            Resumes previously issued StopService operations, i.e. "restarts service".  Can be combined
            with above grbits to Resume specific services, or with 0x0 Resumes all previous stopped services.
            </summary>
            <remarks>
            Warning: This bit can only be used to resume JET_bitStopServiceBackground and JET_bitStopServiceQuiesceCaches, if you 
            did a JET_bitStopServiceAll or JET_bitStopServiceAPI, attempting to use JET_bitStopServiceResume will fail. 
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.CursorFilterGrbit">
            <summary>
            Options passed while setting cursor filters.
            </summary>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetSetCursorFilter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN[],Microsoft.Isam.Esent.Interop.Windows8.CursorFilterGrbit)"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.CursorFilterGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.JetIndexColumnGrbit">
            <summary>
            Options for <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetIndexColumnGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.JetIndexColumnGrbit.ZeroLength">
            <summary>
            Zero-length value (non-null).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.Windows8Grbits">
            <summary>
            System parameters that have been introduced in Windows 8.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Grbits.KeepDbAttachedAtEndOfRecovery">
            <summary>
            Allows db to remain attached at the end of recovery (for faster
            transition to running state).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Grbits.PurgeCacheOnAttach">
            <summary>
            Purge database pages on attach.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Grbits.IndexDotNetGuid">
            <summary>
            Specifying this flag will change GUID sort order to .Net standard.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Grbits.TTDotNetGuid">
            <summary>
            This option requests that the temporary table sort columns of type
            JET_coltypGUID according to .Net Guid sort order.
            </summary>        
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.Windows8IdxInfo">
            <summary>
            Index info levels that have been added to the Windows 8 version of ESENT.
            </summary>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.JET_IdxInfo"/>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows7.Windows7IdxInfo"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8IdxInfo.InfoCreateIndex3">
            <summary>
            Introduced in Windows 8. Returns a JET_INDEXCREATE3 structure. This is similar to
            <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE"/> structure,  but it contains some additional
            members, and it also uses a locale name in the <see cref="T:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX"/>
            index definition, not an LCID.
            The returned object is suitable for use by <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetCreateIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8IdxInfo.LocaleName">
            <summary>
            Introduced in Windows 8. Returns the locale name of the given index.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param">
            <summary>
            System parameters that were introduced in Windows 8.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.CachePriority">
            <summary>
            Per-instance property for relative cache priorities (default = 100).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.MaxTransactionSize">
            <summary>
            Percentage of version store that can be used by oldest transaction
            before <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.VersionStoreOutOfMemory"/> (default = 100).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.PrereadIOMax">
            <summary>
            Maximum number of I/O operations dispatched for a given purpose.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.EnableDBScanSerialization">
            <summary>
            Database Maintenance serialization is enabled for databases sharing
            the same disk.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.HungIOThreshold">
            <summary>
            The threshold for what is considered a hung IO that should be acted upon.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.HungIOActions">
            <summary>
            A set of actions to be taken on IOs that appear hung.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.MinDataForXpress">
            <summary>
            Smallest amount of data that should be compressed with xpress compression.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.ProcessFriendlyName">
            <summary>
            Friendly name for this instance of the process.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.DurableCommitCallback">
            <summary>
            Callback for when log is flushed.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EnumeratedColumn">
            <summary>
            The values for a given column as generated by Api.EnumerateColumns.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Id">
            <summary>
            Gets or sets the column ID of this set of column values.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Error">
            <summary>
            Gets or sets the status of this column id.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_err.Success"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_err.BadColumnId"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnNotFound"/>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Warning">
            <summary>
            Gets or sets the status of this set of column values.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.Success"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnDefault"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnNull"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnPresent"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSkipped"/>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Values">
            <summary>
            Gets or sets the column values enumerated.
            </summary>
            <remarks>
            This will be null if the column is null or the column values were not provided.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EnumeratedColumn.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.EnumeratedColumn"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.EnumeratedColumn"/>.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Value">
            <summary>
            A single column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Value.Ordinal">
            <summary>
            Gets or sets the ordinal of this column value.
            </summary>
            <remarks>
            The lowest valid ordinal is one.
            This is the same as the "itagSequence" of the column value.
            </remarks>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Value.Warning">
            <summary>
            Gets or sets the status of this column value.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.Success"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnDefault"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnNotInRecord"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnNull"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnPresent"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSkipped"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnTruncated"/>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Value.Bytes">
            <summary>
            Gets or sets the column value as bytes.
            </summary>
            <remarks>
            This will be null if the column is null or the column values were not provided.
            This will be truncated if Warning is <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnTruncated"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Value.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Value"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.EnumeratedColumn.Value"/>.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOperationException">
            <summary>
            Base class for Operation exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOperationException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentOperationException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOperationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDataException">
            <summary>
            Base class for Data exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDataException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentDataException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDataException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentApiException">
            <summary>
            Base class for Api exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentApiException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentApiException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentApiException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFatalException">
            <summary>
            Base class for Fatal exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFatalException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentFatalException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFatalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFatalException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIOException">
            <summary>
            Base class for IO exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIOException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentIOException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIOException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentResourceException">
            <summary>
            Base class for Resource exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentResourceException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentResourceException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentResourceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMemoryException">
            <summary>
            Base class for Memory exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMemoryException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentMemoryException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMemoryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentQuotaException">
            <summary>
            Base class for Quota exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentQuotaException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentQuotaException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentQuotaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentQuotaException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDiskException">
            <summary>
            Base class for Disk exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDiskException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentDiskException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDiskException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDiskException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCorruptionException">
            <summary>
            Base class for Corruption exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCorruptionException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentCorruptionException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCorruptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCorruptionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInconsistentException">
            <summary>
            Base class for Inconsistent exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInconsistentException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentInconsistentException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInconsistentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInconsistentException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFragmentationException">
            <summary>
            Base class for Fragmentation exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFragmentationException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentFragmentationException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFragmentationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFragmentationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentUsageException">
            <summary>
            Base class for Usage exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUsageException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentUsageException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUsageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentUsageException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentStateException">
            <summary>
            Base class for State exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStateException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentStateException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentStateException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentObsoleteException">
            <summary>
            Base class for Obsolete exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentObsoleteException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentObsoleteException class.
            </summary>
            <param name="description">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentObsoleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentObsoleteException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRfsFailureException">
            <summary>
            Base class for JET_err.RfsFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRfsFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentRfsFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRfsFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRfsFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRfsNotArmedException">
            <summary>
            Base class for JET_err.RfsNotArmed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRfsNotArmedException.#ctor">
            <summary>
            Initializes a new instance of the EsentRfsNotArmedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRfsNotArmedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRfsNotArmedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileCloseException">
            <summary>
            Base class for JET_err.FileClose exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileCloseException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileCloseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileCloseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileCloseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfThreadsException">
            <summary>
            Base class for JET_err.OutOfThreads exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfThreadsException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfThreadsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfThreadsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfThreadsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyIOException">
            <summary>
            Base class for JET_err.TooManyIO exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyIOException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyIOException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyIOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyIOException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTaskDroppedException">
            <summary>
            Base class for JET_err.TaskDropped exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTaskDroppedException.#ctor">
            <summary>
            Initializes a new instance of the EsentTaskDroppedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTaskDroppedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTaskDroppedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInternalErrorException">
            <summary>
            Base class for JET_err.InternalError exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInternalErrorException.#ctor">
            <summary>
            Initializes a new instance of the EsentInternalErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInternalErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInternalErrorException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDisabledFunctionalityException">
            <summary>
            Base class for JET_err.DisabledFunctionality exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDisabledFunctionalityException.#ctor">
            <summary>
            Initializes a new instance of the EsentDisabledFunctionalityException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDisabledFunctionalityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDisabledFunctionalityException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentUnloadableOSFunctionalityException">
            <summary>
            Base class for JET_err.UnloadableOSFunctionality exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnloadableOSFunctionalityException.#ctor">
            <summary>
            Initializes a new instance of the EsentUnloadableOSFunctionalityException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnloadableOSFunctionalityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentUnloadableOSFunctionalityException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDeviceMissingException">
            <summary>
            Base class for JET_err.DeviceMissing exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeviceMissingException.#ctor">
            <summary>
            Initializes a new instance of the EsentDeviceMissingException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeviceMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDeviceMissingException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDeviceMisconfiguredException">
            <summary>
            Base class for JET_err.DeviceMisconfigured exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeviceMisconfiguredException.#ctor">
            <summary>
            Initializes a new instance of the EsentDeviceMisconfiguredException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeviceMisconfiguredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDeviceMisconfiguredException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDeviceTimeoutException">
            <summary>
            Base class for JET_err.DeviceTimeout exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeviceTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the EsentDeviceTimeoutException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeviceTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDeviceTimeoutException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDeviceFailureException">
            <summary>
            Base class for JET_err.DeviceFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeviceFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentDeviceFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeviceFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDeviceFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseBufferDependenciesCorruptedException">
            <summary>
            Base class for JET_err.DatabaseBufferDependenciesCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseBufferDependenciesCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseBufferDependenciesCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseBufferDependenciesCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseBufferDependenciesCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentPreviousVersionException">
            <summary>
            Base class for JET_err.PreviousVersion exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPreviousVersionException.#ctor">
            <summary>
            Initializes a new instance of the EsentPreviousVersionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPreviousVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentPreviousVersionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentPageBoundaryException">
            <summary>
            Base class for JET_err.PageBoundary exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPageBoundaryException.#ctor">
            <summary>
            Initializes a new instance of the EsentPageBoundaryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPageBoundaryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentPageBoundaryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentKeyBoundaryException">
            <summary>
            Base class for JET_err.KeyBoundary exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyBoundaryException.#ctor">
            <summary>
            Initializes a new instance of the EsentKeyBoundaryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyBoundaryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentKeyBoundaryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadPageLinkException">
            <summary>
            Base class for JET_err.BadPageLink exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadPageLinkException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadPageLinkException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadPageLinkException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadPageLinkException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadBookmarkException">
            <summary>
            Base class for JET_err.BadBookmark exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadBookmarkException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadBookmarkException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadBookmarkException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadBookmarkException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNTSystemCallFailedException">
            <summary>
            Base class for JET_err.NTSystemCallFailed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNTSystemCallFailedException.#ctor">
            <summary>
            Initializes a new instance of the EsentNTSystemCallFailedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNTSystemCallFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNTSystemCallFailedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadParentPageLinkException">
            <summary>
            Base class for JET_err.BadParentPageLink exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadParentPageLinkException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadParentPageLinkException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadParentPageLinkException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadParentPageLinkException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSPAvailExtCacheOutOfSyncException">
            <summary>
            Base class for JET_err.SPAvailExtCacheOutOfSync exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSPAvailExtCacheOutOfSyncException.#ctor">
            <summary>
            Initializes a new instance of the EsentSPAvailExtCacheOutOfSyncException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSPAvailExtCacheOutOfSyncException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSPAvailExtCacheOutOfSyncException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSPAvailExtCorruptedException">
            <summary>
            Base class for JET_err.SPAvailExtCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSPAvailExtCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentSPAvailExtCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSPAvailExtCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSPAvailExtCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSPAvailExtCacheOutOfMemoryException">
            <summary>
            Base class for JET_err.SPAvailExtCacheOutOfMemory exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSPAvailExtCacheOutOfMemoryException.#ctor">
            <summary>
            Initializes a new instance of the EsentSPAvailExtCacheOutOfMemoryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSPAvailExtCacheOutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSPAvailExtCacheOutOfMemoryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSPOwnExtCorruptedException">
            <summary>
            Base class for JET_err.SPOwnExtCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSPOwnExtCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentSPOwnExtCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSPOwnExtCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSPOwnExtCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDbTimeCorruptedException">
            <summary>
            Base class for JET_err.DbTimeCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDbTimeCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDbTimeCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDbTimeCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDbTimeCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentKeyTruncatedException">
            <summary>
            Base class for JET_err.KeyTruncated exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyTruncatedException.#ctor">
            <summary>
            Initializes a new instance of the EsentKeyTruncatedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyTruncatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentKeyTruncatedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseLeakInSpaceException">
            <summary>
            Base class for JET_err.DatabaseLeakInSpace exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseLeakInSpaceException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseLeakInSpaceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseLeakInSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseLeakInSpaceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadEmptyPageException">
            <summary>
            Base class for JET_err.BadEmptyPage exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadEmptyPageException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadEmptyPageException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadEmptyPageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadEmptyPageException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadLineCountException">
            <summary>
            Base class for JET_err.BadLineCount exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadLineCountException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadLineCountException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadLineCountException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadLineCountException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentKeyTooBigException">
            <summary>
            Base class for JET_err.KeyTooBig exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyTooBigException.#ctor">
            <summary>
            Initializes a new instance of the EsentKeyTooBigException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyTooBigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentKeyTooBigException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotSeparateIntrinsicLVException">
            <summary>
            Base class for JET_err.CannotSeparateIntrinsicLV exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotSeparateIntrinsicLVException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotSeparateIntrinsicLVException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotSeparateIntrinsicLVException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotSeparateIntrinsicLVException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSeparatedLongValueException">
            <summary>
            Base class for JET_err.SeparatedLongValue exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSeparatedLongValueException.#ctor">
            <summary>
            Initializes a new instance of the EsentSeparatedLongValueException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSeparatedLongValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSeparatedLongValueException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMustBeSeparateLongValueException">
            <summary>
            Base class for JET_err.MustBeSeparateLongValue exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMustBeSeparateLongValueException.#ctor">
            <summary>
            Initializes a new instance of the EsentMustBeSeparateLongValueException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMustBeSeparateLongValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMustBeSeparateLongValueException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidPrereadException">
            <summary>
            Base class for JET_err.InvalidPreread exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidPrereadException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidPrereadException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidPrereadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidPrereadException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidColumnReferenceException">
            <summary>
            Base class for JET_err.InvalidColumnReference exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidColumnReferenceException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidColumnReferenceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidColumnReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidColumnReferenceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentStaleColumnReferenceException">
            <summary>
            Base class for JET_err.StaleColumnReference exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStaleColumnReferenceException.#ctor">
            <summary>
            Initializes a new instance of the EsentStaleColumnReferenceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStaleColumnReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentStaleColumnReferenceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCompressionIntegrityCheckFailedException">
            <summary>
            Base class for JET_err.CompressionIntegrityCheckFailed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCompressionIntegrityCheckFailedException.#ctor">
            <summary>
            Initializes a new instance of the EsentCompressionIntegrityCheckFailedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCompressionIntegrityCheckFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCompressionIntegrityCheckFailedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidLoggedOperationException">
            <summary>
            Base class for JET_err.InvalidLoggedOperation exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLoggedOperationException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidLoggedOperationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLoggedOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidLoggedOperationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogFileCorruptException">
            <summary>
            Base class for JET_err.LogFileCorrupt exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFileCorruptException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogFileCorruptException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFileCorruptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogFileCorruptException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNoBackupDirectoryException">
            <summary>
            Base class for JET_err.NoBackupDirectory exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoBackupDirectoryException.#ctor">
            <summary>
            Initializes a new instance of the EsentNoBackupDirectoryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoBackupDirectoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNoBackupDirectoryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBackupDirectoryNotEmptyException">
            <summary>
            Base class for JET_err.BackupDirectoryNotEmpty exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBackupDirectoryNotEmptyException.#ctor">
            <summary>
            Initializes a new instance of the EsentBackupDirectoryNotEmptyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBackupDirectoryNotEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBackupDirectoryNotEmptyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBackupInProgressException">
            <summary>
            Base class for JET_err.BackupInProgress exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBackupInProgressException.#ctor">
            <summary>
            Initializes a new instance of the EsentBackupInProgressException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBackupInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBackupInProgressException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRestoreInProgressException">
            <summary>
            Base class for JET_err.RestoreInProgress exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRestoreInProgressException.#ctor">
            <summary>
            Initializes a new instance of the EsentRestoreInProgressException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRestoreInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRestoreInProgressException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMissingPreviousLogFileException">
            <summary>
            Base class for JET_err.MissingPreviousLogFile exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingPreviousLogFileException.#ctor">
            <summary>
            Initializes a new instance of the EsentMissingPreviousLogFileException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingPreviousLogFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMissingPreviousLogFileException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogWriteFailException">
            <summary>
            Base class for JET_err.LogWriteFail exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogWriteFailException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogWriteFailException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogWriteFailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogWriteFailException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogDisabledDueToRecoveryFailureException">
            <summary>
            Base class for JET_err.LogDisabledDueToRecoveryFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogDisabledDueToRecoveryFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogDisabledDueToRecoveryFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogDisabledDueToRecoveryFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogDisabledDueToRecoveryFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotLogDuringRecoveryRedoException">
            <summary>
            Base class for JET_err.CannotLogDuringRecoveryRedo exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotLogDuringRecoveryRedoException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotLogDuringRecoveryRedoException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotLogDuringRecoveryRedoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotLogDuringRecoveryRedoException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogGenerationMismatchException">
            <summary>
            Base class for JET_err.LogGenerationMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogGenerationMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogGenerationMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogGenerationMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogGenerationMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadLogVersionException">
            <summary>
            Base class for JET_err.BadLogVersion exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadLogVersionException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadLogVersionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadLogVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadLogVersionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidLogSequenceException">
            <summary>
            Base class for JET_err.InvalidLogSequence exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLogSequenceException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidLogSequenceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLogSequenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidLogSequenceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLoggingDisabledException">
            <summary>
            Base class for JET_err.LoggingDisabled exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLoggingDisabledException.#ctor">
            <summary>
            Initializes a new instance of the EsentLoggingDisabledException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLoggingDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLoggingDisabledException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogBufferTooSmallException">
            <summary>
            Base class for JET_err.LogBufferTooSmall exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogBufferTooSmallException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogBufferTooSmallException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogBufferTooSmallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogBufferTooSmallException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogSequenceEndException">
            <summary>
            Base class for JET_err.LogSequenceEnd exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSequenceEndException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogSequenceEndException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSequenceEndException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogSequenceEndException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNoBackupException">
            <summary>
            Base class for JET_err.NoBackup exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoBackupException.#ctor">
            <summary>
            Initializes a new instance of the EsentNoBackupException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoBackupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNoBackupException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidBackupSequenceException">
            <summary>
            Base class for JET_err.InvalidBackupSequence exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidBackupSequenceException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidBackupSequenceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidBackupSequenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidBackupSequenceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBackupNotAllowedYetException">
            <summary>
            Base class for JET_err.BackupNotAllowedYet exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBackupNotAllowedYetException.#ctor">
            <summary>
            Initializes a new instance of the EsentBackupNotAllowedYetException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBackupNotAllowedYetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBackupNotAllowedYetException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDeleteBackupFileFailException">
            <summary>
            Base class for JET_err.DeleteBackupFileFail exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeleteBackupFileFailException.#ctor">
            <summary>
            Initializes a new instance of the EsentDeleteBackupFileFailException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDeleteBackupFileFailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDeleteBackupFileFailException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMakeBackupDirectoryFailException">
            <summary>
            Base class for JET_err.MakeBackupDirectoryFail exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMakeBackupDirectoryFailException.#ctor">
            <summary>
            Initializes a new instance of the EsentMakeBackupDirectoryFailException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMakeBackupDirectoryFailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMakeBackupDirectoryFailException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidBackupException">
            <summary>
            Base class for JET_err.InvalidBackup exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidBackupException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidBackupException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidBackupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidBackupException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecoveredWithErrorsException">
            <summary>
            Base class for JET_err.RecoveredWithErrors exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecoveredWithErrorsException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecoveredWithErrorsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecoveredWithErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecoveredWithErrorsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMissingLogFileException">
            <summary>
            Base class for JET_err.MissingLogFile exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingLogFileException.#ctor">
            <summary>
            Initializes a new instance of the EsentMissingLogFileException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingLogFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMissingLogFileException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogDiskFullException">
            <summary>
            Base class for JET_err.LogDiskFull exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogDiskFullException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogDiskFullException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogDiskFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogDiskFullException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadLogSignatureException">
            <summary>
            Base class for JET_err.BadLogSignature exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadLogSignatureException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadLogSignatureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadLogSignatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadLogSignatureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadDbSignatureException">
            <summary>
            Base class for JET_err.BadDbSignature exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadDbSignatureException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadDbSignatureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadDbSignatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadDbSignatureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadCheckpointSignatureException">
            <summary>
            Base class for JET_err.BadCheckpointSignature exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadCheckpointSignatureException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadCheckpointSignatureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadCheckpointSignatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadCheckpointSignatureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCheckpointCorruptException">
            <summary>
            Base class for JET_err.CheckpointCorrupt exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCheckpointCorruptException.#ctor">
            <summary>
            Initializes a new instance of the EsentCheckpointCorruptException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCheckpointCorruptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCheckpointCorruptException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMissingPatchPageException">
            <summary>
            Base class for JET_err.MissingPatchPage exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingPatchPageException.#ctor">
            <summary>
            Initializes a new instance of the EsentMissingPatchPageException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingPatchPageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMissingPatchPageException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadPatchPageException">
            <summary>
            Base class for JET_err.BadPatchPage exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadPatchPageException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadPatchPageException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadPatchPageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadPatchPageException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRedoAbruptEndedException">
            <summary>
            Base class for JET_err.RedoAbruptEnded exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRedoAbruptEndedException.#ctor">
            <summary>
            Initializes a new instance of the EsentRedoAbruptEndedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRedoAbruptEndedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRedoAbruptEndedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentPatchFileMissingException">
            <summary>
            Base class for JET_err.PatchFileMissing exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPatchFileMissingException.#ctor">
            <summary>
            Initializes a new instance of the EsentPatchFileMissingException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPatchFileMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentPatchFileMissingException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseLogSetMismatchException">
            <summary>
            Base class for JET_err.DatabaseLogSetMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseLogSetMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseLogSetMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseLogSetMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseLogSetMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseStreamingFileMismatchException">
            <summary>
            Base class for JET_err.DatabaseStreamingFileMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseStreamingFileMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseStreamingFileMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseStreamingFileMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseStreamingFileMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogFileSizeMismatchException">
            <summary>
            Base class for JET_err.LogFileSizeMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFileSizeMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogFileSizeMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFileSizeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogFileSizeMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCheckpointFileNotFoundException">
            <summary>
            Base class for JET_err.CheckpointFileNotFound exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCheckpointFileNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the EsentCheckpointFileNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCheckpointFileNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCheckpointFileNotFoundException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRequiredLogFilesMissingException">
            <summary>
            Base class for JET_err.RequiredLogFilesMissing exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRequiredLogFilesMissingException.#ctor">
            <summary>
            Initializes a new instance of the EsentRequiredLogFilesMissingException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRequiredLogFilesMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRequiredLogFilesMissingException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSoftRecoveryOnBackupDatabaseException">
            <summary>
            Base class for JET_err.SoftRecoveryOnBackupDatabase exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSoftRecoveryOnBackupDatabaseException.#ctor">
            <summary>
            Initializes a new instance of the EsentSoftRecoveryOnBackupDatabaseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSoftRecoveryOnBackupDatabaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSoftRecoveryOnBackupDatabaseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogFileSizeMismatchDatabasesConsistentException">
            <summary>
            Base class for JET_err.LogFileSizeMismatchDatabasesConsistent exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFileSizeMismatchDatabasesConsistentException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogFileSizeMismatchDatabasesConsistentException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFileSizeMismatchDatabasesConsistentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogFileSizeMismatchDatabasesConsistentException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogSectorSizeMismatchException">
            <summary>
            Base class for JET_err.LogSectorSizeMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSectorSizeMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogSectorSizeMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSectorSizeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogSectorSizeMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogSectorSizeMismatchDatabasesConsistentException">
            <summary>
            Base class for JET_err.LogSectorSizeMismatchDatabasesConsistent exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSectorSizeMismatchDatabasesConsistentException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogSectorSizeMismatchDatabasesConsistentException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSectorSizeMismatchDatabasesConsistentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogSectorSizeMismatchDatabasesConsistentException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogSequenceEndDatabasesConsistentException">
            <summary>
            Base class for JET_err.LogSequenceEndDatabasesConsistent exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSequenceEndDatabasesConsistentException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogSequenceEndDatabasesConsistentException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSequenceEndDatabasesConsistentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogSequenceEndDatabasesConsistentException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentStreamingDataNotLoggedException">
            <summary>
            Base class for JET_err.StreamingDataNotLogged exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStreamingDataNotLoggedException.#ctor">
            <summary>
            Initializes a new instance of the EsentStreamingDataNotLoggedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStreamingDataNotLoggedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentStreamingDataNotLoggedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseDirtyShutdownException">
            <summary>
            Base class for JET_err.DatabaseDirtyShutdown exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseDirtyShutdownException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseDirtyShutdownException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseDirtyShutdownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseDirtyShutdownException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentConsistentTimeMismatchException">
            <summary>
            Base class for JET_err.ConsistentTimeMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentConsistentTimeMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentConsistentTimeMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentConsistentTimeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentConsistentTimeMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabasePatchFileMismatchException">
            <summary>
            Base class for JET_err.DatabasePatchFileMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabasePatchFileMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabasePatchFileMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabasePatchFileMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabasePatchFileMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentEndingRestoreLogTooLowException">
            <summary>
            Base class for JET_err.EndingRestoreLogTooLow exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEndingRestoreLogTooLowException.#ctor">
            <summary>
            Initializes a new instance of the EsentEndingRestoreLogTooLowException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEndingRestoreLogTooLowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentEndingRestoreLogTooLowException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentStartingRestoreLogTooHighException">
            <summary>
            Base class for JET_err.StartingRestoreLogTooHigh exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStartingRestoreLogTooHighException.#ctor">
            <summary>
            Initializes a new instance of the EsentStartingRestoreLogTooHighException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStartingRestoreLogTooHighException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentStartingRestoreLogTooHighException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentGivenLogFileHasBadSignatureException">
            <summary>
            Base class for JET_err.GivenLogFileHasBadSignature exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentGivenLogFileHasBadSignatureException.#ctor">
            <summary>
            Initializes a new instance of the EsentGivenLogFileHasBadSignatureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentGivenLogFileHasBadSignatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentGivenLogFileHasBadSignatureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentGivenLogFileIsNotContiguousException">
            <summary>
            Base class for JET_err.GivenLogFileIsNotContiguous exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentGivenLogFileIsNotContiguousException.#ctor">
            <summary>
            Initializes a new instance of the EsentGivenLogFileIsNotContiguousException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentGivenLogFileIsNotContiguousException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentGivenLogFileIsNotContiguousException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMissingRestoreLogFilesException">
            <summary>
            Base class for JET_err.MissingRestoreLogFiles exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingRestoreLogFilesException.#ctor">
            <summary>
            Initializes a new instance of the EsentMissingRestoreLogFilesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingRestoreLogFilesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMissingRestoreLogFilesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMissingFullBackupException">
            <summary>
            Base class for JET_err.MissingFullBackup exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingFullBackupException.#ctor">
            <summary>
            Initializes a new instance of the EsentMissingFullBackupException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingFullBackupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMissingFullBackupException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadBackupDatabaseSizeException">
            <summary>
            Base class for JET_err.BadBackupDatabaseSize exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadBackupDatabaseSizeException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadBackupDatabaseSizeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadBackupDatabaseSizeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadBackupDatabaseSizeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseAlreadyUpgradedException">
            <summary>
            Base class for JET_err.DatabaseAlreadyUpgraded exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseAlreadyUpgradedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseAlreadyUpgradedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseAlreadyUpgradedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseAlreadyUpgradedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseIncompleteUpgradeException">
            <summary>
            Base class for JET_err.DatabaseIncompleteUpgrade exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseIncompleteUpgradeException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseIncompleteUpgradeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseIncompleteUpgradeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseIncompleteUpgradeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMissingCurrentLogFilesException">
            <summary>
            Base class for JET_err.MissingCurrentLogFiles exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingCurrentLogFilesException.#ctor">
            <summary>
            Initializes a new instance of the EsentMissingCurrentLogFilesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingCurrentLogFilesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMissingCurrentLogFilesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDbTimeTooOldException">
            <summary>
            Base class for JET_err.DbTimeTooOld exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDbTimeTooOldException.#ctor">
            <summary>
            Initializes a new instance of the EsentDbTimeTooOldException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDbTimeTooOldException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDbTimeTooOldException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDbTimeTooNewException">
            <summary>
            Base class for JET_err.DbTimeTooNew exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDbTimeTooNewException.#ctor">
            <summary>
            Initializes a new instance of the EsentDbTimeTooNewException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDbTimeTooNewException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDbTimeTooNewException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMissingFileToBackupException">
            <summary>
            Base class for JET_err.MissingFileToBackup exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingFileToBackupException.#ctor">
            <summary>
            Initializes a new instance of the EsentMissingFileToBackupException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMissingFileToBackupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMissingFileToBackupException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogTornWriteDuringHardRestoreException">
            <summary>
            Base class for JET_err.LogTornWriteDuringHardRestore exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogTornWriteDuringHardRestoreException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogTornWriteDuringHardRestoreException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogTornWriteDuringHardRestoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogTornWriteDuringHardRestoreException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogTornWriteDuringHardRecoveryException">
            <summary>
            Base class for JET_err.LogTornWriteDuringHardRecovery exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogTornWriteDuringHardRecoveryException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogTornWriteDuringHardRecoveryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogTornWriteDuringHardRecoveryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogTornWriteDuringHardRecoveryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogCorruptDuringHardRestoreException">
            <summary>
            Base class for JET_err.LogCorruptDuringHardRestore exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogCorruptDuringHardRestoreException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogCorruptDuringHardRestoreException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogCorruptDuringHardRestoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogCorruptDuringHardRestoreException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogCorruptDuringHardRecoveryException">
            <summary>
            Base class for JET_err.LogCorruptDuringHardRecovery exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogCorruptDuringHardRecoveryException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogCorruptDuringHardRecoveryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogCorruptDuringHardRecoveryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogCorruptDuringHardRecoveryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMustDisableLoggingForDbUpgradeException">
            <summary>
            Base class for JET_err.MustDisableLoggingForDbUpgrade exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMustDisableLoggingForDbUpgradeException.#ctor">
            <summary>
            Initializes a new instance of the EsentMustDisableLoggingForDbUpgradeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMustDisableLoggingForDbUpgradeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMustDisableLoggingForDbUpgradeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadRestoreTargetInstanceException">
            <summary>
            Base class for JET_err.BadRestoreTargetInstance exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadRestoreTargetInstanceException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadRestoreTargetInstanceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadRestoreTargetInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadRestoreTargetInstanceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecoveredWithoutUndoException">
            <summary>
            Base class for JET_err.RecoveredWithoutUndo exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecoveredWithoutUndoException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecoveredWithoutUndoException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecoveredWithoutUndoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecoveredWithoutUndoException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabasesNotFromSameSnapshotException">
            <summary>
            Base class for JET_err.DatabasesNotFromSameSnapshot exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabasesNotFromSameSnapshotException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabasesNotFromSameSnapshotException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabasesNotFromSameSnapshotException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabasesNotFromSameSnapshotException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSoftRecoveryOnSnapshotException">
            <summary>
            Base class for JET_err.SoftRecoveryOnSnapshot exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSoftRecoveryOnSnapshotException.#ctor">
            <summary>
            Initializes a new instance of the EsentSoftRecoveryOnSnapshotException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSoftRecoveryOnSnapshotException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSoftRecoveryOnSnapshotException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCommittedLogFilesMissingException">
            <summary>
            Base class for JET_err.CommittedLogFilesMissing exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCommittedLogFilesMissingException.#ctor">
            <summary>
            Initializes a new instance of the EsentCommittedLogFilesMissingException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCommittedLogFilesMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCommittedLogFilesMissingException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSectorSizeNotSupportedException">
            <summary>
            Base class for JET_err.SectorSizeNotSupported exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSectorSizeNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the EsentSectorSizeNotSupportedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSectorSizeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSectorSizeNotSupportedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecoveredWithoutUndoDatabasesConsistentException">
            <summary>
            Base class for JET_err.RecoveredWithoutUndoDatabasesConsistent exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecoveredWithoutUndoDatabasesConsistentException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecoveredWithoutUndoDatabasesConsistentException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecoveredWithoutUndoDatabasesConsistentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecoveredWithoutUndoDatabasesConsistentException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCommittedLogFileCorruptException">
            <summary>
            Base class for JET_err.CommittedLogFileCorrupt exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCommittedLogFileCorruptException.#ctor">
            <summary>
            Initializes a new instance of the EsentCommittedLogFileCorruptException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCommittedLogFileCorruptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCommittedLogFileCorruptException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogSequenceChecksumMismatchException">
            <summary>
            Base class for JET_err.LogSequenceChecksumMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSequenceChecksumMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogSequenceChecksumMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogSequenceChecksumMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogSequenceChecksumMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentPageInitializedMismatchException">
            <summary>
            Base class for JET_err.PageInitializedMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPageInitializedMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentPageInitializedMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPageInitializedMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentPageInitializedMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentUnicodeTranslationBufferTooSmallException">
            <summary>
            Base class for JET_err.UnicodeTranslationBufferTooSmall exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnicodeTranslationBufferTooSmallException.#ctor">
            <summary>
            Initializes a new instance of the EsentUnicodeTranslationBufferTooSmallException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnicodeTranslationBufferTooSmallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentUnicodeTranslationBufferTooSmallException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentUnicodeTranslationFailException">
            <summary>
            Base class for JET_err.UnicodeTranslationFail exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnicodeTranslationFailException.#ctor">
            <summary>
            Initializes a new instance of the EsentUnicodeTranslationFailException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnicodeTranslationFailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentUnicodeTranslationFailException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentUnicodeNormalizationNotSupportedException">
            <summary>
            Base class for JET_err.UnicodeNormalizationNotSupported exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnicodeNormalizationNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the EsentUnicodeNormalizationNotSupportedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnicodeNormalizationNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentUnicodeNormalizationNotSupportedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentUnicodeLanguageValidationFailureException">
            <summary>
            Base class for JET_err.UnicodeLanguageValidationFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnicodeLanguageValidationFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentUnicodeLanguageValidationFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUnicodeLanguageValidationFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentUnicodeLanguageValidationFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentExistingLogFileHasBadSignatureException">
            <summary>
            Base class for JET_err.ExistingLogFileHasBadSignature exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentExistingLogFileHasBadSignatureException.#ctor">
            <summary>
            Initializes a new instance of the EsentExistingLogFileHasBadSignatureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentExistingLogFileHasBadSignatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentExistingLogFileHasBadSignatureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentExistingLogFileIsNotContiguousException">
            <summary>
            Base class for JET_err.ExistingLogFileIsNotContiguous exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentExistingLogFileIsNotContiguousException.#ctor">
            <summary>
            Initializes a new instance of the EsentExistingLogFileIsNotContiguousException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentExistingLogFileIsNotContiguousException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentExistingLogFileIsNotContiguousException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogReadVerifyFailureException">
            <summary>
            Base class for JET_err.LogReadVerifyFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogReadVerifyFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogReadVerifyFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogReadVerifyFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogReadVerifyFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCheckpointDepthTooDeepException">
            <summary>
            Base class for JET_err.CheckpointDepthTooDeep exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCheckpointDepthTooDeepException.#ctor">
            <summary>
            Initializes a new instance of the EsentCheckpointDepthTooDeepException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCheckpointDepthTooDeepException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCheckpointDepthTooDeepException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRestoreOfNonBackupDatabaseException">
            <summary>
            Base class for JET_err.RestoreOfNonBackupDatabase exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRestoreOfNonBackupDatabaseException.#ctor">
            <summary>
            Initializes a new instance of the EsentRestoreOfNonBackupDatabaseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRestoreOfNonBackupDatabaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRestoreOfNonBackupDatabaseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogFileNotCopiedException">
            <summary>
            Base class for JET_err.LogFileNotCopied exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFileNotCopiedException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogFileNotCopiedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFileNotCopiedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogFileNotCopiedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSurrogateBackupInProgressException">
            <summary>
            Base class for JET_err.SurrogateBackupInProgress exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSurrogateBackupInProgressException.#ctor">
            <summary>
            Initializes a new instance of the EsentSurrogateBackupInProgressException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSurrogateBackupInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSurrogateBackupInProgressException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTransactionTooLongException">
            <summary>
            Base class for JET_err.TransactionTooLong exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTransactionTooLongException.#ctor">
            <summary>
            Initializes a new instance of the EsentTransactionTooLongException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTransactionTooLongException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTransactionTooLongException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionNoLongerSupportedTooLowException">
            <summary>
            Base class for JET_err.EngineFormatVersionNoLongerSupportedTooLow exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionNoLongerSupportedTooLowException.#ctor">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionNoLongerSupportedTooLowException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionNoLongerSupportedTooLowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionNoLongerSupportedTooLowException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionNotYetImplementedTooHighException">
            <summary>
            Base class for JET_err.EngineFormatVersionNotYetImplementedTooHigh exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionNotYetImplementedTooHighException.#ctor">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionNotYetImplementedTooHighException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionNotYetImplementedTooHighException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionNotYetImplementedTooHighException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionParamTooLowForRequestedFeatureException">
            <summary>
            Base class for JET_err.EngineFormatVersionParamTooLowForRequestedFeature exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionParamTooLowForRequestedFeatureException.#ctor">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionParamTooLowForRequestedFeatureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionParamTooLowForRequestedFeatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionParamTooLowForRequestedFeatureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionSpecifiedTooLowForLogVersionException">
            <summary>
            Base class for JET_err.EngineFormatVersionSpecifiedTooLowForLogVersion exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionSpecifiedTooLowForLogVersionException.#ctor">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionSpecifiedTooLowForLogVersionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionSpecifiedTooLowForLogVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionSpecifiedTooLowForLogVersionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionSpecifiedTooLowForDatabaseVersionException">
            <summary>
            Base class for JET_err.EngineFormatVersionSpecifiedTooLowForDatabaseVersion exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionSpecifiedTooLowForDatabaseVersionException.#ctor">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionSpecifiedTooLowForDatabaseVersionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEngineFormatVersionSpecifiedTooLowForDatabaseVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentEngineFormatVersionSpecifiedTooLowForDatabaseVersionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBackupAbortByServerException">
            <summary>
            Base class for JET_err.BackupAbortByServer exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBackupAbortByServerException.#ctor">
            <summary>
            Initializes a new instance of the EsentBackupAbortByServerException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBackupAbortByServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBackupAbortByServerException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidGrbitException">
            <summary>
            Base class for JET_err.InvalidGrbit exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidGrbitException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidGrbitException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidGrbitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidGrbitException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTermInProgressException">
            <summary>
            Base class for JET_err.TermInProgress exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTermInProgressException.#ctor">
            <summary>
            Initializes a new instance of the EsentTermInProgressException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTermInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTermInProgressException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFeatureNotAvailableException">
            <summary>
            Base class for JET_err.FeatureNotAvailable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFeatureNotAvailableException.#ctor">
            <summary>
            Initializes a new instance of the EsentFeatureNotAvailableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFeatureNotAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFeatureNotAvailableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidNameException">
            <summary>
            Base class for JET_err.InvalidName exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidNameException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidNameException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidNameException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidParameterException">
            <summary>
            Base class for JET_err.InvalidParameter exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidParameterException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidParameterException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidParameterException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseFileReadOnlyException">
            <summary>
            Base class for JET_err.DatabaseFileReadOnly exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseFileReadOnlyException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseFileReadOnlyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseFileReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseFileReadOnlyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidDatabaseIdException">
            <summary>
            Base class for JET_err.InvalidDatabaseId exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidDatabaseIdException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidDatabaseIdException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidDatabaseIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidDatabaseIdException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfMemoryException">
            <summary>
            Base class for JET_err.OutOfMemory exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfMemoryException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfMemoryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfMemoryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfDatabaseSpaceException">
            <summary>
            Base class for JET_err.OutOfDatabaseSpace exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfDatabaseSpaceException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfDatabaseSpaceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfDatabaseSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfDatabaseSpaceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfCursorsException">
            <summary>
            Base class for JET_err.OutOfCursors exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfCursorsException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfCursorsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfCursorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfCursorsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfBuffersException">
            <summary>
            Base class for JET_err.OutOfBuffers exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfBuffersException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfBuffersException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfBuffersException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfBuffersException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyIndexesException">
            <summary>
            Base class for JET_err.TooManyIndexes exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyIndexesException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyIndexesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyIndexesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyIndexesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyKeysException">
            <summary>
            Base class for JET_err.TooManyKeys exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyKeysException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyKeysException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyKeysException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyKeysException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecordDeletedException">
            <summary>
            Base class for JET_err.RecordDeleted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordDeletedException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecordDeletedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecordDeletedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentReadVerifyFailureException">
            <summary>
            Base class for JET_err.ReadVerifyFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentReadVerifyFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentReadVerifyFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentReadVerifyFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentReadVerifyFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentPageNotInitializedException">
            <summary>
            Base class for JET_err.PageNotInitialized exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPageNotInitializedException.#ctor">
            <summary>
            Initializes a new instance of the EsentPageNotInitializedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPageNotInitializedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentPageNotInitializedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfFileHandlesException">
            <summary>
            Base class for JET_err.OutOfFileHandles exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfFileHandlesException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfFileHandlesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfFileHandlesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfFileHandlesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDiskReadVerificationFailureException">
            <summary>
            Base class for JET_err.DiskReadVerificationFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDiskReadVerificationFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentDiskReadVerificationFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDiskReadVerificationFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDiskReadVerificationFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDiskIOException">
            <summary>
            Base class for JET_err.DiskIO exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDiskIOException.#ctor">
            <summary>
            Initializes a new instance of the EsentDiskIOException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDiskIOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDiskIOException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidPathException">
            <summary>
            Base class for JET_err.InvalidPath exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidPathException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidPathException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidPathException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidSystemPathException">
            <summary>
            Base class for JET_err.InvalidSystemPath exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidSystemPathException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidSystemPathException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidSystemPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidSystemPathException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidLogDirectoryException">
            <summary>
            Base class for JET_err.InvalidLogDirectory exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLogDirectoryException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidLogDirectoryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLogDirectoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidLogDirectoryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecordTooBigException">
            <summary>
            Base class for JET_err.RecordTooBig exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordTooBigException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecordTooBigException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordTooBigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecordTooBigException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyOpenDatabasesException">
            <summary>
            Base class for JET_err.TooManyOpenDatabases exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyOpenDatabasesException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyOpenDatabasesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyOpenDatabasesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyOpenDatabasesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidDatabaseException">
            <summary>
            Base class for JET_err.InvalidDatabase exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidDatabaseException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidDatabaseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidDatabaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidDatabaseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNotInitializedException">
            <summary>
            Base class for JET_err.NotInitialized exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNotInitializedException.#ctor">
            <summary>
            Initializes a new instance of the EsentNotInitializedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNotInitializedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNotInitializedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentAlreadyInitializedException">
            <summary>
            Base class for JET_err.AlreadyInitialized exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAlreadyInitializedException.#ctor">
            <summary>
            Initializes a new instance of the EsentAlreadyInitializedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAlreadyInitializedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentAlreadyInitializedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInitInProgressException">
            <summary>
            Base class for JET_err.InitInProgress exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInitInProgressException.#ctor">
            <summary>
            Initializes a new instance of the EsentInitInProgressException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInitInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInitInProgressException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileAccessDeniedException">
            <summary>
            Base class for JET_err.FileAccessDenied exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileAccessDeniedException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileAccessDeniedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileAccessDeniedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentQueryNotSupportedException">
            <summary>
            Base class for JET_err.QueryNotSupported exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentQueryNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the EsentQueryNotSupportedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentQueryNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentQueryNotSupportedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSQLLinkNotSupportedException">
            <summary>
            Base class for JET_err.SQLLinkNotSupported exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSQLLinkNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the EsentSQLLinkNotSupportedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSQLLinkNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSQLLinkNotSupportedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBufferTooSmallException">
            <summary>
            Base class for JET_err.BufferTooSmall exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBufferTooSmallException.#ctor">
            <summary>
            Initializes a new instance of the EsentBufferTooSmallException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBufferTooSmallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBufferTooSmallException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyColumnsException">
            <summary>
            Base class for JET_err.TooManyColumns exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyColumnsException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyColumnsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyColumnsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyColumnsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentContainerNotEmptyException">
            <summary>
            Base class for JET_err.ContainerNotEmpty exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentContainerNotEmptyException.#ctor">
            <summary>
            Initializes a new instance of the EsentContainerNotEmptyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentContainerNotEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentContainerNotEmptyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidFilenameException">
            <summary>
            Base class for JET_err.InvalidFilename exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidFilenameException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidFilenameException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidFilenameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidFilenameException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidBookmarkException">
            <summary>
            Base class for JET_err.InvalidBookmark exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidBookmarkException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidBookmarkException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidBookmarkException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidBookmarkException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnInUseException">
            <summary>
            Base class for JET_err.ColumnInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidBufferSizeException">
            <summary>
            Base class for JET_err.InvalidBufferSize exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidBufferSizeException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidBufferSizeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidBufferSizeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidBufferSizeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnNotUpdatableException">
            <summary>
            Base class for JET_err.ColumnNotUpdatable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnNotUpdatableException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnNotUpdatableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnNotUpdatableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnNotUpdatableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexInUseException">
            <summary>
            Base class for JET_err.IndexInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLinkNotSupportedException">
            <summary>
            Base class for JET_err.LinkNotSupported exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLinkNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the EsentLinkNotSupportedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLinkNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLinkNotSupportedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNullKeyDisallowedException">
            <summary>
            Base class for JET_err.NullKeyDisallowed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNullKeyDisallowedException.#ctor">
            <summary>
            Initializes a new instance of the EsentNullKeyDisallowedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNullKeyDisallowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNullKeyDisallowedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNotInTransactionException">
            <summary>
            Base class for JET_err.NotInTransaction exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNotInTransactionException.#ctor">
            <summary>
            Initializes a new instance of the EsentNotInTransactionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNotInTransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNotInTransactionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMustRollbackException">
            <summary>
            Base class for JET_err.MustRollback exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMustRollbackException.#ctor">
            <summary>
            Initializes a new instance of the EsentMustRollbackException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMustRollbackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMustRollbackException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyActiveUsersException">
            <summary>
            Base class for JET_err.TooManyActiveUsers exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyActiveUsersException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyActiveUsersException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyActiveUsersException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyActiveUsersException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidCountryException">
            <summary>
            Base class for JET_err.InvalidCountry exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidCountryException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidCountryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidCountryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidCountryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidLanguageIdException">
            <summary>
            Base class for JET_err.InvalidLanguageId exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLanguageIdException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidLanguageIdException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLanguageIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidLanguageIdException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidCodePageException">
            <summary>
            Base class for JET_err.InvalidCodePage exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidCodePageException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidCodePageException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidCodePageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidCodePageException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidLCMapStringFlagsException">
            <summary>
            Base class for JET_err.InvalidLCMapStringFlags exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLCMapStringFlagsException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidLCMapStringFlagsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLCMapStringFlagsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidLCMapStringFlagsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentVersionStoreEntryTooBigException">
            <summary>
            Base class for JET_err.VersionStoreEntryTooBig exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentVersionStoreEntryTooBigException.#ctor">
            <summary>
            Initializes a new instance of the EsentVersionStoreEntryTooBigException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentVersionStoreEntryTooBigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentVersionStoreEntryTooBigException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentVersionStoreOutOfMemoryAndCleanupTimedOutException">
            <summary>
            Base class for JET_err.VersionStoreOutOfMemoryAndCleanupTimedOut exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentVersionStoreOutOfMemoryAndCleanupTimedOutException.#ctor">
            <summary>
            Initializes a new instance of the EsentVersionStoreOutOfMemoryAndCleanupTimedOutException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentVersionStoreOutOfMemoryAndCleanupTimedOutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentVersionStoreOutOfMemoryAndCleanupTimedOutException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentVersionStoreOutOfMemoryException">
            <summary>
            Base class for JET_err.VersionStoreOutOfMemory exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentVersionStoreOutOfMemoryException.#ctor">
            <summary>
            Initializes a new instance of the EsentVersionStoreOutOfMemoryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentVersionStoreOutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentVersionStoreOutOfMemoryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCurrencyStackOutOfMemoryException">
            <summary>
            Base class for JET_err.CurrencyStackOutOfMemory exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCurrencyStackOutOfMemoryException.#ctor">
            <summary>
            Initializes a new instance of the EsentCurrencyStackOutOfMemoryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCurrencyStackOutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCurrencyStackOutOfMemoryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotIndexException">
            <summary>
            Base class for JET_err.CannotIndex exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotIndexException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotIndexException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotIndexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotIndexException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecordNotDeletedException">
            <summary>
            Base class for JET_err.RecordNotDeleted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordNotDeletedException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecordNotDeletedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordNotDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecordNotDeletedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyMempoolEntriesException">
            <summary>
            Base class for JET_err.TooManyMempoolEntries exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyMempoolEntriesException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyMempoolEntriesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyMempoolEntriesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyMempoolEntriesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfObjectIDsException">
            <summary>
            Base class for JET_err.OutOfObjectIDs exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfObjectIDsException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfObjectIDsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfObjectIDsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfObjectIDsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfLongValueIDsException">
            <summary>
            Base class for JET_err.OutOfLongValueIDs exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfLongValueIDsException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfLongValueIDsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfLongValueIDsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfLongValueIDsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfAutoincrementValuesException">
            <summary>
            Base class for JET_err.OutOfAutoincrementValues exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfAutoincrementValuesException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfAutoincrementValuesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfAutoincrementValuesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfAutoincrementValuesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfDbtimeValuesException">
            <summary>
            Base class for JET_err.OutOfDbtimeValues exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfDbtimeValuesException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfDbtimeValuesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfDbtimeValuesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfDbtimeValuesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfSequentialIndexValuesException">
            <summary>
            Base class for JET_err.OutOfSequentialIndexValues exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfSequentialIndexValuesException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfSequentialIndexValuesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfSequentialIndexValuesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfSequentialIndexValuesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRunningInOneInstanceModeException">
            <summary>
            Base class for JET_err.RunningInOneInstanceMode exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRunningInOneInstanceModeException.#ctor">
            <summary>
            Initializes a new instance of the EsentRunningInOneInstanceModeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRunningInOneInstanceModeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRunningInOneInstanceModeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRunningInMultiInstanceModeException">
            <summary>
            Base class for JET_err.RunningInMultiInstanceMode exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRunningInMultiInstanceModeException.#ctor">
            <summary>
            Initializes a new instance of the EsentRunningInMultiInstanceModeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRunningInMultiInstanceModeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRunningInMultiInstanceModeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSystemParamsAlreadySetException">
            <summary>
            Base class for JET_err.SystemParamsAlreadySet exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSystemParamsAlreadySetException.#ctor">
            <summary>
            Initializes a new instance of the EsentSystemParamsAlreadySetException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSystemParamsAlreadySetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSystemParamsAlreadySetException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSystemPathInUseException">
            <summary>
            Base class for JET_err.SystemPathInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSystemPathInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentSystemPathInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSystemPathInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSystemPathInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogFilePathInUseException">
            <summary>
            Base class for JET_err.LogFilePathInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFilePathInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogFilePathInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogFilePathInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogFilePathInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTempPathInUseException">
            <summary>
            Base class for JET_err.TempPathInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTempPathInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentTempPathInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTempPathInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTempPathInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInstanceNameInUseException">
            <summary>
            Base class for JET_err.InstanceNameInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInstanceNameInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentInstanceNameInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInstanceNameInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInstanceNameInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSystemParameterConflictException">
            <summary>
            Base class for JET_err.SystemParameterConflict exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSystemParameterConflictException.#ctor">
            <summary>
            Initializes a new instance of the EsentSystemParameterConflictException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSystemParameterConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSystemParameterConflictException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInstanceUnavailableException">
            <summary>
            Base class for JET_err.InstanceUnavailable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInstanceUnavailableException.#ctor">
            <summary>
            Initializes a new instance of the EsentInstanceUnavailableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInstanceUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInstanceUnavailableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseUnavailableException">
            <summary>
            Base class for JET_err.DatabaseUnavailable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseUnavailableException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseUnavailableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseUnavailableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInstanceUnavailableDueToFatalLogDiskFullException">
            <summary>
            Base class for JET_err.InstanceUnavailableDueToFatalLogDiskFull exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInstanceUnavailableDueToFatalLogDiskFullException.#ctor">
            <summary>
            Initializes a new instance of the EsentInstanceUnavailableDueToFatalLogDiskFullException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInstanceUnavailableDueToFatalLogDiskFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInstanceUnavailableDueToFatalLogDiskFullException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidSesparamIdException">
            <summary>
            Base class for JET_err.InvalidSesparamId exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidSesparamIdException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidSesparamIdException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidSesparamIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidSesparamIdException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyRecordsException">
            <summary>
            Base class for JET_err.TooManyRecords exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyRecordsException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyRecordsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyRecordsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyRecordsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidDbparamIdException">
            <summary>
            Base class for JET_err.InvalidDbparamId exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidDbparamIdException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidDbparamIdException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidDbparamIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidDbparamIdException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOutOfSessionsException">
            <summary>
            Base class for JET_err.OutOfSessions exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfSessionsException.#ctor">
            <summary>
            Initializes a new instance of the EsentOutOfSessionsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOutOfSessionsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOutOfSessionsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentWriteConflictException">
            <summary>
            Base class for JET_err.WriteConflict exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentWriteConflictException.#ctor">
            <summary>
            Initializes a new instance of the EsentWriteConflictException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentWriteConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentWriteConflictException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTransTooDeepException">
            <summary>
            Base class for JET_err.TransTooDeep exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTransTooDeepException.#ctor">
            <summary>
            Initializes a new instance of the EsentTransTooDeepException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTransTooDeepException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTransTooDeepException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidSesidException">
            <summary>
            Base class for JET_err.InvalidSesid exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidSesidException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidSesidException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidSesidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidSesidException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentWriteConflictPrimaryIndexException">
            <summary>
            Base class for JET_err.WriteConflictPrimaryIndex exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentWriteConflictPrimaryIndexException.#ctor">
            <summary>
            Initializes a new instance of the EsentWriteConflictPrimaryIndexException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentWriteConflictPrimaryIndexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentWriteConflictPrimaryIndexException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInTransactionException">
            <summary>
            Base class for JET_err.InTransaction exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInTransactionException.#ctor">
            <summary>
            Initializes a new instance of the EsentInTransactionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInTransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInTransactionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRollbackRequiredException">
            <summary>
            Base class for JET_err.RollbackRequired exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRollbackRequiredException.#ctor">
            <summary>
            Initializes a new instance of the EsentRollbackRequiredException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRollbackRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRollbackRequiredException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTransReadOnlyException">
            <summary>
            Base class for JET_err.TransReadOnly exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTransReadOnlyException.#ctor">
            <summary>
            Initializes a new instance of the EsentTransReadOnlyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTransReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTransReadOnlyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSessionWriteConflictException">
            <summary>
            Base class for JET_err.SessionWriteConflict exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionWriteConflictException.#ctor">
            <summary>
            Initializes a new instance of the EsentSessionWriteConflictException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionWriteConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSessionWriteConflictException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecordTooBigForBackwardCompatibilityException">
            <summary>
            Base class for JET_err.RecordTooBigForBackwardCompatibility exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordTooBigForBackwardCompatibilityException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecordTooBigForBackwardCompatibilityException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordTooBigForBackwardCompatibilityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecordTooBigForBackwardCompatibilityException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotMaterializeForwardOnlySortException">
            <summary>
            Base class for JET_err.CannotMaterializeForwardOnlySort exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotMaterializeForwardOnlySortException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotMaterializeForwardOnlySortException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotMaterializeForwardOnlySortException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotMaterializeForwardOnlySortException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSesidTableIdMismatchException">
            <summary>
            Base class for JET_err.SesidTableIdMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSesidTableIdMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentSesidTableIdMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSesidTableIdMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSesidTableIdMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidInstanceException">
            <summary>
            Base class for JET_err.InvalidInstance exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidInstanceException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidInstanceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidInstanceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDirtyShutdownException">
            <summary>
            Base class for JET_err.DirtyShutdown exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDirtyShutdownException.#ctor">
            <summary>
            Initializes a new instance of the EsentDirtyShutdownException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDirtyShutdownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDirtyShutdownException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentReadPgnoVerifyFailureException">
            <summary>
            Base class for JET_err.ReadPgnoVerifyFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentReadPgnoVerifyFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentReadPgnoVerifyFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentReadPgnoVerifyFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentReadPgnoVerifyFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentReadLostFlushVerifyFailureException">
            <summary>
            Base class for JET_err.ReadLostFlushVerifyFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentReadLostFlushVerifyFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentReadLostFlushVerifyFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentReadLostFlushVerifyFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentReadLostFlushVerifyFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileSystemCorruptionException">
            <summary>
            Base class for JET_err.FileSystemCorruption exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileSystemCorruptionException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileSystemCorruptionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileSystemCorruptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileSystemCorruptionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecoveryVerifyFailureException">
            <summary>
            Base class for JET_err.RecoveryVerifyFailure exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecoveryVerifyFailureException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecoveryVerifyFailureException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecoveryVerifyFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecoveryVerifyFailureException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFilteredMoveNotSupportedException">
            <summary>
            Base class for JET_err.FilteredMoveNotSupported exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFilteredMoveNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the EsentFilteredMoveNotSupportedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFilteredMoveNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFilteredMoveNotSupportedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMustCommitDistributedTransactionToLevel0Exception">
            <summary>
            Base class for JET_err.MustCommitDistributedTransactionToLevel0 exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMustCommitDistributedTransactionToLevel0Exception.#ctor">
            <summary>
            Initializes a new instance of the EsentMustCommitDistributedTransactionToLevel0Exception class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMustCommitDistributedTransactionToLevel0Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMustCommitDistributedTransactionToLevel0Exception class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDistributedTransactionAlreadyPreparedToCommitException">
            <summary>
            Base class for JET_err.DistributedTransactionAlreadyPreparedToCommit exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDistributedTransactionAlreadyPreparedToCommitException.#ctor">
            <summary>
            Initializes a new instance of the EsentDistributedTransactionAlreadyPreparedToCommitException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDistributedTransactionAlreadyPreparedToCommitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDistributedTransactionAlreadyPreparedToCommitException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNotInDistributedTransactionException">
            <summary>
            Base class for JET_err.NotInDistributedTransaction exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNotInDistributedTransactionException.#ctor">
            <summary>
            Initializes a new instance of the EsentNotInDistributedTransactionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNotInDistributedTransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNotInDistributedTransactionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDistributedTransactionNotYetPreparedToCommitException">
            <summary>
            Base class for JET_err.DistributedTransactionNotYetPreparedToCommit exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDistributedTransactionNotYetPreparedToCommitException.#ctor">
            <summary>
            Initializes a new instance of the EsentDistributedTransactionNotYetPreparedToCommitException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDistributedTransactionNotYetPreparedToCommitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDistributedTransactionNotYetPreparedToCommitException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotNestDistributedTransactionsException">
            <summary>
            Base class for JET_err.CannotNestDistributedTransactions exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotNestDistributedTransactionsException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotNestDistributedTransactionsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotNestDistributedTransactionsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotNestDistributedTransactionsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDTCMissingCallbackException">
            <summary>
            Base class for JET_err.DTCMissingCallback exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDTCMissingCallbackException.#ctor">
            <summary>
            Initializes a new instance of the EsentDTCMissingCallbackException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDTCMissingCallbackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDTCMissingCallbackException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDTCMissingCallbackOnRecoveryException">
            <summary>
            Base class for JET_err.DTCMissingCallbackOnRecovery exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDTCMissingCallbackOnRecoveryException.#ctor">
            <summary>
            Initializes a new instance of the EsentDTCMissingCallbackOnRecoveryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDTCMissingCallbackOnRecoveryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDTCMissingCallbackOnRecoveryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDTCCallbackUnexpectedErrorException">
            <summary>
            Base class for JET_err.DTCCallbackUnexpectedError exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDTCCallbackUnexpectedErrorException.#ctor">
            <summary>
            Initializes a new instance of the EsentDTCCallbackUnexpectedErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDTCCallbackUnexpectedErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDTCCallbackUnexpectedErrorException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseDuplicateException">
            <summary>
            Base class for JET_err.DatabaseDuplicate exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseDuplicateException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseDuplicateException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseDuplicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseDuplicateException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseInUseException">
            <summary>
            Base class for JET_err.DatabaseInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseNotFoundException">
            <summary>
            Base class for JET_err.DatabaseNotFound exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseNotFoundException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidNameException">
            <summary>
            Base class for JET_err.DatabaseInvalidName exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidNameException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseInvalidNameException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseInvalidNameException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidPagesException">
            <summary>
            Base class for JET_err.DatabaseInvalidPages exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidPagesException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseInvalidPagesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidPagesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseInvalidPagesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseCorruptedException">
            <summary>
            Base class for JET_err.DatabaseCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseLockedException">
            <summary>
            Base class for JET_err.DatabaseLocked exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseLockedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseLockedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseLockedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseLockedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotDisableVersioningException">
            <summary>
            Base class for JET_err.CannotDisableVersioning exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotDisableVersioningException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotDisableVersioningException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotDisableVersioningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotDisableVersioningException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidDatabaseVersionException">
            <summary>
            Base class for JET_err.InvalidDatabaseVersion exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidDatabaseVersionException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidDatabaseVersionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidDatabaseVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidDatabaseVersionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabase200FormatException">
            <summary>
            Base class for JET_err.Database200Format exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabase200FormatException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabase200FormatException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabase200FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabase200FormatException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabase400FormatException">
            <summary>
            Base class for JET_err.Database400Format exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabase400FormatException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabase400FormatException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabase400FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabase400FormatException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabase500FormatException">
            <summary>
            Base class for JET_err.Database500Format exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabase500FormatException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabase500FormatException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabase500FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabase500FormatException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentPageSizeMismatchException">
            <summary>
            Base class for JET_err.PageSizeMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPageSizeMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentPageSizeMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPageSizeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentPageSizeMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyInstancesException">
            <summary>
            Base class for JET_err.TooManyInstances exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyInstancesException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyInstancesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyInstancesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyInstancesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseSharingViolationException">
            <summary>
            Base class for JET_err.DatabaseSharingViolation exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseSharingViolationException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseSharingViolationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseSharingViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseSharingViolationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentAttachedDatabaseMismatchException">
            <summary>
            Base class for JET_err.AttachedDatabaseMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAttachedDatabaseMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentAttachedDatabaseMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAttachedDatabaseMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentAttachedDatabaseMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidPathException">
            <summary>
            Base class for JET_err.DatabaseInvalidPath exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidPathException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseInvalidPathException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseInvalidPathException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseIdInUseException">
            <summary>
            Base class for JET_err.DatabaseIdInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseIdInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseIdInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseIdInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseIdInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentForceDetachNotAllowedException">
            <summary>
            Base class for JET_err.ForceDetachNotAllowed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentForceDetachNotAllowedException.#ctor">
            <summary>
            Initializes a new instance of the EsentForceDetachNotAllowedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentForceDetachNotAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentForceDetachNotAllowedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCatalogCorruptedException">
            <summary>
            Base class for JET_err.CatalogCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCatalogCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentCatalogCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCatalogCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCatalogCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentPartiallyAttachedDBException">
            <summary>
            Base class for JET_err.PartiallyAttachedDB exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPartiallyAttachedDBException.#ctor">
            <summary>
            Initializes a new instance of the EsentPartiallyAttachedDBException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPartiallyAttachedDBException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentPartiallyAttachedDBException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseSignInUseException">
            <summary>
            Base class for JET_err.DatabaseSignInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseSignInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseSignInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseSignInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseSignInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseCorruptedNoRepairException">
            <summary>
            Base class for JET_err.DatabaseCorruptedNoRepair exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseCorruptedNoRepairException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseCorruptedNoRepairException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseCorruptedNoRepairException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseCorruptedNoRepairException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidCreateDbVersionException">
            <summary>
            Base class for JET_err.InvalidCreateDbVersion exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidCreateDbVersionException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidCreateDbVersionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidCreateDbVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidCreateDbVersionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseIncompleteIncrementalReseedException">
            <summary>
            Base class for JET_err.DatabaseIncompleteIncrementalReseed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseIncompleteIncrementalReseedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseIncompleteIncrementalReseedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseIncompleteIncrementalReseedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseIncompleteIncrementalReseedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidIncrementalReseedException">
            <summary>
            Base class for JET_err.DatabaseInvalidIncrementalReseed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidIncrementalReseedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseInvalidIncrementalReseedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseInvalidIncrementalReseedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseInvalidIncrementalReseedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseFailedIncrementalReseedException">
            <summary>
            Base class for JET_err.DatabaseFailedIncrementalReseed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseFailedIncrementalReseedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseFailedIncrementalReseedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseFailedIncrementalReseedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseFailedIncrementalReseedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNoAttachmentsFailedIncrementalReseedException">
            <summary>
            Base class for JET_err.NoAttachmentsFailedIncrementalReseed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoAttachmentsFailedIncrementalReseedException.#ctor">
            <summary>
            Initializes a new instance of the EsentNoAttachmentsFailedIncrementalReseedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoAttachmentsFailedIncrementalReseedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNoAttachmentsFailedIncrementalReseedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseNotReadyException">
            <summary>
            Base class for JET_err.DatabaseNotReady exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseNotReadyException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseNotReadyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseNotReadyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseNotReadyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseAttachedForRecoveryException">
            <summary>
            Base class for JET_err.DatabaseAttachedForRecovery exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseAttachedForRecoveryException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseAttachedForRecoveryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseAttachedForRecoveryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseAttachedForRecoveryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTransactionsNotReadyDuringRecoveryException">
            <summary>
            Base class for JET_err.TransactionsNotReadyDuringRecovery exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTransactionsNotReadyDuringRecoveryException.#ctor">
            <summary>
            Initializes a new instance of the EsentTransactionsNotReadyDuringRecoveryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTransactionsNotReadyDuringRecoveryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTransactionsNotReadyDuringRecoveryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTableLockedException">
            <summary>
            Base class for JET_err.TableLocked exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTableLockedException.#ctor">
            <summary>
            Initializes a new instance of the EsentTableLockedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTableLockedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTableLockedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTableDuplicateException">
            <summary>
            Base class for JET_err.TableDuplicate exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTableDuplicateException.#ctor">
            <summary>
            Initializes a new instance of the EsentTableDuplicateException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTableDuplicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTableDuplicateException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTableInUseException">
            <summary>
            Base class for JET_err.TableInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTableInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentTableInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTableInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTableInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentObjectNotFoundException">
            <summary>
            Base class for JET_err.ObjectNotFound exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentObjectNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the EsentObjectNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentObjectNotFoundException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDensityInvalidException">
            <summary>
            Base class for JET_err.DensityInvalid exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDensityInvalidException.#ctor">
            <summary>
            Initializes a new instance of the EsentDensityInvalidException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDensityInvalidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDensityInvalidException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTableNotEmptyException">
            <summary>
            Base class for JET_err.TableNotEmpty exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTableNotEmptyException.#ctor">
            <summary>
            Initializes a new instance of the EsentTableNotEmptyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTableNotEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTableNotEmptyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidTableIdException">
            <summary>
            Base class for JET_err.InvalidTableId exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidTableIdException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidTableIdException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidTableIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidTableIdException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyOpenTablesException">
            <summary>
            Base class for JET_err.TooManyOpenTables exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyOpenTablesException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyOpenTablesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyOpenTablesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyOpenTablesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIllegalOperationException">
            <summary>
            Base class for JET_err.IllegalOperation exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIllegalOperationException.#ctor">
            <summary>
            Initializes a new instance of the EsentIllegalOperationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIllegalOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIllegalOperationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyOpenTablesAndCleanupTimedOutException">
            <summary>
            Base class for JET_err.TooManyOpenTablesAndCleanupTimedOut exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyOpenTablesAndCleanupTimedOutException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyOpenTablesAndCleanupTimedOutException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyOpenTablesAndCleanupTimedOutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyOpenTablesAndCleanupTimedOutException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentObjectDuplicateException">
            <summary>
            Base class for JET_err.ObjectDuplicate exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentObjectDuplicateException.#ctor">
            <summary>
            Initializes a new instance of the EsentObjectDuplicateException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentObjectDuplicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentObjectDuplicateException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidObjectException">
            <summary>
            Base class for JET_err.InvalidObject exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidObjectException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidObjectException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidObjectException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotDeleteTempTableException">
            <summary>
            Base class for JET_err.CannotDeleteTempTable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotDeleteTempTableException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotDeleteTempTableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotDeleteTempTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotDeleteTempTableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotDeleteSystemTableException">
            <summary>
            Base class for JET_err.CannotDeleteSystemTable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotDeleteSystemTableException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotDeleteSystemTableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotDeleteSystemTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotDeleteSystemTableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotDeleteTemplateTableException">
            <summary>
            Base class for JET_err.CannotDeleteTemplateTable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotDeleteTemplateTableException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotDeleteTemplateTableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotDeleteTemplateTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotDeleteTemplateTableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentExclusiveTableLockRequiredException">
            <summary>
            Base class for JET_err.ExclusiveTableLockRequired exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentExclusiveTableLockRequiredException.#ctor">
            <summary>
            Initializes a new instance of the EsentExclusiveTableLockRequiredException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentExclusiveTableLockRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentExclusiveTableLockRequiredException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFixedDDLException">
            <summary>
            Base class for JET_err.FixedDDL exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFixedDDLException.#ctor">
            <summary>
            Initializes a new instance of the EsentFixedDDLException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFixedDDLException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFixedDDLException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFixedInheritedDDLException">
            <summary>
            Base class for JET_err.FixedInheritedDDL exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFixedInheritedDDLException.#ctor">
            <summary>
            Initializes a new instance of the EsentFixedInheritedDDLException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFixedInheritedDDLException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFixedInheritedDDLException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotNestDDLException">
            <summary>
            Base class for JET_err.CannotNestDDL exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotNestDDLException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotNestDDLException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotNestDDLException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotNestDDLException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDDLNotInheritableException">
            <summary>
            Base class for JET_err.DDLNotInheritable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDDLNotInheritableException.#ctor">
            <summary>
            Initializes a new instance of the EsentDDLNotInheritableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDDLNotInheritableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDDLNotInheritableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidSettingsException">
            <summary>
            Base class for JET_err.InvalidSettings exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidSettingsException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidSettingsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidSettingsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidSettingsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentClientRequestToStopJetServiceException">
            <summary>
            Base class for JET_err.ClientRequestToStopJetService exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentClientRequestToStopJetServiceException.#ctor">
            <summary>
            Initializes a new instance of the EsentClientRequestToStopJetServiceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentClientRequestToStopJetServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentClientRequestToStopJetServiceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotAddFixedVarColumnToDerivedTableException">
            <summary>
            Base class for JET_err.CannotAddFixedVarColumnToDerivedTable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotAddFixedVarColumnToDerivedTableException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotAddFixedVarColumnToDerivedTableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotAddFixedVarColumnToDerivedTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotAddFixedVarColumnToDerivedTableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexCantBuildException">
            <summary>
            Base class for JET_err.IndexCantBuild exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexCantBuildException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexCantBuildException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexCantBuildException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexCantBuildException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexHasPrimaryException">
            <summary>
            Base class for JET_err.IndexHasPrimary exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexHasPrimaryException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexHasPrimaryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexHasPrimaryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexHasPrimaryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexDuplicateException">
            <summary>
            Base class for JET_err.IndexDuplicate exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexDuplicateException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexDuplicateException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexDuplicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexDuplicateException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexNotFoundException">
            <summary>
            Base class for JET_err.IndexNotFound exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexNotFoundException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexMustStayException">
            <summary>
            Base class for JET_err.IndexMustStay exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexMustStayException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexMustStayException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexMustStayException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexMustStayException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexInvalidDefException">
            <summary>
            Base class for JET_err.IndexInvalidDef exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexInvalidDefException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexInvalidDefException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexInvalidDefException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexInvalidDefException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidCreateIndexException">
            <summary>
            Base class for JET_err.InvalidCreateIndex exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidCreateIndexException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidCreateIndexException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidCreateIndexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidCreateIndexException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyOpenIndexesException">
            <summary>
            Base class for JET_err.TooManyOpenIndexes exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyOpenIndexesException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyOpenIndexesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyOpenIndexesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyOpenIndexesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMultiValuedIndexViolationException">
            <summary>
            Base class for JET_err.MultiValuedIndexViolation exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMultiValuedIndexViolationException.#ctor">
            <summary>
            Initializes a new instance of the EsentMultiValuedIndexViolationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMultiValuedIndexViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMultiValuedIndexViolationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexBuildCorruptedException">
            <summary>
            Base class for JET_err.IndexBuildCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexBuildCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexBuildCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexBuildCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexBuildCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentPrimaryIndexCorruptedException">
            <summary>
            Base class for JET_err.PrimaryIndexCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPrimaryIndexCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentPrimaryIndexCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPrimaryIndexCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentPrimaryIndexCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSecondaryIndexCorruptedException">
            <summary>
            Base class for JET_err.SecondaryIndexCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSecondaryIndexCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentSecondaryIndexCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSecondaryIndexCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSecondaryIndexCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidIndexIdException">
            <summary>
            Base class for JET_err.InvalidIndexId exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidIndexIdException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidIndexIdException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidIndexIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidIndexIdException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexTuplesSecondaryIndexOnlyException">
            <summary>
            Base class for JET_err.IndexTuplesSecondaryIndexOnly exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesSecondaryIndexOnlyException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexTuplesSecondaryIndexOnlyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesSecondaryIndexOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexTuplesSecondaryIndexOnlyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexTuplesTooManyColumnsException">
            <summary>
            Base class for JET_err.IndexTuplesTooManyColumns exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesTooManyColumnsException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexTuplesTooManyColumnsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesTooManyColumnsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexTuplesTooManyColumnsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexTuplesNonUniqueOnlyException">
            <summary>
            Base class for JET_err.IndexTuplesNonUniqueOnly exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesNonUniqueOnlyException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexTuplesNonUniqueOnlyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesNonUniqueOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexTuplesNonUniqueOnlyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexTuplesTextBinaryColumnsOnlyException">
            <summary>
            Base class for JET_err.IndexTuplesTextBinaryColumnsOnly exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesTextBinaryColumnsOnlyException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexTuplesTextBinaryColumnsOnlyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesTextBinaryColumnsOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexTuplesTextBinaryColumnsOnlyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexTuplesVarSegMacNotAllowedException">
            <summary>
            Base class for JET_err.IndexTuplesVarSegMacNotAllowed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesVarSegMacNotAllowedException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexTuplesVarSegMacNotAllowedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesVarSegMacNotAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexTuplesVarSegMacNotAllowedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexTuplesInvalidLimitsException">
            <summary>
            Base class for JET_err.IndexTuplesInvalidLimits exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesInvalidLimitsException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexTuplesInvalidLimitsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesInvalidLimitsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexTuplesInvalidLimitsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexTuplesCannotRetrieveFromIndexException">
            <summary>
            Base class for JET_err.IndexTuplesCannotRetrieveFromIndex exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesCannotRetrieveFromIndexException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexTuplesCannotRetrieveFromIndexException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesCannotRetrieveFromIndexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexTuplesCannotRetrieveFromIndexException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentIndexTuplesKeyTooSmallException">
            <summary>
            Base class for JET_err.IndexTuplesKeyTooSmall exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesKeyTooSmallException.#ctor">
            <summary>
            Initializes a new instance of the EsentIndexTuplesKeyTooSmallException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentIndexTuplesKeyTooSmallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentIndexTuplesKeyTooSmallException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidLVChunkSizeException">
            <summary>
            Base class for JET_err.InvalidLVChunkSize exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLVChunkSizeException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidLVChunkSizeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLVChunkSizeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidLVChunkSizeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnCannotBeEncryptedException">
            <summary>
            Base class for JET_err.ColumnCannotBeEncrypted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnCannotBeEncryptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnCannotBeEncryptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnCannotBeEncryptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnCannotBeEncryptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotIndexOnEncryptedColumnException">
            <summary>
            Base class for JET_err.CannotIndexOnEncryptedColumn exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotIndexOnEncryptedColumnException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotIndexOnEncryptedColumnException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotIndexOnEncryptedColumnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotIndexOnEncryptedColumnException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnLongException">
            <summary>
            Base class for JET_err.ColumnLong exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnLongException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnLongException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnLongException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnLongException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnNoChunkException">
            <summary>
            Base class for JET_err.ColumnNoChunk exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnNoChunkException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnNoChunkException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnNoChunkException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnNoChunkException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnDoesNotFitException">
            <summary>
            Base class for JET_err.ColumnDoesNotFit exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnDoesNotFitException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnDoesNotFitException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnDoesNotFitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnDoesNotFitException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNullInvalidException">
            <summary>
            Base class for JET_err.NullInvalid exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNullInvalidException.#ctor">
            <summary>
            Initializes a new instance of the EsentNullInvalidException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNullInvalidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNullInvalidException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnIndexedException">
            <summary>
            Base class for JET_err.ColumnIndexed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnIndexedException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnIndexedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnIndexedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnIndexedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnTooBigException">
            <summary>
            Base class for JET_err.ColumnTooBig exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnTooBigException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnTooBigException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnTooBigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnTooBigException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnNotFoundException">
            <summary>
            Base class for JET_err.ColumnNotFound exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnNotFoundException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnDuplicateException">
            <summary>
            Base class for JET_err.ColumnDuplicate exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnDuplicateException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnDuplicateException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnDuplicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnDuplicateException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMultiValuedColumnMustBeTaggedException">
            <summary>
            Base class for JET_err.MultiValuedColumnMustBeTagged exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMultiValuedColumnMustBeTaggedException.#ctor">
            <summary>
            Initializes a new instance of the EsentMultiValuedColumnMustBeTaggedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMultiValuedColumnMustBeTaggedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMultiValuedColumnMustBeTaggedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnRedundantException">
            <summary>
            Base class for JET_err.ColumnRedundant exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnRedundantException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnRedundantException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnRedundantException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnRedundantException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidColumnTypeException">
            <summary>
            Base class for JET_err.InvalidColumnType exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidColumnTypeException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidColumnTypeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidColumnTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidColumnTypeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTaggedNotNULLException">
            <summary>
            Base class for JET_err.TaggedNotNULL exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTaggedNotNULLException.#ctor">
            <summary>
            Initializes a new instance of the EsentTaggedNotNULLException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTaggedNotNULLException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTaggedNotNULLException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNoCurrentIndexException">
            <summary>
            Base class for JET_err.NoCurrentIndex exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoCurrentIndexException.#ctor">
            <summary>
            Initializes a new instance of the EsentNoCurrentIndexException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoCurrentIndexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNoCurrentIndexException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentKeyIsMadeException">
            <summary>
            Base class for JET_err.KeyIsMade exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyIsMadeException.#ctor">
            <summary>
            Initializes a new instance of the EsentKeyIsMadeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyIsMadeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentKeyIsMadeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadColumnIdException">
            <summary>
            Base class for JET_err.BadColumnId exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadColumnIdException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadColumnIdException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadColumnIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadColumnIdException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentBadItagSequenceException">
            <summary>
            Base class for JET_err.BadItagSequence exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadItagSequenceException.#ctor">
            <summary>
            Initializes a new instance of the EsentBadItagSequenceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentBadItagSequenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentBadItagSequenceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnInRelationshipException">
            <summary>
            Base class for JET_err.ColumnInRelationship exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnInRelationshipException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnInRelationshipException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnInRelationshipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnInRelationshipException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCannotBeTaggedException">
            <summary>
            Base class for JET_err.CannotBeTagged exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotBeTaggedException.#ctor">
            <summary>
            Initializes a new instance of the EsentCannotBeTaggedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCannotBeTaggedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCannotBeTaggedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDefaultValueTooBigException">
            <summary>
            Base class for JET_err.DefaultValueTooBig exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDefaultValueTooBigException.#ctor">
            <summary>
            Initializes a new instance of the EsentDefaultValueTooBigException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDefaultValueTooBigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDefaultValueTooBigException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMultiValuedDuplicateException">
            <summary>
            Base class for JET_err.MultiValuedDuplicate exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMultiValuedDuplicateException.#ctor">
            <summary>
            Initializes a new instance of the EsentMultiValuedDuplicateException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMultiValuedDuplicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMultiValuedDuplicateException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLVCorruptedException">
            <summary>
            Base class for JET_err.LVCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLVCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentLVCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLVCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLVCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentMultiValuedDuplicateAfterTruncationException">
            <summary>
            Base class for JET_err.MultiValuedDuplicateAfterTruncation exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMultiValuedDuplicateAfterTruncationException.#ctor">
            <summary>
            Initializes a new instance of the EsentMultiValuedDuplicateAfterTruncationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentMultiValuedDuplicateAfterTruncationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentMultiValuedDuplicateAfterTruncationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDerivedColumnCorruptionException">
            <summary>
            Base class for JET_err.DerivedColumnCorruption exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDerivedColumnCorruptionException.#ctor">
            <summary>
            Initializes a new instance of the EsentDerivedColumnCorruptionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDerivedColumnCorruptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDerivedColumnCorruptionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidPlaceholderColumnException">
            <summary>
            Base class for JET_err.InvalidPlaceholderColumn exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidPlaceholderColumnException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidPlaceholderColumnException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidPlaceholderColumnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidPlaceholderColumnException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnCannotBeCompressedException">
            <summary>
            Base class for JET_err.ColumnCannotBeCompressed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnCannotBeCompressedException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnCannotBeCompressedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnCannotBeCompressedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnCannotBeCompressedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentColumnNoEncryptionKeyException">
            <summary>
            Base class for JET_err.ColumnNoEncryptionKey exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnNoEncryptionKeyException.#ctor">
            <summary>
            Initializes a new instance of the EsentColumnNoEncryptionKeyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentColumnNoEncryptionKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentColumnNoEncryptionKeyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecordNotFoundException">
            <summary>
            Base class for JET_err.RecordNotFound exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecordNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecordNotFoundException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecordNoCopyException">
            <summary>
            Base class for JET_err.RecordNoCopy exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordNoCopyException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecordNoCopyException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordNoCopyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecordNoCopyException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentNoCurrentRecordException">
            <summary>
            Base class for JET_err.NoCurrentRecord exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoCurrentRecordException.#ctor">
            <summary>
            Initializes a new instance of the EsentNoCurrentRecordException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentNoCurrentRecordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentNoCurrentRecordException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecordPrimaryChangedException">
            <summary>
            Base class for JET_err.RecordPrimaryChanged exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordPrimaryChangedException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecordPrimaryChangedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordPrimaryChangedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecordPrimaryChangedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentKeyDuplicateException">
            <summary>
            Base class for JET_err.KeyDuplicate exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyDuplicateException.#ctor">
            <summary>
            Initializes a new instance of the EsentKeyDuplicateException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyDuplicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentKeyDuplicateException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentAlreadyPreparedException">
            <summary>
            Base class for JET_err.AlreadyPrepared exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAlreadyPreparedException.#ctor">
            <summary>
            Initializes a new instance of the EsentAlreadyPreparedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAlreadyPreparedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentAlreadyPreparedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentKeyNotMadeException">
            <summary>
            Base class for JET_err.KeyNotMade exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyNotMadeException.#ctor">
            <summary>
            Initializes a new instance of the EsentKeyNotMadeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentKeyNotMadeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentKeyNotMadeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentUpdateNotPreparedException">
            <summary>
            Base class for JET_err.UpdateNotPrepared exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUpdateNotPreparedException.#ctor">
            <summary>
            Initializes a new instance of the EsentUpdateNotPreparedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUpdateNotPreparedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentUpdateNotPreparedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDataHasChangedException">
            <summary>
            Base class for JET_err.DataHasChanged exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDataHasChangedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDataHasChangedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDataHasChangedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDataHasChangedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLanguageNotSupportedException">
            <summary>
            Base class for JET_err.LanguageNotSupported exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLanguageNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the EsentLanguageNotSupportedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLanguageNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLanguageNotSupportedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDecompressionFailedException">
            <summary>
            Base class for JET_err.DecompressionFailed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDecompressionFailedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDecompressionFailedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDecompressionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDecompressionFailedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentUpdateMustVersionException">
            <summary>
            Base class for JET_err.UpdateMustVersion exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUpdateMustVersionException.#ctor">
            <summary>
            Initializes a new instance of the EsentUpdateMustVersionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentUpdateMustVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentUpdateMustVersionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDecryptionFailedException">
            <summary>
            Base class for JET_err.DecryptionFailed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDecryptionFailedException.#ctor">
            <summary>
            Initializes a new instance of the EsentDecryptionFailedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDecryptionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDecryptionFailedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentEncryptionBadItagException">
            <summary>
            Base class for JET_err.EncryptionBadItag exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEncryptionBadItagException.#ctor">
            <summary>
            Initializes a new instance of the EsentEncryptionBadItagException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEncryptionBadItagException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentEncryptionBadItagException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManySortsException">
            <summary>
            Base class for JET_err.TooManySorts exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManySortsException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManySortsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManySortsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManySortsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidOnSortException">
            <summary>
            Base class for JET_err.InvalidOnSort exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidOnSortException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidOnSortException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidOnSortException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidOnSortException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTempFileOpenErrorException">
            <summary>
            Base class for JET_err.TempFileOpenError exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTempFileOpenErrorException.#ctor">
            <summary>
            Initializes a new instance of the EsentTempFileOpenErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTempFileOpenErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTempFileOpenErrorException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyAttachedDatabasesException">
            <summary>
            Base class for JET_err.TooManyAttachedDatabases exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyAttachedDatabasesException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyAttachedDatabasesException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyAttachedDatabasesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyAttachedDatabasesException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDiskFullException">
            <summary>
            Base class for JET_err.DiskFull exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDiskFullException.#ctor">
            <summary>
            Initializes a new instance of the EsentDiskFullException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDiskFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDiskFullException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentPermissionDeniedException">
            <summary>
            Base class for JET_err.PermissionDenied exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPermissionDeniedException.#ctor">
            <summary>
            Initializes a new instance of the EsentPermissionDeniedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentPermissionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentPermissionDeniedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileNotFoundException">
            <summary>
            Base class for JET_err.FileNotFound exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileNotFoundException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileInvalidTypeException">
            <summary>
            Base class for JET_err.FileInvalidType exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileInvalidTypeException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileInvalidTypeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileInvalidTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileInvalidTypeException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileAlreadyExistsException">
            <summary>
            Base class for JET_err.FileAlreadyExists exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileAlreadyExistsException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileAlreadyExistsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileAlreadyExistsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentAfterInitializationException">
            <summary>
            Base class for JET_err.AfterInitialization exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAfterInitializationException.#ctor">
            <summary>
            Initializes a new instance of the EsentAfterInitializationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAfterInitializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentAfterInitializationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLogCorruptedException">
            <summary>
            Base class for JET_err.LogCorrupted exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the EsentLogCorruptedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLogCorruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLogCorruptedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidOperationException">
            <summary>
            Base class for JET_err.InvalidOperation exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidOperationException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidOperationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidOperationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentAccessDeniedException">
            <summary>
            Base class for JET_err.AccessDenied exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAccessDeniedException.#ctor">
            <summary>
            Initializes a new instance of the EsentAccessDeniedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentAccessDeniedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManySplitsException">
            <summary>
            Base class for JET_err.TooManySplits exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManySplitsException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManySplitsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManySplitsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManySplitsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSessionSharingViolationException">
            <summary>
            Base class for JET_err.SessionSharingViolation exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionSharingViolationException.#ctor">
            <summary>
            Initializes a new instance of the EsentSessionSharingViolationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionSharingViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSessionSharingViolationException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentEntryPointNotFoundException">
            <summary>
            Base class for JET_err.EntryPointNotFound exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEntryPointNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the EsentEntryPointNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentEntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentEntryPointNotFoundException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSessionContextAlreadySetException">
            <summary>
            Base class for JET_err.SessionContextAlreadySet exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionContextAlreadySetException.#ctor">
            <summary>
            Initializes a new instance of the EsentSessionContextAlreadySetException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionContextAlreadySetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSessionContextAlreadySetException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSessionContextNotSetByThisThreadException">
            <summary>
            Base class for JET_err.SessionContextNotSetByThisThread exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionContextNotSetByThisThreadException.#ctor">
            <summary>
            Initializes a new instance of the EsentSessionContextNotSetByThisThreadException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionContextNotSetByThisThreadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSessionContextNotSetByThisThreadException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSessionInUseException">
            <summary>
            Base class for JET_err.SessionInUse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionInUseException.#ctor">
            <summary>
            Initializes a new instance of the EsentSessionInUseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSessionInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSessionInUseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRecordFormatConversionFailedException">
            <summary>
            Base class for JET_err.RecordFormatConversionFailed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordFormatConversionFailedException.#ctor">
            <summary>
            Initializes a new instance of the EsentRecordFormatConversionFailedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRecordFormatConversionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRecordFormatConversionFailedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOneDatabasePerSessionException">
            <summary>
            Base class for JET_err.OneDatabasePerSession exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOneDatabasePerSessionException.#ctor">
            <summary>
            Initializes a new instance of the EsentOneDatabasePerSessionException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOneDatabasePerSessionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOneDatabasePerSessionException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentRollbackErrorException">
            <summary>
            Base class for JET_err.RollbackError exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRollbackErrorException.#ctor">
            <summary>
            Initializes a new instance of the EsentRollbackErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentRollbackErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentRollbackErrorException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFlushMapVersionUnsupportedException">
            <summary>
            Base class for JET_err.FlushMapVersionUnsupported exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFlushMapVersionUnsupportedException.#ctor">
            <summary>
            Initializes a new instance of the EsentFlushMapVersionUnsupportedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFlushMapVersionUnsupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFlushMapVersionUnsupportedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFlushMapDatabaseMismatchException">
            <summary>
            Base class for JET_err.FlushMapDatabaseMismatch exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFlushMapDatabaseMismatchException.#ctor">
            <summary>
            Initializes a new instance of the EsentFlushMapDatabaseMismatchException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFlushMapDatabaseMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFlushMapDatabaseMismatchException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFlushMapUnrecoverableException">
            <summary>
            Base class for JET_err.FlushMapUnrecoverable exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFlushMapUnrecoverableException.#ctor">
            <summary>
            Initializes a new instance of the EsentFlushMapUnrecoverableException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFlushMapUnrecoverableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFlushMapUnrecoverableException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentDatabaseAlreadyRunningMaintenanceException">
            <summary>
            Base class for JET_err.DatabaseAlreadyRunningMaintenance exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseAlreadyRunningMaintenanceException.#ctor">
            <summary>
            Initializes a new instance of the EsentDatabaseAlreadyRunningMaintenanceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentDatabaseAlreadyRunningMaintenanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentDatabaseAlreadyRunningMaintenanceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCallbackFailedException">
            <summary>
            Base class for JET_err.CallbackFailed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCallbackFailedException.#ctor">
            <summary>
            Initializes a new instance of the EsentCallbackFailedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCallbackFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCallbackFailedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentCallbackNotResolvedException">
            <summary>
            Base class for JET_err.CallbackNotResolved exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCallbackNotResolvedException.#ctor">
            <summary>
            Initializes a new instance of the EsentCallbackNotResolvedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentCallbackNotResolvedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentCallbackNotResolvedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentSpaceHintsInvalidException">
            <summary>
            Base class for JET_err.SpaceHintsInvalid exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSpaceHintsInvalidException.#ctor">
            <summary>
            Initializes a new instance of the EsentSpaceHintsInvalidException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentSpaceHintsInvalidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentSpaceHintsInvalidException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOSSnapshotInvalidSequenceException">
            <summary>
            Base class for JET_err.OSSnapshotInvalidSequence exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOSSnapshotInvalidSequenceException.#ctor">
            <summary>
            Initializes a new instance of the EsentOSSnapshotInvalidSequenceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOSSnapshotInvalidSequenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOSSnapshotInvalidSequenceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOSSnapshotTimeOutException">
            <summary>
            Base class for JET_err.OSSnapshotTimeOut exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOSSnapshotTimeOutException.#ctor">
            <summary>
            Initializes a new instance of the EsentOSSnapshotTimeOutException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOSSnapshotTimeOutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOSSnapshotTimeOutException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOSSnapshotNotAllowedException">
            <summary>
            Base class for JET_err.OSSnapshotNotAllowed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOSSnapshotNotAllowedException.#ctor">
            <summary>
            Initializes a new instance of the EsentOSSnapshotNotAllowedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOSSnapshotNotAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOSSnapshotNotAllowedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentOSSnapshotInvalidSnapIdException">
            <summary>
            Base class for JET_err.OSSnapshotInvalidSnapId exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOSSnapshotInvalidSnapIdException.#ctor">
            <summary>
            Initializes a new instance of the EsentOSSnapshotInvalidSnapIdException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentOSSnapshotInvalidSnapIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentOSSnapshotInvalidSnapIdException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTooManyTestInjectionsException">
            <summary>
            Base class for JET_err.TooManyTestInjections exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyTestInjectionsException.#ctor">
            <summary>
            Initializes a new instance of the EsentTooManyTestInjectionsException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTooManyTestInjectionsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTooManyTestInjectionsException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentTestInjectionNotSupportedException">
            <summary>
            Base class for JET_err.TestInjectionNotSupported exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTestInjectionNotSupportedException.#ctor">
            <summary>
            Initializes a new instance of the EsentTestInjectionNotSupportedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentTestInjectionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentTestInjectionNotSupportedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidLogDataSequenceException">
            <summary>
            Base class for JET_err.InvalidLogDataSequence exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLogDataSequenceException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidLogDataSequenceException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidLogDataSequenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidLogDataSequenceException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLSCallbackNotSpecifiedException">
            <summary>
            Base class for JET_err.LSCallbackNotSpecified exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLSCallbackNotSpecifiedException.#ctor">
            <summary>
            Initializes a new instance of the EsentLSCallbackNotSpecifiedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLSCallbackNotSpecifiedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLSCallbackNotSpecifiedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLSAlreadySetException">
            <summary>
            Base class for JET_err.LSAlreadySet exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLSAlreadySetException.#ctor">
            <summary>
            Initializes a new instance of the EsentLSAlreadySetException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLSAlreadySetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLSAlreadySetException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentLSNotSetException">
            <summary>
            Base class for JET_err.LSNotSet exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLSNotSetException.#ctor">
            <summary>
            Initializes a new instance of the EsentLSNotSetException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentLSNotSetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentLSNotSetException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileIOSparseException">
            <summary>
            Base class for JET_err.FileIOSparse exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIOSparseException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileIOSparseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIOSparseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileIOSparseException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileIOBeyondEOFException">
            <summary>
            Base class for JET_err.FileIOBeyondEOF exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIOBeyondEOFException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileIOBeyondEOFException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIOBeyondEOFException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileIOBeyondEOFException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileIOAbortException">
            <summary>
            Base class for JET_err.FileIOAbort exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIOAbortException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileIOAbortException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIOAbortException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileIOAbortException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileIORetryException">
            <summary>
            Base class for JET_err.FileIORetry exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIORetryException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileIORetryException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIORetryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileIORetryException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileIOFailException">
            <summary>
            Base class for JET_err.FileIOFail exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIOFailException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileIOFailException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileIOFailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileIOFailException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentFileCompressedException">
            <summary>
            Base class for JET_err.FileCompressed exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileCompressedException.#ctor">
            <summary>
            Initializes a new instance of the EsentFileCompressedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentFileCompressedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentFileCompressedException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentExceptionHelper">
            <summary>
            Method to generate an EsentErrorException from an error code.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentExceptionHelper.JetErrToException(Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Create an EsentErrorException from an error code.
            </summary>
            <param name="err">The error code.</param>
            <returns>An EsentErrorException for the error code.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentErrorException">
            <summary>
            Base class for ESENT error exceptions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EsentErrorException.errorCode">
            <summary>
            The error code that was encountered.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentErrorException.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_err)">
            <summary>
            Initializes a new instance of the EsentErrorException class.
            </summary>
            <param name="message">The description of the error.</param>
            <param name="err">The error code of the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentErrorException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentErrorException.Error">
            <summary>
            Gets the underlying Esent error for this exception.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
            </PermissionSet>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentInvalidColumnException">
            <summary>
            Exception thrown when a column conversion fails.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidColumnException.#ctor">
            <summary>
            Initializes a new instance of the EsentInvalidColumnException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentInvalidColumnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentInvalidColumnException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentInvalidColumnException.Message">
            <summary>
            Gets a text message describing the exception.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentResource">
            <summary>
            This is the base class for all esent resource objects.
            Subclasses of this class can allocate and release unmanaged
            resources.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EsentResource.hasResource">
            <summary>
            True if a resource has been allocated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EsentResource.isDisposed">
            <summary>
            True if this object has been disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentResource.Finalize">
            <summary>
            Finalizes an instance of the EsentResource class.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentResource.HasResource">
            <summary>
            Gets a value indicating whether the underlying resource
            is currently allocated.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentResource.Dispose">
            <summary>
            Dispose of this object, releasing the underlying
            Esent resource.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentResource.Dispose(System.Boolean)">
            <summary>
            Called by Dispose and the finalizer.
            </summary>
            <param name="isDisposing">
            True if called from Dispose.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentResource.CheckObjectIsNotDisposed">
            <summary>
            Throw an exception if this object has been disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentResource.ResourceWasAllocated">
            <summary>
            Called by a subclass when a resource is allocated.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentResource.ResourceWasReleased">
            <summary>
            Called by a subclass when a resource is freed.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentResource.ReleaseResource">
            <summary>
            Implemented by the subclass to release a resource.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentStopwatch">
            <summary>
            Provides a set of methods and properties that you can use to measure
            ESENT work statistics for a thread. If the current version of ESENT
            doesn't support <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetGetThreadStats(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS@)"/> then all 
            ESENT statistics will be 0.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EsentStopwatch.stopwatch">
            <summary>
            Used to measure how long statistics are collected for.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EsentStopwatch.statsAtStart">
            <summary>
            The stats at the start of our collection.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentStopwatch.IsRunning">
            <summary>
            Gets a value indicating whether the EsentStopwatch timer is running. 
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentStopwatch.ThreadStats">
            <summary>
            Gets the total ESENT work stats measured by the current instance.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentStopwatch.Elapsed">
            <summary>
            Gets the total elapsed time measured by the current instance.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStopwatch.StartNew">
            <summary>
            Initializes a new EsentStopwatch instance and starts
            measuring elapsed time. 
            </summary>
            <returns>A new, running EsentStopwatch.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStopwatch.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Diagnostics.Stopwatch"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Diagnostics.Stopwatch"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStopwatch.Start">
            <summary>
            Starts measuring ESENT work.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStopwatch.Stop">
            <summary>
            Stops measuring ESENT work.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.EsentStopwatch.Reset">
            <summary>
            Stops time interval measurement and resets the thread statistics.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EsentVersion">
            <summary>
            Gives information about the version of esent being used.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentVersion.SupportsServer2003Features">
            <summary>
            Gets a value indicating whether the current version of esent
            supports features available in the Windows Server 2003 version of
            esent.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentVersion.SupportsVistaFeatures">
            <summary>
            Gets a value indicating whether the current version of esent
            supports features available in the Windows Vista version of
            esent.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentVersion.SupportsWindows7Features">
            <summary>
            Gets a value indicating whether the current version of esent
            supports features available in the Windows 7 version of
            esent.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentVersion.SupportsWindows8Features">
            <summary>
            Gets a value indicating whether the current version of esent
            supports features available in the Windows 8 version of
            esent.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentVersion.SupportsWindows81Features">
            <summary>
            Gets a value indicating whether the current version of esent
            supports features available in the Windows 8.1 version of
            esent.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentVersion.SupportsWindows10Features">
            <summary>
            Gets a value indicating whether the current version of esent
            supports features available in the Windows 10 version of
            esent.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentVersion.SupportsUnicodePaths">
            <summary>
            Gets a value indicating whether the current version of esent
            can use non-ASCII paths to access databases.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentVersion.SupportsLargeKeys">
            <summary>
            Gets a value indicating whether large (> 255 byte) keys are supported.
            The key size for an index can be specified in the <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE"/>
            object.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.EsentVersion.Capabilities">
            <summary>
            Gets a description of the current Esent capabilities.
            </summary>
            <remarks>
            We allow this to be set separately so that capabilities can
            be downgraded for testing.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.FloatColumnValue">
            <summary>
            A <see cref="T:System.Single"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.FloatColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.FloatColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.FloatColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection">
            <summary>
            A collection of GCHandles for pinned objects. The handles
            are freed when this object is disposed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection.handles">
            <summary>
            The handles of the objects being pinned.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection.count">
            <summary>
            Handle count.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection.Add(System.Object)">
            <summary>
            Add an object to the handle collection. This automatically
            pins the object.
            </summary>
            <param name="value">The object to pin.</param>
            <returns>
            The address of the pinned object. This is valid until the
            GCHandleCollection is disposed.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection.SetCapacity(System.Int32)">
            <summary>
            Set handle array capacity.
            </summary>
            <param name="capacity">Estimated handle count</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Implementation.IJetApi">
            <summary>
            This interface describes all the methods which have a P/Invoke implementation.
            Concrete instances of this interface provide methods that call ESENT.
            </summary>
            <summary>
            This interface describes all the Windows10 methods which have a
            P/Invoke implementation. Concrete instances of this interface provide
            methods that call ESENT.
            </summary>
            <summary>
            This interface describes all the Windows8 methods which have a
            P/Invoke implementation. Concrete instances of this interface provide
            methods that call ESENT.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.Capabilities">
            <summary>
            Gets a description of the capabilities of the current version of ESENT.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String)">
            <summary>
            Allocates a new instance of the database engine.
            </summary>
            <param name="instance">Returns the new instance.</param>
            <param name="name">The name of the instance. Names must be unique.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String,System.String,Microsoft.Isam.Esent.Interop.CreateInstanceGrbit)">
            <summary>
            Allocate a new instance of the database engine for use in a single
            process, with a display name specified.
            </summary>
            <param name="instance">Returns the newly create instance.</param>
            <param name="name">
            Specifies a unique string identifier for the instance to be created.
            This string must be unique within a given process hosting the
            database engine.
            </param>
            <param name="displayName">
            A display name for the instance to be created. This will be used
            in eventlog entries.
            </param>
            <param name="grbit">Creation options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)">
            <summary>
            Initialize the ESENT database engine.
            </summary>
            <param name="instance">
            The instance to initialize. If an instance hasn't been
            allocated then a new one is created and the engine
            will operate in single-instance mode.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetInit2(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,Microsoft.Isam.Esent.Interop.InitGrbit)">
            <summary>
            Initialize the ESENT database engine.
            </summary>
            <param name="instance">
            The instance to initialize. If an instance hasn't been
            allocated then a new one is created and the engine
            will operate in single-instance mode.
            </param>
            <param name="grbit">
            Initialization options.
            </param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetInit3(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,Microsoft.Isam.Esent.Interop.JET_RSTINFO,Microsoft.Isam.Esent.Interop.InitGrbit)">
            <summary>
            Initialize the ESENT database engine.
            </summary>
            <param name="instance">
            The instance to initialize. If an instance hasn't been
            allocated then a new one is created and the engine
            will operate in single-instance mode.
            </param>
            <param name="recoveryOptions">
            Additional recovery parameters for remapping databases during
            recovery, position where to stop recovery at, or recovery status.
            </param>
            <param name="grbit">
            Initialization options.
            </param>
            <returns>An error code or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetInstanceInfo(System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@)">
            <summary>
            Retrieves information about the instances that are running.
            </summary>
            <param name="numInstances">
            Returns the number of instances.
            </param>
            <param name="instances">
            Returns an array of instance info objects, one for each running
            instance.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetInstanceMiscInfo(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SIGNATURE@,Microsoft.Isam.Esent.Interop.Vista.JET_InstanceMiscInfo)">
            <summary>
            Retrieves information about an instance.
            </summary>
            <param name="instance">The instance to get information about.</param>
            <param name="signature">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetStopBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Prevents streaming backup-related activity from continuing on a
            specific running instance, thus ending the streaming backup in
            a predictable way.
            </summary>
            <param name="instance">The instance to use.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetStopServiceInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Prepares an instance for termination.
            </summary>
            <param name="instance">The (running) instance to use.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetStopServiceInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit)">
            <summary>
            Prepares an instance for termination. Can also be used to resume a previous quiescing.
            </summary>
            <param name="instance">The (running) instance to use.</param>
            <param name="grbit">The options to stop or resume the instance.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetTerm(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Terminate an instance that was created with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)"/> or
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String)"/>.
            </summary>
            <param name="instance">The instance to terminate.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetTerm2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.TermGrbit)">
            <summary>
            Terminate an instance that was created with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)"/> or
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String)"/>.
            </summary>
            <param name="instance">The instance to terminate.</param>
            <param name="grbit">Termination options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.IntPtr,System.String)">
            <summary>
            Sets database configuration options.
            </summary>
            <param name="instance">
            The instance to set the option on or <see cref="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Nil"/>
            to set the option on all instances.
            </param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to set.</param>
            <param name="paramValue">The value of the parameter to set, if the parameter is an integer type.</param>
            <param name="paramString">The value of the parameter to set, if the parameter is a string type.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.String)">
            <summary>
            Sets database configuration options. This overload is used when the
            parameter being set is of type JET_CALLBACK.
            </summary>
            <param name="instance">
            The instance to set the option on or <see cref="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Nil"/>
            to set the option on all instances.
            </param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to set.</param>
            <param name="paramValue">The value of the parameter to set.</param>
            <param name="paramString">The value of the string parameter to set.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.IntPtr@,System.String@,System.Int32)">
            <summary>
            Gets database configuration options.
            </summary>
            <param name="instance">The instance to retrieve the options from.</param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to get.</param>
            <param name="paramValue">Returns the value of the parameter, if the value is an integer.</param>
            <param name="paramString">Returns the value of the parameter, if the value is a string.</param>
            <param name="maxParam">The maximum size of the parameter string.</param>
            <remarks>
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_param.ErrorToString"/> passes in the error number in the paramValue, which is why it is
            a ref parameter and not an out parameter.
            </remarks>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetVersion(Microsoft.Isam.Esent.Interop.JET_SESID,System.UInt32@)">
            <summary>
            Retrieves the version of the database engine.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="version">Returns the version number of the database engine.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)">
            <summary>
            Creates and attaches a database file.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The path to the database file to create.</param>
            <param name="connect">The parameter is not used.</param>
            <param name="dbid">Returns the dbid of the new database.</param>
            <param name="grbit">Database creation options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)">
            <summary>
            Creates and attaches a database file with a maximum database size specified.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetAttachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The path to the database file to create.</param>
            <param name="maxPages">
            The maximum size, in database pages, of the database. Passing 0 means there is
            no enforced maximum.
            </param>
            <param name="dbid">Returns the dbid of the new database.</param>
            <param name="grbit">Database creation options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)">
            <summary>
            Attaches a database file for use with a database instance. In order to use the
            database, it will need to be subsequently opened with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The database to attach.</param>
            <param name="grbit">Attach options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetAttachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)">
            <summary>
            Attaches a database file for use with a database instance. In order to use the
            database, it will need to be subsequently opened with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The database to attach.</param>
            <param name="maxPages">
            The maximum size, in database pages, of the database. Passing 0 means there is
            no enforced maximum.
            </param>
            <param name="grbit">Attach options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)">
            <summary>
            Opens a database previously attached with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/>,
            for use with a database session. This function can be called multiple times
            for the same database.
            </summary>
            <param name="sesid">The session that is opening the database.</param>
            <param name="database">The database to open.</param>
            <param name="connect">Reserved for future use.</param>
            <param name="dbid">Returns the dbid of the attached database.</param>
            <param name="grbit">Open database options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCloseDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.CloseDatabaseGrbit)">
            <summary>
            Closes a database file that was previously opened with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/> or
            created with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to close.</param>
            <param name="grbit">Close options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDetachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String)">
            <summary>
            Releases a database file that was previously attached to a database session.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="database">The database to detach.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDetachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit)">
            <summary>
            Releases a database file that was previously attached to a database session.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="database">The database to detach.</param>
            <param name="grbit">Detach options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCompact(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS,System.Object,Microsoft.Isam.Esent.Interop.CompactGrbit)">
            <summary>
            Makes a copy of an existing database. The copy is compacted to a
            state optimal for usage. Data in the copied data will be packed
            according to the measures chosen for the indexes at index create.
            In this way, compacted data may be stored as densely as possible.
            Alternatively, compacted data may reserve space for subsequent
            record growth or index insertions.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="sourceDatabase">The source database that will be compacted.</param>
            <param name="destinationDatabase">The name to use for the compacted database.</param>
            <param name="statusCallback">
            A callback function that can be called periodically through the
            database compact operation to report progress.
            </param>
            <param name="ignored">
            This parameter is ignored and should be null.
            </param>
            <param name="grbit">Compact options.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGrowDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32,System.Int32@)">
            <summary>
            Extends the size of a database that is currently open.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to grow.</param>
            <param name="desiredPages">The desired size of the database, in pages.</param>
            <param name="actualPages">
            The size of the database, in pages, after the call.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetDatabaseSize(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,System.Int32@)">
            <summary>
            Extends the size of a database that is currently open.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The name of the database to grow.</param>
            <param name="desiredPages">The desired size of the database, in pages.</param>
            <param name="actualPages">
            The size of the database, in pages, after the call.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database identifier.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database identifier.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_DBINFOMISC@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database identifier.</param>
            <param name="dbinfomisc">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetDatabaseFileInfo(System.String,System.Int32@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="databaseName">The file name of the database.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetDatabaseFileInfo(System.String,System.Int64@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="databaseName">The file name of the database.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetDatabaseFileInfo(System.String,Microsoft.Isam.Esent.Interop.JET_DBINFOMISC@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="databaseName">The file name of the database.</param>
            <param name="dbinfomisc">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)">
            <summary>
            Performs a streaming backup of an instance, including all the attached
            databases, to a directory. With multiple backup methods supported by
            the engine, this is the simplest and most encapsulated function.
            </summary>
            <param name="instance">The instance to backup.</param>
            <param name="destination">
            The directory where the backup is to be stored. If the backup path is
            null to use the function will truncate the logs, if possible.
            </param>
            <param name="grbit">Backup options.</param>
            <param name="statusCallback">
            Optional status notification callback.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRestoreInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)">
            <summary>
            Restores and recovers a streaming backup of an instance including all
            the attached databases. It is designed to work with a backup created
            with the <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)"/> function. This is the
            simplest and most encapsulated restore function.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="source">
            Location of the backup. The backup should have been created with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)"/>.
            </param>
            <param name="destination">
            Name of the folder where the database files from the backup set will
            be copied and recovered. If this is set to null, the database files
            will be copied and recovered to their original location.
            </param>
            <param name="statusCallback">
            Optional status notification callback.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOSSnapshotPrepare(Microsoft.Isam.Esent.Interop.JET_OSSNAPID@,Microsoft.Isam.Esent.Interop.SnapshotPrepareGrbit)">
            <summary>
            Begins the preparations for a snapshot session. A snapshot session
            is a short time interval in which the engine does not issue any
            write IOs to disk, so that the engine can participate in a volume
            snapshot session (when driven by a snapshot writer).
            </summary>
            <param name="snapid">Returns the ID of the snapshot session.</param>
            <param name="grbit">Snapshot options.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOSSnapshotPrepareInstance(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Vista.SnapshotPrepareInstanceGrbit)">
            <summary>
            Selects a specific instance to be part of the snapshot session.
            </summary>
            <param name="snapshot">The snapshot identifier.</param>
            <param name="instance">The instance to add to the snapshot.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOSSnapshotFreeze(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@,Microsoft.Isam.Esent.Interop.SnapshotFreezeGrbit)">
            <summary>
            Starts a snapshot. While the snapshot is in progress, no
            write-to-disk activity by the engine can take place.
            </summary>
            <param name="snapshot">The snapshot session.</param>
            <param name="numInstances">
            Returns the number of instances that are part of the snapshot session.
            </param>
            <param name="instances">
            Returns information about the instances that are part of the snapshot session.
            </param>
            <param name="grbit">
            Snapshot freeze options.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOSSnapshotGetFreezeInfo(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@,Microsoft.Isam.Esent.Interop.Vista.SnapshotGetFreezeInfoGrbit)">
            <summary>
            Retrieves the list of instances and databases that are part of the
            snapshot session at any given moment.
            </summary>
            <param name="snapshot">The identifier of the snapshot session.</param>
            <param name="numInstances">Returns the number of instances.</param>
            <param name="instances">Returns information about the instances.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)">
            <summary>
            Notifies the engine that it can resume normal IO operations after a
            freeze period and a successful snapshot.
            </summary>
            <param name="snapid">The ID of the snapshot.</param>
            <param name="grbit">Thaw options.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOSSnapshotTruncateLog(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit)">
            <summary>
            Enables log truncation for all instances that are part of the snapshot session.
            </summary>
            <remarks>
            This function should be called only if the snapshot was created with the
            <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ContinueAfterThaw"/> option. Otherwise, the snapshot
            session ends after the call to <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)"/>.
            </remarks>
            <param name="snapshot">The snapshot identifier.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOSSnapshotTruncateLogInstance(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit)">
            <summary>
            Truncates the log for a specified instance during a snapshot session.
            </summary>
            <remarks>
            This function should be called only if the snapshot was created with the
            <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ContinueAfterThaw"/> option. Otherwise, the snapshot
            session ends after the call to <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)"/>.
            </remarks>
            <param name="snapshot">The snapshot identifier.</param>
            <param name="instance">The instance to truncat the log for.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOSSnapshotEnd(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Vista.SnapshotEndGrbit)">
            <summary>
            Notifies the engine that the snapshot session finished.
            </summary>
            <param name="snapid">The identifier of the snapshot session.</param>
            <param name="grbit">Snapshot end options.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOSSnapshotAbort(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Server2003.SnapshotAbortGrbit)">
            <summary>
            Notifies the engine that it can resume normal IO operations after a
            freeze period ended with a failed snapshot.
            </summary>
            <param name="snapid">Identifier of the snapshot session.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)">
            <summary>
            Initiates an external backup while the engine and database are online and active.
            </summary>
            <param name="instance">The instance prepare for backup.</param>
            <param name="grbit">Backup options.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCloseFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE)">
            <summary>
            Closes a file that was opened with JetOpenFileInstance after the
            data from that file has been extracted using JetReadFileInstance.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="handle">The handle to close.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetEndExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Ends an external backup session. This API is the last API in a series
            of APIs that must be called to execute a successful online
            (non-VSS based) backup.
            </summary>
            <param name="instance">The instance to end the backup for.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetEndExternalBackupInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.EndExternalBackupGrbit)">
            <summary>
            Ends an external backup session. This API is the last API in a series
            of APIs that must be called to execute a successful online
            (non-VSS based) backup.
            </summary>
            <param name="instance">The instance to end the backup for.</param>
            <param name="grbit">Options that specify how the backup ended.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetAttachInfoInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String@,System.Int32,System.Int32@)">
            <summary>
            Used during a backup initiated by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>
            to query an instance for the names of database files that should become part of
            the backup file set. Only databases that are currently attached to the instance
            using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/> will be considered. These files may
            subsequently be opened using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)"/> and read
            using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetReadFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <remarks>
            It is important to note that this API does not return an error or warning if
            the output buffer is too small to accept the full list of files that should be
            part of the backup file set.
            </remarks>
            <param name="instance">The instance to get the information for.</param>
            <param name="files">
            Returns a list of null terminated strings describing the set of database files
            that should be a part of the backup file set. The list of strings returned in
            this buffer is in the same format as a multi-string used by the registry. Each
            null-terminated string is returned in sequence followed by a final null terminator.
            </param>
            <param name="maxChars">
            Maximum number of characters to retrieve.
            </param>
            <param name="actualChars">
            Actual size of the file list. If this is greater than maxChars
            then the list has been truncated.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetLogInfoInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String@,System.Int32,System.Int32@)">
            <summary>
            Used during a backup initiated by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>
            to query an instance for the names of database patch files and logfiles that
            should become part of the backup file set. These files may subsequently be
            opened using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)"/> and read using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetReadFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <remarks>
            It is important to note that this API does not return an error or warning if
            the output buffer is too small to accept the full list of files that should be
            part of the backup file set.
            </remarks>
            <param name="instance">The instance to get the information for.</param>
            <param name="files">
            Returns a list of null terminated strings describing the set of database patch files
            and log files that should be a part of the backup file set. The list of strings returned in
            this buffer is in the same format as a multi-string used by the registry. Each
            null-terminated string is returned in sequence followed by a final null terminator.
            </param>
            <param name="maxChars">
            Maximum number of characters to retrieve.
            </param>
            <param name="actualChars">
            Actual size of the file list. If this is greater than maxChars
            then the list has been truncated.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTruncateLogInfoInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String@,System.Int32,System.Int32@)">
            <summary>
            Used during a backup initiated by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>
            to query an instance for the names of the transaction log files that can be safely
            deleted after the backup has successfully completed.
            </summary>
            <remarks>
            It is important to note that this API does not return an error or warning if
            the output buffer is too small to accept the full list of files that should be
            part of the backup file set.
            </remarks>
            <param name="instance">The instance to get the information for.</param>
            <param name="files">
            Returns a list of null terminated strings describing the set of database log files
            that can be safely deleted after the backup completes. The list of strings returned in
            this buffer is in the same format as a multi-string used by the registry. Each
            null-terminated string is returned in sequence followed by a final null terminator.
            </param>
            <param name="maxChars">
            Maximum number of characters to retrieve.
            </param>
            <param name="actualChars">
            Actual size of the file list. If this is greater than maxChars
            then the list has been truncated.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)">
            <summary>
            Opens an attached database, database patch file, or transaction log
            file of an active instance for the purpose of performing a streaming
            fuzzy backup. The data from these files can subsequently be read
            through the returned handle using JetReadFileInstance. The returned
            handle must be closed using JetCloseFileInstance. An external backup
            of the instance must have been previously initiated using
            JetBeginExternalBackupInstance.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="file">The file to open.</param>
            <param name="handle">Returns a handle to the file.</param>
            <param name="fileSizeLow">Returns the least significant 32 bits of the file size.</param>
            <param name="fileSizeHigh">Returns the most significant 32 bits of the file size.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetReadFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves the contents of a file opened with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)"/>.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="file">The file to read from.</param>
            <param name="buffer">The buffer to read into.</param>
            <param name="bufferSize">The size of the buffer.</param>
            <param name="bytesRead">Returns the amount of data read into the buffer.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetTruncateLogInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Used during a backup initiated by JetBeginExternalBackup to delete
            any transaction log files that will no longer be needed once the
            current backup completes successfully.
            </summary>
            <param name="instance">The instance to truncate.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetBeginSession(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID@,System.String,System.String)">
            <summary>
            Initialize a new ESENT session.
            </summary>
            <param name="instance">The initialized instance to create the session in.</param>
            <param name="sesid">Returns the created session.</param>
            <param name="username">The parameter is not used.</param>
            <param name="password">The parameter is not used.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetSessionContext(Microsoft.Isam.Esent.Interop.JET_SESID,System.IntPtr)">
            <summary>
            Associates a session with the current thread using the given context
            handle. This association overrides the default engine requirement
            that a transaction for a given session must occur entirely on the
            same thread.
            </summary>
            <param name="sesid">The session to set the context on.</param>
            <param name="context">The context to set.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetResetSessionContext(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Disassociates a session from the current thread. This should be
            used in conjunction with JetSetSessionContext.
            </summary>
            <param name="sesid">The session to use.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetEndSession(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.EndSessionGrbit)">
            <summary>
            Ends a session.
            </summary>
            <param name="sesid">The session to end.</param>
            <param name="grbit">This parameter is not used.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDupSession(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_SESID@)">
            <summary>
            Initialize a new ESE session in the same instance as the given sesid.
            </summary>
            <param name="sesid">The session to duplicate.</param>
            <param name="newSesid">Returns the new session.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetThreadStats(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS@)">
            <summary>
            Retrieves performance information from the database engine for the
            current thread. Multiple calls can be used to collect statistics
            that reflect the activity of the database engine on this thread
            between those calls.
            </summary>
            <param name="threadstats">
            Returns the thread statistics.
            </param>
            <returns>An error code if the operation fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.OpenTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@)">
            <summary>
            Opens a cursor on a previously created table.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="dbid">The database to open the table in.</param>
            <param name="tablename">The name of the table to open.</param>
            <param name="parameters">The parameter is not used.</param>
            <param name="parametersLength">The parameter is not used.</param>
            <param name="grbit">Table open options.</param>
            <param name="tableid">Returns the opened table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCloseTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Close an open table.
            </summary>
            <param name="sesid">The session which opened the table.</param>
            <param name="tableid">The table to close.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDupCursor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.DupCursorGrbit)">
            <summary>
            Duplicates an open cursor and returns a handle to the duplicated cursor.
            If the cursor that was duplicated was a read-only cursor then the
            duplicated cursor is also a read-only cursor.
            Any state related to constructing a search key or updating a record is
            not copied into the duplicated cursor. In addition, the location of the
            original cursor is not duplicated into the duplicated cursor. The
            duplicated cursor is always opened on the clustered index and its
            location is always on the first row of the table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to duplicate.</param>
            <param name="newTableid">The duplicated cursor.</param>
            <param name="grbit">Reserved for future use.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetComputeStats(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Walks each index of a table to exactly compute the number of entries
            in an index, and the number of distinct keys in an index. This
            information, together with the number of database pages allocated
            for an index and the current time of the computation is stored in
            index metadata in the database. This data can be subsequently retrieved
            with information operations.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table that the statistics will be computed on.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.LsGrbit)">
            <summary>
            Enables the application to associate a context handle known as
            Local Storage with a cursor or the table associated with that
            cursor. This context handle can be used by the application to
            store auxiliary data that is associated with a cursor or table.
            The application is later notified using a runtime callback when
            the context handle must be released. This makes it possible to
            associate dynamically allocated state with a cursor or table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use.</param>
            <param name="ls">The context handle to be associated with the session or cursor.</param>
            <param name="grbit">Set options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS@,Microsoft.Isam.Esent.Interop.LsGrbit)">
            <summary>
            Enables the application to retrieve the context handle known
            as Local Storage that is associated with a cursor or the table
            associated with that cursor. This context handle must have been
            previously set using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.LsGrbit)"/>. JetGetLS can also
            be used to simultaneously fetch the current context handle for
            a cursor or table and reset that context handle.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use.</param>
            <param name="ls">Returns the retrieved context handle.</param>
            <param name="grbit">Retrieve options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetCursorInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Determine whether an update of the current record of a cursor
            will result in a write conflict, based on the current update
            status of the record. It is possible that a write conflict will
            ultimately be returned even if JetGetCursorInfo returns successfully.
            because another session may update the record before the current
            session is able to update the same record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to check.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetBeginTransaction(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Causes a session to enter a transaction or create a new save point in an existing
            transaction.
            </summary>
            <param name="sesid">The session to begin the transaction for.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetBeginTransaction2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.BeginTransactionGrbit)">
            <summary>
            Causes a session to enter a transaction or create a new save point in an existing
            transaction.
            </summary>
            <param name="sesid">The session to begin the transaction for.</param>
            <param name="grbit">Transaction options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCommitTransaction(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.CommitTransactionGrbit)">
            <summary>
            Commits the changes made to the state of the database during the current save point
            and migrates them to the previous save point. If the outermost save point is committed
            then the changes made during that save point will be committed to the state of the
            database and the session will exit the transaction.
            </summary>
            <param name="sesid">The session to commit the transaction for.</param>
            <param name="grbit">Commit options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRollback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.RollbackTransactionGrbit)">
            <summary>
            Undoes the changes made to the state of the database
            and returns to the last save point. JetRollback will also close any cursors
            opened during the save point. If the outermost save point is undone, the
            session will exit the transaction.
            </summary>
            <param name="sesid">The session to rollback the transaction for.</param>
            <param name="grbit">Rollback options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32,System.Int32,Microsoft.Isam.Esent.Interop.JET_TABLEID@)">
            <summary>
            Create an empty table. The newly created table is opened exclusively.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to create the table in.</param>
            <param name="table">The name of the table to create.</param>
            <param name="pages">Initial number of pages in the table.</param>
            <param name="density">
            The default density of the table. This is used when doing sequential inserts.
            </param>
            <param name="tableid">Returns the tableid of the new table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetAddColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.JET_COLUMNID@)">
            <summary>
            Add a new column to an existing table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to add the column to.</param>
            <param name="column">The name of the column.</param>
            <param name="columndef">The definition of the column.</param>
            <param name="defaultValue">The default value of the column.</param>
            <param name="defaultValueSize">The size of the default value.</param>
            <param name="columnid">Returns the columnid of the new column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDeleteColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Deletes a column from a database table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">A cursor on the table to delete the column from.</param>
            <param name="column">The name of the column to be deleted.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDeleteColumn2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.DeleteColumnGrbit)">
            <summary>
            Deletes a column from a database table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">A cursor on the table to delete the column from.</param>
            <param name="column">The name of the column to be deleted.</param>
            <param name="grbit">Column deletion options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDeleteIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Deletes an index from a database table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">A cursor on the table to delete the index from.</param>
            <param name="index">The name of the index to be deleted.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDeleteTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String)">
            <summary>
            Deletes a table from a database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to delete the table from.</param>
            <param name="table">The name of the table to delete.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.CreateIndexGrbit,System.String,System.Int32,System.Int32)">
            <summary>
            Creates an index over data in an ESE database. An index can be used to locate
            specific data quickly.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexName">
            Pointer to a null-terminated string that specifies the name of the index to create.
            </param>
            <param name="grbit">Index creation options.</param>
            <param name="keyDescription">
            Pointer to a double null-terminated string of null-delimited tokens.
            </param>
            <param name="keyDescriptionLength">
            The length, in characters, of szKey including the two terminating nulls.
            </param>
            <param name="density">Initial B+ tree density.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenTempTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columns">
            Column definitions for the columns created in the temporary table.
            </param>
            <param name="numColumns">Number of column definitions.</param>
            <param name="grbit">Table creation options.</param>
            <param name="tableid">
            Returns the tableid of the temporary table. Closing this tableid
            frees the resources associated with the temporary table.
            </param>
            <param name="columnids">
            The output buffer that receives the array of column IDs generated
            during the creation of the temporary table. The column IDs in this
            array will exactly correspond to the input array of column definitions.
            As a result, the size of this buffer must correspond to the size of the input array.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenTempTable2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columns">
            Column definitions for the columns created in the temporary table.
            </param>
            <param name="numColumns">Number of column definitions.</param>
            <param name="lcid">
            The locale ID to use to compare any Unicode key column data in the temporary table.
            Any locale may be used as long as the appropriate language pack has been installed
            on the machine.
            </param>
            <param name="grbit">Table creation options.</param>
            <param name="tableid">
            Returns the tableid of the temporary table. Closing this tableid
            frees the resources associated with the temporary table.
            </param>
            <param name="columnids">
            The output buffer that receives the array of column IDs generated
            during the creation of the temporary table. The column IDs in this
            array will exactly correspond to the input array of column definitions.
            As a result, the size of this buffer must correspond to the size of the input array.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenTempTable3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columns">
            Column definitions for the columns created in the temporary table.
            </param>
            <param name="numColumns">Number of column definitions.</param>
            <param name="unicodeindex">
            The Locale ID and normalization flags that will be used to compare
            any Unicode key column data in the temporary table. When this
            is not present then the default options are used.
            </param>
            <param name="grbit">Table creation options.</param>
            <param name="tableid">
            Returns the tableid of the temporary table. Closing this tableid
            frees the resources associated with the temporary table.
            </param>
            <param name="columnids">
            The output buffer that receives the array of column IDs generated
            during the creation of the temporary table. The column IDs in this
            array will exactly correspond to the input array of column definitions.
            As a result, the size of this buffer must correspond to the size of the input array.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenTemporaryTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <remarks>
            Introduced in Windows Vista.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="temporarytable">
            Description of the temporary table to create on input. After a
            successful call, the structure contains the handle to the temporary
            table and column identifications.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateTableColumnIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Creates a table, adds columns, and indices on that table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to which to add the new table.</param>
            <param name="tablecreate">Object describing the table to create.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columndef">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnid">The columnid of the column.</param>
            <param name="columndef">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columnbase">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnid">The columnid of the column.</param>
            <param name="columnbase">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.ColInfoGrbit,Microsoft.Isam.Esent.Interop.JET_COLUMNLIST@)">
            <summary>
            Retrieves information about all columns in the table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="ignored">The parameter is ignored.</param>
            <param name="grbit">Additional options for JetGetTableColumnInfo.</param>
            <param name="columnlist">Filled in with information about the columns in the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columndef">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNLIST@)">
            <summary>
            Retrieves information about all columns in a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="ignored">This parameter is ignored.</param>
            <param name="columnlist">Filled in with information about the columns in the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a column in a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columnbase">Filled in with information about the columns in the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a column in a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columnid">The ID of the column.</param>
            <param name="columnbase">Filled in with information about the columns in the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetObjectInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_OBJECTLIST@)">
            <summary>
            Retrieves information about database objects.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="objectlist">Filled in with information about the objects in the database.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetObjectInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_objtyp,System.String,Microsoft.Isam.Esent.Interop.JET_OBJECTINFO@)">
            <summary>
            Retrieves information about database objects.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="objtyp">The type of the object.</param>
            <param name="objectName">The object name about which to retrieve information.</param>
            <param name="objectinfo">Filled in with information about the objects in the database.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String@,System.Int32)">
            <summary>
            JetGetCurrentIndex function determines the name of the current
            index of a given cursor. This name is also used to later re-select
            that index as the current index using JetSetCurrentIndex. It can
            also be used to discover the properties of that index using
            JetGetTableIndexInfo.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to get the index name for.</param>
            <param name="indexName">Returns the name of the index.</param>
            <param name="maxNameLength">
            The maximum length of the index name. Index names are no more than
            Api.MaxNameLength characters.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_OBJECTINFO@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Default"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Name"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.TemplateTableName"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Dbid"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32[],Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceUsage"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceAlloc"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceOwned"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceAvailable"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.UInt16@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.Int32@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXLIST@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.String@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.UInt16@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.Int32@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXLIST@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.String@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRenameTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String)">
            <summary>
            Changes the name of an existing table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database containing the table.</param>
            <param name="tableName">The name of the table.</param>
            <param name="newTableName">The new name of the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRenameColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.String,Microsoft.Isam.Esent.Interop.RenameColumnGrbit)">
            <summary>
            Changes the name of an existing column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="name">The name of the column.</param>
            <param name="newName">The new name of the column.</param>
            <param name="grbit">Column rename options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetColumnDefaultValue(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.SetColumnDefaultValueGrbit)">
            <summary>
            Changes the default value of an existing column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database containing the column.</param>
            <param name="tableName">The name of the table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="data">The new default value.</param>
            <param name="dataSize">Size of the new default value.</param>
            <param name="grbit">Column default value options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGotoBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32)">
            <summary>
            Positions a cursor to an index entry for the record that is associated with
            the specified bookmark. The bookmark can be used with any index defined over
            a table. The bookmark for a record can be retrieved using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="bookmark">The bookmark used to position the cursor.</param>
            <param name="bookmarkSize">The size of the bookmark.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGotoSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit)">
            <summary>
            Positions a cursor to an index entry that is associated with the
            specified secondary index bookmark. The secondary index bookmark
            must be used with the same index over the same table from which it
            was originally retrieved. The secondary index bookmark for an index
            entry can be retrieved using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGotoSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table cursor to position.</param>
            <param name="secondaryKey">The buffer that contains the secondary key.</param>
            <param name="secondaryKeySize">The size of the secondary key.</param>
            <param name="primaryKey">The buffer that contains the primary key.</param>
            <param name="primaryKeySize">The size of the primary key.</param>
            <param name="grbit">Options for positioning the bookmark.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)">
            <summary>
            Navigate through an index. The cursor can be positioned at the start or
            end of the index and moved backwards and forwards by a specified number
            of index entries.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="numRows">An offset which indicates how far to move the cursor.</param>
            <param name="grbit">Move options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetMakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs search keys that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/> and <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <remarks>
            The MakeKey functions provide datatype-specific make key functionality.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="dataSize">Size of the data.</param>
            <param name="grbit">Key options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)">
            <summary>
            Efficiently positions a cursor to an index entry that matches the search
            criteria specified by the search key in that cursor and the specified
            inequality. A search key must have been previously constructed using
            JetMakeKey.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="grbit">Seek options.</param>
            <returns>An error or warning..</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)">
            <summary>
            Temporarily limits the set of index entries that the cursor can walk using
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)"/> to those starting
            from the current index entry and ending at the index entry that matches the
            search criteria specified by the search key in that cursor and the specified
            bound criteria. A search key must have been previously constructed using
            JetMakeKey.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index range on.</param>
            <param name="grbit">Index range options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetIntersectIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_INDEXRANGE[],System.Int32,Microsoft.Isam.Esent.Interop.JET_RECORDLIST@,Microsoft.Isam.Esent.Interop.IntersectIndexesGrbit)">
            <summary>
            Computes the intersection between multiple sets of index entries from different secondary
            indices over the same table. This operation is useful for finding the set of records in a
            table that match two or more criteria that can be expressed using index ranges.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="ranges">
            An the index ranges to intersect. The tableids in the ranges
             must have index ranges set on them.
            </param>
            <param name="numRanges">
            The number of index ranges.
            </param>
            <param name="recordlist">
            Returns information about the temporary table containing the intersection results.
            </param>
            <param name="grbit">Intersection options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetCurrentIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <param name="grbit">
            Set index options.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetCurrentIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit,System.Int32)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <param name="grbit">
            Set index options.
            </param>
            <param name="itagSequence">
            Sequence number of the multi-valued column value which will be used
            to position the cursor on the new index. This parameter is only used
            in conjunction with <see cref="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.NoMove"/>. When
            this parameter is not present or is set to zero, its value is presumed
            to be 1.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetCurrentIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit,System.Int32)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <param name="indexid">
            The id of the index to select. This id can be obtained using JetGetIndexInfo
            or JetGetTableIndexInfo with the <see cref="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.IndexId"/> option.
            </param>
            <param name="grbit">
            Set index options.
            </param>
            <param name="itagSequence">
            Sequence number of the multi-valued column value which will be used
            to position the cursor on the new index. This parameter is only used
            in conjunction with <see cref="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.NoMove"/>. When
            this parameter is not present or is set to zero, its value is presumed
            to be 1.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetIndexRecordCount(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32@,System.Int32)">
            <summary>
            Counts the number of entries in the current index from the current position forward.
            The current position is included in the count. The count can be greater than the
            total number of records in the table if the current index is over a multi-valued
            column and instances of the column have multiple-values. If the table is empty,
            then 0 will be returned for the count.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to count the records in.</param>
            <param name="numRecords">Returns the number of records.</param>
            <param name="maxRecordsToCount">
            The maximum number of records to count.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetIndexRecordCount2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int64@,System.Int64)">
            <summary>
            Counts the number of entries in the current index from the current position forward.
            The current position is included in the count. The count can be greater than the
            total number of records in the table if the current index is over a multi-valued
            column and instances of the column have multiple-values. If the table is empty,
            then 0 will be returned for the count. 
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to count the records in.</param>
            <param name="numRecords">Returns the number of records.</param>
            <param name="maxRecordsToCount">
            The maximum number of records to count.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetTableSequentialGrbit)">
            <summary>
            Notifies the database engine that the application is scanning the entire
            index that the cursor is positioned on. Consequently, the methods that
            are used to access the index data will be tuned to make this scenario as
            fast as possible.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor that will be accessing the data.</param>
            <param name="grbit">Reserved for future use.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetResetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ResetTableSequentialGrbit)">
            <summary>
            Notifies the database engine that the application is no longer scanning the
            entire index the cursor is positioned on. This call reverses a notification
            sent by JetSetTableSequential.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor that was accessing the data.</param>
            <param name="grbit">Reserved for future use.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetRecordPosition(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RECPOS@)">
            <summary>
            Returns the fractional position of the current record in the current index
            in the form of a JET_RECPOS structure.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor positioned on the record.</param>
            <param name="recpos">Returns the approximate fractional position of the record.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGotoPosition(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RECPOS)">
            <summary>
            Moves a cursor to a new location that is a fraction of the way through
            the current index.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="recpos">The approximate position to move to.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetPrereadKeys(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[][],System.Int32[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows7.PrereadKeysGrbit)">
            <summary>
            If the records with the specified keys are not in the buffer cache
            then start asynchronous reads to bring the records into the database
            buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="keys">
            The keys to preread. The keys must be sorted.
            </param>
            <param name="keyLengths">The lengths of the keys to preread.</param>
            <param name="keyIndex">
            The index of the first key in the keys array to read.
            </param>
            <param name="keyCount">
            The maximum number of keys to preread.
            </param>
            <param name="keysPreread">
            Returns the number of keys to actually preread.
            </param>
            <param name="grbit">
            Preread options. Used to specify the direction of the preread.
            </param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves the bookmark for the record that is associated with the index entry
            at the current position of a cursor. This bookmark can then be used to
            reposition that cursor back to the same record using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGotoBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32)"/>.
            The bookmark will be no longer than <see cref="P:Microsoft.Isam.Esent.Interop.SystemParameters.BookmarkMost"/>
            bytes.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the bookmark from.</param>
            <param name="bookmark">Buffer to contain the bookmark.</param>
            <param name="bookmarkSize">Size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.GetSecondaryIndexBookmarkGrbit)">
            <summary>
            Retrieves a special bookmark for the secondary index entry at the
            current position of a cursor. This bookmark can then be used to
            efficiently reposition that cursor back to the same index entry
            using JetGotoSecondaryIndexBookmark. This is most useful when
            repositioning on a secondary index that contains duplicate keys or
            that contains multiple index entries for the same record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the bookmark from.</param>
            <param name="secondaryKey">Output buffer for the secondary key.</param>
            <param name="secondaryKeySize">Size of the secondary key buffer.</param>
            <param name="actualSecondaryKeySize">Returns the size of the secondary key.</param>
            <param name="primaryKey">Output buffer for the primary key.</param>
            <param name="primaryKeySize">Size of the primary key buffer.</param>
            <param name="actualPrimaryKeySize">Returns the size of the primary key.</param>
            <param name="grbit">Options for the call.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRetrieveKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.RetrieveKeyGrbit)">
            <summary>
            Retrieves the key for the index entry at the current position of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the key from.</param>
            <param name="data">The buffer to retrieve the key into.</param>
            <param name="dataSize">The size of the buffer.</param>
            <param name="actualDataSize">Returns the actual size of the data.</param>
            <param name="grbit">Retrieve key options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRetrieveColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.IntPtr,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit,Microsoft.Isam.Esent.Interop.JET_RETINFO)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            Alternatively, this function can retrieve a column from a record being created
            in the cursor copy buffer. This function can also retrieve column data from an
            index entry that references the current record. In addition to retrieving the
            actual column value, JetRetrieveColumn can also be used to retrieve the size
            of a column, before retrieving the column data itself so that application
            buffers can be sized appropriately.
            </summary>
            <remarks>
            The RetrieveColumnAs functions provide datatype-specific retrieval functions.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="data">The data buffer to be retrieved into.</param>
            <param name="dataSize">The size of the data buffer.</param>
            <param name="actualDataSize">Returns the actual size of the data buffer.</param>
            <param name="grbit">Retrieve column options.</param>
            <param name="retinfo">
            If pretinfo is give as NULL then the function behaves as though an itagSequence
            of 1 and an ibLongValue of 0 (zero) were given. This causes column retrieval to
            retrieve the first value of a multi-valued column, and to retrieve long data at
            offset 0 (zero).
            </param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRetrieveColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN*,System.Int32)">
            <summary>
            The JetRetrieveColumns function retrieves multiple column values
            from the current record in a single operation. An array of
            <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN"/> structures is used to
            describe the set of column values to be retrieved, and to describe
            output buffers for each column value to be retrieved.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve columns from.</param>
            <param name="retrievecolumns">
            An array of one or more JET_RETRIEVECOLUMN structures. Each
            structure includes descriptions of which column value to retrieve
            and where to store returned data.
            </param>
            <param name="numColumns">
            Number of structures in the array given by retrievecolumns.
            </param>
            <returns>
            An error or warning.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID[],System.Int32@,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN[]@,Microsoft.Isam.Esent.Interop.JET_PFNREALLOC,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit)">
            <summary>
            Efficiently retrieves a set of columns and their values from the
            current record of a cursor or the copy buffer of that cursor. The
            columns and values retrieved can be restricted by a list of
            column IDs, itagSequence numbers, and other characteristics. This
            column retrieval API is unique in that it returns information in
            dynamically allocated memory that is obtained using a
            user-provided realloc compatible callback. This new flexibility
            permits the efficient retrieval of column data with specific
            characteristics (such as size and multiplicity) that are unknown
            to the caller. This eliminates the need for the use of the discovery
            modes of JetRetrieveColumn to determine those
            characteristics in order to setup a final call to
            JetRetrieveColumn that will successfully retrieve
            the desired data.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve data from.</param>
            <param name="numColumnids">The numbers of JET_ENUMCOLUMNIDS.</param>
            <param name="columnids">
            An optional array of column IDs, each with an optional array of itagSequence
            numbers to enumerate.
            </param>
            <param name="numColumnValues">
            Returns the number of column values retrieved.
            </param>
            <param name="columnValues">
            Returns the enumerated column values.
            </param>
            <param name="allocator">
            Callback used to allocate memory.
            </param>
            <param name="allocatorContext">
            Context for the allocation callback.
            </param>
            <param name="maxDataSize">
            Sets a cap on the amount of data to return from a long text or long
            binary column. This parameter can be used to prevent the enumeration
            of an extremely large column value.
            </param>
            <param name="grbit">Retrieve options.</param>
            <returns>A warning, error or success.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit,System.Collections.Generic.IEnumerable{Microsoft.Isam.Esent.Interop.EnumeratedColumn}@)">
            <summary>
            Efficiently retrieves a set of columns and their values from the
            current record of a cursor or the copy buffer of that cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve data from.</param>
            <param name="grbit">Enumerate options.</param>
            <param name="enumeratedColumns">The discovered columns and their values.</param>
            <returns>A warning or success.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetRecordSize(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE@,Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit)">
            <summary>
            Retrieves record size information from the desired location.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The cursor that will be used for the API call. The cursor must be
            positioned on a record, or have an update prepared.
            </param>
            <param name="recsize">Returns the size of the record.</param>
            <param name="grbit">Call options.</param>
            <returns>A warning, error or success.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Deletes the current record in a database table.
            </summary>
            <param name="sesid">The session that opened the cursor.</param>
            <param name="tableid">The cursor on a database table. The current row will be deleted.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)">
            <summary>
            Prepare a cursor for update.
            </summary>
            <param name="sesid">The session which is starting the update.</param>
            <param name="tableid">The cursor to start the update for.</param>
            <param name="prep">The type of update to prepare.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            The JetUpdate function performs an update operation including inserting a new row into
            a table or updating an existing row. Deleting a table row is performed by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session which started the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="bookmark">Returns the bookmark of the updated record. This can be null.</param>
            <param name="bookmarkSize">The size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
            <remarks>
            JetUpdate is the final step in performing an insert or an update. The update is begun by
            calling <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)"/> and then by calling
            JetSetColumn one or more times to set the record state. Finally, JetUpdate
            is called to complete the update operation. Indexes are updated only by JetUpdate or and not during JetSetColumn.
            </remarks>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetUpdate2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Server2003.UpdateGrbit)">
            <summary>
            The JetUpdate2 function performs an update operation including inserting a new row into
            a table or updating an existing row. Deleting a table row is performed by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session which started the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="bookmark">Returns the bookmark of the updated record. This can be null.</param>
            <param name="bookmarkSize">The size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
            <param name="grbit">Update options.</param>
            <remarks>
            JetUpdate is the final step in performing an insert or an update. The update is begun by
            calling <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)"/> and then by calling
            JetSetColumn one or more times to set the record state. Finally, JetUpdate
            is called to complete the update operation. Indexes are updated only by JetUpdate or and not during JetSetColumn.
            </remarks>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.SetColumnGrbit,Microsoft.Isam.Esent.Interop.JET_SETINFO)">
            <summary>
            The JetSetColumn function modifies a single column value in a modified record to be inserted or to
            update the current record. It can overwrite an existing value, add a new value to a sequence of
            values in a multi-valued column, remove a value from a sequence of values in a multi-valued column,
            or update all or part of a long value (a column of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>
            or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>).
            </summary>
            <remarks>
            The SetColumn methods provide datatype-specific overrides which may be more efficient.
            </remarks>
            <param name="sesid">The session which is performing the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
            <param name="dataSize">The size of data to set.</param>
            <param name="grbit">SetColumn options.</param>
            <param name="setinfo">Used to specify itag or long-value offset.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Allows an application to set multiple column values in a single
            operation. An array of <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN"/> structures is
            used to describe the set of column values to be set, and to describe
            input buffers for each column value to be set.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the columns on.</param>
            <param name="setcolumns">
            An array of <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN"/> structures describing the
            data to set.
            </param>
            <param name="numColumns">
            Number of entries in the setcolumns parameter.
            </param>
            <returns>An error code or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetLock(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.GetLockGrbit)">
            <summary>
            Explicitly reserve the ability to update a row, write lock, or to explicitly prevent a row from
            being updated by any other session, read lock. Normally, row write locks are acquired implicitly as a
            result of updating rows. Read locks are usually not required because of record versioning. However,
            in some cases a transaction may desire to explicitly lock a row to enforce serialization, or to ensure
            that a subsequent operation will succeed.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use. A lock will be acquired on the current record.</param>
            <param name="grbit">Lock options, use this to specify which type of lock to obtain.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetEscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.EscrowUpdateGrbit)">
            <summary>
            Performs an atomic addition operation on one column. This function allows
            multiple sessions to update the same record concurrently without conflicts.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update.</param>
            <param name="columnid">
            The column to update. This must be an escrow updatable column.
            </param>
            <param name="delta">The buffer containing the addend.</param>
            <param name="deltaSize">The size of the addend.</param>
            <param name="previousValue">
            An output buffer that will recieve the current value of the column. This buffer
            can be null.
            </param>
            <param name="previousValueLength">The size of the previousValue buffer.</param>
            <param name="actualPreviousValueLength">Returns the actual size of the previousValue.</param>
            <param name="grbit">Escrow update options.</param>
            <returns>An error code if the operation fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)">
            <summary>
            Allows the application to configure the database engine to issue
            notifications to the application for specific events. These
            notifications are associated with a specific table and remain in
            effect only until the instance containing the table is shut down
            using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetTerm(Microsoft.Isam.Esent.Interop.JET_INSTANCE)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            A cursor opened on the table that the callback should be
            registered on.
            </param>
            <param name="cbtyp">
            The callback reasons for which the application wishes to receive notifications.
            </param>
            <param name="callback">The callback function.</param>
            <param name="context">A context that will be given to the callback.</param>
            <param name="callbackId">
            A handle that can later be used to cancel the registration of the given
            callback function using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetUnregisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_HANDLE)"/>.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetUnregisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_HANDLE)">
            <summary>
            Configures the database engine to stop issuing notifications to the
            application as previously requested through
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            A cursor opened on the table that the callback should be
            registered on.
            </param>
            <param name="cbtyp">
            The callback reasons for which the application no longer wishes to receive notifications.
            </param>
            <param name="callbackId">
            The handle of the registered callback that was returned by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)"/>.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDefragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.DefragGrbit)">
            <summary>
            Starts and stops database defragmentation tasks that improves data
            organization within a database.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="dbid">The database to be defragmented.</param>
            <param name="tableName">
            Under some options defragmentation is performed for the entire database described by the given
            database ID, and other options (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>) require
            the name of the table to defragment.
            </param>
            <param name="passes">
            When starting an online defragmentation task, this parameter sets the maximum number of defragmentation
            passes. When stopping an online defragmentation task, this parameter is set to the number of passes
            performed. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="seconds">
            When starting an online defragmentation task, this parameter sets
            the maximum time for defragmentation. When stopping an online
            defragmentation task, this output buffer is set to the length of
            time used for defragmentation. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="grbit">Defragmentation options.</param>
            <returns>An error code or warning.</returns>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.Defragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>.
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.Defragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.DefragGrbit)">
            <summary>
            Starts and stops database defragmentation tasks that improves data
            organization within a database.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="dbid">The database to be defragmented.</param>
            <param name="tableName">
            Under some options defragmentation is performed for the entire database described by the given
            database ID, and other options (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>) require
            the name of the table to defragment.
            </param>
            <param name="grbit">Defragmentation options.</param>
            <returns>An error code or warning.</returns>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDefragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>.
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDefragment2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.JET_CALLBACK,Microsoft.Isam.Esent.Interop.DefragGrbit)">
            <summary>
            Starts and stops database defragmentation tasks that improves data
            organization within a database.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="dbid">The database to be defragmented.</param>
            <param name="tableName">
            Unused parameter. Defragmentation is performed for the entire database described by the given database ID.
            </param>
            <param name="passes">
            When starting an online defragmentation task, this parameter sets the maximum number of defragmentation
            passes. When stopping an online defragmentation task, this parameter is set to the number of passes
            performed.
            </param>
            <param name="seconds">
            When starting an online defragmentation task, this parameter sets
            the maximum time for defragmentation. When stopping an online
            defragmentation task, this output buffer is set to the length of
            time used for defragmentation.
            </param>
            <param name="callback">Callback function that defrag uses to report progress.</param>
            <param name="grbit">Defragmentation options.</param>
            <returns>An error code or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetIdle(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.IdleGrbit)">
            <summary>
            Performs idle cleanup tasks or checks the version store status in ESE.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="grbit">A combination of JetIdleGrbit flags.</param>
            <returns>An error code if the operation fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetConfigureProcessForCrashDump(Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit)">
            <summary>
            Crash dump options for Watson.
            </summary>
            <param name="grbit">Crash dump options.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetFreeBuffer(System.IntPtr)">
            <summary>
            Frees memory that was allocated by a database engine call.
            </summary>
            <param name="buffer">
            The buffer allocated by a call to the database engine.
            <see cref="F:System.IntPtr.Zero"/> is acceptable, and will be ignored.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT@)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to retrieve.</param>
            <param name="operationContext">An operation context to retrieve.</param>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT"/>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="operationContext">An operation context to set.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetThreadStats(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2@)">
            <summary>
            Retrieves performance information from the database engine for the
            current thread. Multiple calls can be used to collect statistics
            that reflect the activity of the database engine on this thread
            between those calls. 
            </summary>
            <param name="threadstats">
            Returns the thread statistics.
            </param>
            <returns>An error code if the operation fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetBeginTransaction3(Microsoft.Isam.Esent.Interop.JET_SESID,System.Int64,Microsoft.Isam.Esent.Interop.BeginTransactionGrbit)">
            <summary>
            Causes a session to enter a transaction or create a new save point in an existing
            transaction.
            </summary>
            <param name="sesid">The session to begin the transaction for.</param>
            <param name="userTransactionId">An optional identifier supplied by the user for identifying the transaction.</param>
            <param name="grbit">Transaction options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCommitTransaction2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.CommitTransactionGrbit,System.TimeSpan,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID@)">
            <summary>
            Commits the changes made to the state of the database during the current save point
            and migrates them to the previous save point. If the outermost save point is committed
            then the changes made during that save point will be committed to the state of the
            database and the session will exit the transaction.
            </summary>
            <param name="sesid">The session to commit the transaction for.</param>
            <param name="grbit">Commit options.</param>
            <param name="durableCommit">Duration to commit lazy transaction.</param>
            <param name="commitId">Commit-id associated with this commit record.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetErrorInfo(Microsoft.Isam.Esent.Interop.JET_err,Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC@)">
            <summary>
            Gets extended information about an error.
            </summary>
            <param name="error">The error code about which to retrieve information.</param>
            <param name="errinfo">Information about the specified error code.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetResizeDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows8.ResizeDatabaseGrbit)">
            <summary>
            Resizes a currently open database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to grow.</param>
            <param name="desiredPages">The desired size of the database, in pages.</param>
            <param name="actualPages">The size of the database, in pages, after the call. </param>
            <param name="grbit">Resize options.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenTemporaryTable2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="temporarytable">
            Description of the temporary table to create on input. After a
            successful call, the structure contains the handle to the temporary
            table and column identifications.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateTableColumnIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Creates a table, adds columns, and indices on that table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to which to add the new table.</param>
            <param name="tablecreate">Object describing the table to create.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Int32@)">
            <summary>
            Gets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set, see
            <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/> and <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam"/>.</param>
            <param name="value">A 32-bit integer to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Gets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set, see
            <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/> and <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam"/>.</param>
            <param name="data">A byte array to retrieve.</param>
            <param name="length">AThe length of the data array.</param>
            <param name="actualDataSize">The actual size of the data field.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Int32)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="value">A 32-bit integer to set.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Byte[],System.Int32)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="data">Data to set in this session parameter.</param>
            <param name="dataSize">Size of the data provided.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetPrereadIndexRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)">
            <summary>
            If the records with the specified key ranges are not in the buffer
            cache, then start asynchronous reads to bring the records into the
            database buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="indexRanges">The key rangess to preread.</param>
            <param name="rangeIndex">The index of the first key range in the array to read.</param>
            <param name="rangeCount">The maximum number of key ranges to preread.</param>
            <param name="rangesPreread">Returns the number of keys actually preread.</param>
            <param name="columnsPreread">List of column ids for long value columns to preread.</param>
            <param name="grbit">Preread options. Used to specify the direction of the preread.</param>
            <returns>
            An error if the call fails.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetPrereadKeyRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[][],System.Int32[],System.Byte[][],System.Int32[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)">
            <summary>
            If the records with the specified key ranges are not in the
            buffer cache then start asynchronous reads to bring the records
            into the database buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="keysStart">The start of key ranges to preread.</param>
            <param name="keyStartLengths">The lengths of the start keys to preread.</param>
            <param name="keysEnd">The end of key rangess to preread.</param>
            <param name="keyEndLengths">The lengths of the end keys to preread.</param>
            <param name="rangeIndex">The index of the first key range in the array to read.</param>
            <param name="rangeCount">The maximum number of key ranges to preread.</param>
            <param name="rangesPreread">Returns the number of keys actually preread.</param>
            <param name="columnsPreread">List of column ids for long value columns to preread.</param>
            <param name="grbit">Preread options. Used to specify the direction of the preread.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetCursorFilter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN[],Microsoft.Isam.Esent.Interop.Windows8.CursorFilterGrbit)">
            <summary>
            Set an array of simple filters for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)"/>
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="filters">Simple record filters.</param>
            <param name="grbit">Move options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Implementation.JetApi">
            <summary>
            Calls to the ESENT interop layer. These calls take the managed types (e.g. JET_SESID) and
            return errors.
            </summary>
            <summary>
            Windows10 calls to the ESENT interop layer. These calls take the managed types (e.g. JET_SESID) and
            return errors.
            </summary>
            <summary>
            Windows8 calls to the ESENT interop layer. These calls take the managed types (e.g. JET_SESID) and
            return errors.
            </summary>
            <summary>
            JetApi code that is specific to ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Implementation.JetApi.TraceSwitch">
            <summary>
            API call tracing.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Implementation.JetApi.versionOverride">
            <summary>
            The version of esent. If this is zero then it is looked up
            with JetGetVersion.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Implementation.JetApi.callbackWrappers">
            <summary>
            Callback wrapper collection. This is used for long-running callbacks
            (callbacks which can be called after the API call returns). Create a
            wrapper here and occasionally clean them up.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.#cctor">
            <summary>
            Initializes static members of the JetApi class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the JetApi class. This allows the version
            to be set.
            </summary>
            <param name="version">
            The version of Esent. This is used to override the results of
            JetGetVersion.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.#ctor">
            <summary>
            Initializes a new instance of the JetApi class.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetApi.Capabilities">
            <summary>
            Gets the capabilities of this implementation of ESENT.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String)">
            <summary>
            Allocates a new instance of the database engine.
            </summary>
            <param name="instance">Returns the new instance.</param>
            <param name="name">The name of the instance. Names must be unique.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String,System.String,Microsoft.Isam.Esent.Interop.CreateInstanceGrbit)">
            <summary>
            Allocate a new instance of the database engine for use in a single
            process, with a display name specified.
            </summary>
            <param name="instance">Returns the newly create instance.</param>
            <param name="name">
            Specifies a unique string identifier for the instance to be created.
            This string must be unique within a given process hosting the
            database engine.
            </param>
            <param name="displayName">
            A display name for the instance to be created. This will be used
            in eventlog entries.
            </param>
            <param name="grbit">Creation options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)">
            <summary>
            Initialize the ESENT database engine.
            </summary>
            <param name="instance">
            The instance to initialize. If an instance hasn't been
            allocated then a new one is created and the engine
            will operate in single-instance mode.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetInit2(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,Microsoft.Isam.Esent.Interop.InitGrbit)">
            <summary>
            Initialize the ESENT database engine.
            </summary>
            <param name="instance">
            The instance to initialize. If an instance hasn't been
            allocated then a new one is created and the engine
            will operate in single-instance mode.
            </param>
            <param name="grbit">
            Initialization options.
            </param>
            <returns>An error or a warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetInit3(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,Microsoft.Isam.Esent.Interop.JET_RSTINFO,Microsoft.Isam.Esent.Interop.InitGrbit)">
            <summary>
            Initialize the ESENT database engine.
            </summary>
            <param name="instance">
            The instance to initialize. If an instance hasn't been
            allocated then a new one is created and the engine
            will operate in single-instance mode.
            </param>
            <param name="recoveryOptions">
            Additional recovery parameters for remapping databases during
            recovery, position where to stop recovery at, or recovery status.
            </param>
            <param name="grbit">
            Initialization options.
            </param>
            <returns>An error code or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetInstanceInfo(System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@)">
            <summary>
            Retrieves information about the instances that are running.
            </summary>
            <param name="numInstances">
            Returns the number of instances.
            </param>
            <param name="instances">
            Returns an array of instance info objects, one for each running
            instance.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetInstanceMiscInfo(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SIGNATURE@,Microsoft.Isam.Esent.Interop.Vista.JET_InstanceMiscInfo)">
            <summary>
            Retrieves information about an instance.
            </summary>
            <param name="instance">The instance to get information about.</param>
            <param name="signature">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetStopBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Prevents streaming backup-related activity from continuing on a
            specific running instance, thus ending the streaming backup in
            a predictable way.
            </summary>
            <param name="instance">The instance to use.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetStopServiceInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Prepares an instance for termination.
            </summary>
            <param name="instance">The (running) instance to use.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetStopServiceInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Windows8.StopServiceGrbit)">
            <summary>
            Prepares an instance for termination. Can also be used to resume a previous quiescing.
            </summary>
            <param name="instance">The (running) instance to use.</param>
            <param name="grbit">The options to stop or resume the instance.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetTerm(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Terminate an instance that was created with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)"/> or
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String)"/>.
            </summary>
            <param name="instance">The instance to terminate.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetTerm2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.TermGrbit)">
            <summary>
            Terminate an instance that was created with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)"/> or
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String)"/>.
            </summary>
            <param name="instance">The instance to terminate.</param>
            <param name="grbit">Termination options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.IntPtr,System.String)">
            <summary>
            Sets database configuration options.
            </summary>
            <param name="instance">
            The instance to set the option on or <see cref="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Nil"/>
            to set the option on all instances.
            </param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to set.</param>
            <param name="paramValue">The value of the parameter to set, if the parameter is an integer type.</param>
            <param name="paramString">The value of the parameter to set, if the parameter is a string type.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.String)">
            <summary>
            Sets database configuration options. This overload is used when the
            parameter being set is of type JET_CALLBACK.
            </summary>
            <param name="instance">
            The instance to set the option on or <see cref="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Nil"/>
            to set the option on all instances.
            </param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to set.</param>
            <param name="paramValue">The value of the parameter to set.</param>
            <param name="paramString">The value of the string parameter to set.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.IntPtr@,System.String@,System.Int32)">
            <summary>
            Gets database configuration options.
            </summary>
            <param name="instance">The instance to retrieve the options from.</param>
            <param name="sesid">The session to use.</param>
            <param name="paramid">The parameter to get.</param>
            <param name="paramValue">Returns the value of the parameter, if the value is an integer.</param>
            <param name="paramString">Returns the value of the parameter, if the value is a string.</param>
            <param name="maxParam">The maximum size of the parameter string.</param>
            <returns>An ESENT warning code.</returns>
            <remarks>
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_param.ErrorToString"/> passes in the error number in the paramValue, which is why it is
            a ref parameter and not an out parameter.
            </remarks>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetVersion(Microsoft.Isam.Esent.Interop.JET_SESID,System.UInt32@)">
            <summary>
            Retrieves the version of the database engine.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="version">Returns the version number of the database engine.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)">
            <summary>
            Creates and attaches a database file.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The path to the database file to create.</param>
            <param name="connect">The parameter is not used.</param>
            <param name="dbid">Returns the dbid of the new database.</param>
            <param name="grbit">Database creation options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)">
            <summary>
            Creates and attaches a database file with a maximum database size specified.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetAttachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The path to the database file to create.</param>
            <param name="maxPages">
            The maximum size, in database pages, of the database. Passing 0 means there is
            no enforced maximum.
            </param>
            <param name="dbid">Returns the dbid of the new database.</param>
            <param name="grbit">Database creation options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)">
            <summary>
            Attaches a database file for use with a database instance. In order to use the
            database, it will need to be subsequently opened with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The database to attach.</param>
            <param name="grbit">Attach options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetAttachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)">
            <summary>
            Attaches a database file for use with a database instance. In order to use the
            database, it will need to be subsequently opened with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/>.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The database to attach.</param>
            <param name="maxPages">
            The maximum size, in database pages, of the database. Passing 0 means there is
            no enforced maximum.
            </param>
            <param name="grbit">Attach options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)">
            <summary>
            Opens a database previously attached with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/>,
            for use with a database session. This function can be called multiple times
            for the same database.
            </summary>
            <param name="sesid">The session that is opening the database.</param>
            <param name="database">The database to open.</param>
            <param name="connect">Reserved for future use.</param>
            <param name="dbid">Returns the dbid of the attached database.</param>
            <param name="grbit">Open database options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCloseDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.CloseDatabaseGrbit)">
            <summary>
            Closes a database file that was previously opened with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/> or
            created with <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetCreateDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to close.</param>
            <param name="grbit">Close options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDetachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String)">
            <summary>
            Releases a database file that was previously attached to a database session.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="database">The database to detach.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDetachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit)">
            <summary>
            Releases a database file that was previously attached to a database session.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="database">The database to detach.</param>
            <param name="grbit">Detach options.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCompact(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS,System.Object,Microsoft.Isam.Esent.Interop.CompactGrbit)">
            <summary>
            Makes a copy of an existing database. The copy is compacted to a
            state optimal for usage. Data in the copied data will be packed
            according to the measures chosen for the indexes at index create.
            In this way, compacted data may be stored as densely as possible.
            Alternatively, compacted data may reserve space for subsequent
            record growth or index insertions.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="sourceDatabase">The source database that will be compacted.</param>
            <param name="destinationDatabase">The name to use for the compacted database.</param>
            <param name="statusCallback">
            A callback function that can be called periodically through the
            database compact operation to report progress.
            </param>
            <param name="ignored">
            This parameter is ignored and should be null.
            </param>
            <param name="grbit">Compact options.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGrowDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32,System.Int32@)">
            <summary>
            Extends the size of a database that is currently open.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to grow.</param>
            <param name="desiredPages">The desired size of the database, in pages.</param>
            <param name="actualPages">
            The size of the database, in pages, after the call.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetDatabaseSize(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.Int32,System.Int32@)">
            <summary>
            Extends the size of a database that is currently open.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="database">The name of the database to grow.</param>
            <param name="desiredPages">The desired size of the database, in pages.</param>
            <param name="actualPages">
            The size of the database, in pages, after the call.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database identifier.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_DBINFOMISC@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database identifier.</param>
            <param name="dbinfomisc">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetDatabaseInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database identifier.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetDatabaseFileInfo(System.String,System.Int32@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="databaseName">The file name of the database.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetDatabaseFileInfo(System.String,System.Int64@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="databaseName">The file name of the database.</param>
            <param name="value">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetDatabaseFileInfo(System.String,Microsoft.Isam.Esent.Interop.JET_DBINFOMISC@,Microsoft.Isam.Esent.Interop.JET_DbInfo)">
            <summary>
            Retrieves certain information about the given database.
            </summary>
            <param name="databaseName">The file name of the database.</param>
            <param name="dbinfomisc">The value to be retrieved.</param>
            <param name="infoLevel">The specific data to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)">
            <summary>
            Performs a streaming backup of an instance, including all the attached
            databases, to a directory. With multiple backup methods supported by
            the engine, this is the simplest and most encapsulated function.
            </summary>
            <param name="instance">The instance to backup.</param>
            <param name="destination">
            The directory where the backup is to be stored. If the backup path is
            null to use the function will truncate the logs, if possible.
            </param>
            <param name="grbit">Backup options.</param>
            <param name="statusCallback">
            Optional status notification callback.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRestoreInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)">
            <summary>
            Restores and recovers a streaming backup of an instance including all
            the attached databases. It is designed to work with a backup created
            with the <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)"/> function. This is the
            simplest and most encapsulated restore function.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="source">
            Location of the backup. The backup should have been created with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)"/>.
            </param>
            <param name="destination">
            Name of the folder where the database files from the backup set will
            be copied and recovered. If this is set to null, the database files
            will be copied and recovered to their original location.
            </param>
            <param name="statusCallback">
            Optional status notification callback.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOSSnapshotPrepare(Microsoft.Isam.Esent.Interop.JET_OSSNAPID@,Microsoft.Isam.Esent.Interop.SnapshotPrepareGrbit)">
            <summary>
            Begins the preparations for a snapshot session. A snapshot session
            is a short time interval in which the engine does not issue any
            write IOs to disk, so that the engine can participate in a volume
            snapshot session (when driven by a snapshot writer).
            </summary>
            <param name="snapid">Returns the ID of the snapshot session.</param>
            <param name="grbit">Snapshot options.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOSSnapshotPrepareInstance(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Vista.SnapshotPrepareInstanceGrbit)">
            <summary>
            Selects a specific instance to be part of the snapshot session.
            </summary>
            <param name="snapshot">The snapshot identifier.</param>
            <param name="instance">The instance to add to the snapshot.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOSSnapshotFreeze(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@,Microsoft.Isam.Esent.Interop.SnapshotFreezeGrbit)">
            <summary>
            Starts a snapshot. While the snapshot is in progress, no
            write-to-disk activity by the engine can take place.
            </summary>
            <param name="snapshot">The snapshot session.</param>
            <param name="numInstances">
            Returns the number of instances that are part of the snapshot session.
            </param>
            <param name="instances">
            Returns information about the instances that are part of the snapshot session.
            </param>
            <param name="grbit">
            Snapshot freeze options.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOSSnapshotGetFreezeInfo(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@,Microsoft.Isam.Esent.Interop.Vista.SnapshotGetFreezeInfoGrbit)">
            <summary>
            Retrieves the list of instances and databases that are part of the
            snapshot session at any given moment.
            </summary>
            <param name="snapshot">The identifier of the snapshot session.</param>
            <param name="numInstances">Returns the number of instances.</param>
            <param name="instances">Returns information about the instances.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)">
            <summary>
            Notifies the engine that it can resume normal IO operations after a
            freeze period and a successful snapshot.
            </summary>
            <param name="snapid">The ID of the snapshot.</param>
            <param name="grbit">Thaw options.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOSSnapshotTruncateLog(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit)">
            <summary>
            Enables log truncation for all instances that are part of the snapshot session.
            </summary>
            <remarks>
            This function should be called only if the snapshot was created with the
            <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ContinueAfterThaw"/> option. Otherwise, the snapshot
            session ends after the call to <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)"/>.
            </remarks>
            <param name="snapshot">The snapshot identifier.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOSSnapshotTruncateLogInstance(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit)">
            <summary>
            Truncates the log for a specified instance during a snapshot session.
            </summary>
            <remarks>
            This function should be called only if the snapshot was created with the
            <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ContinueAfterThaw"/> option. Otherwise, the snapshot
            session ends after the call to <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)"/>.
            </remarks>
            <param name="snapshot">The snapshot identifier.</param>
            <param name="instance">The instance to truncat the log for.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOSSnapshotEnd(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Vista.SnapshotEndGrbit)">
            <summary>
            Notifies the engine that the snapshot session finished.
            </summary>
            <param name="snapid">The identifier of the snapshot session.</param>
            <param name="grbit">Snapshot end options.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOSSnapshotAbort(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Server2003.SnapshotAbortGrbit)">
            <summary>
            Notifies the engine that it can resume normal IO operations after a
            freeze period ended with a failed snapshot.
            </summary>
            <param name="snapid">Identifier of the snapshot session.</param>
            <param name="grbit">Options for this call.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)">
            <summary>
            Initiates an external backup while the engine and database are online and active.
            </summary>
            <param name="instance">The instance prepare for backup.</param>
            <param name="grbit">Backup options.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCloseFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE)">
            <summary>
            Closes a file that was opened with JetOpenFileInstance after the
            data from that file has been extracted using JetReadFileInstance.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="handle">The handle to close.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetEndExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Ends an external backup session. This API is the last API in a series
            of APIs that must be called to execute a successful online
            (non-VSS based) backup.
            </summary>
            <param name="instance">The instance to end the backup for.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetEndExternalBackupInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.EndExternalBackupGrbit)">
            <summary>
            Ends an external backup session. This API is the last API in a series
            of APIs that must be called to execute a successful online
            (non-VSS based) backup.
            </summary>
            <param name="instance">The instance to end the backup for.</param>
            <param name="grbit">Options that specify how the backup ended.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetAttachInfoInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String@,System.Int32,System.Int32@)">
            <summary>
            Used during a backup initiated by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>
            to query an instance for the names of database files that should become part of
            the backup file set. Only databases that are currently attached to the instance
            using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/> will be considered. These files may
            subsequently be opened using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)"/> and read
            using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetReadFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <remarks>
            It is important to note that this API does not return an error or warning if
            the output buffer is too small to accept the full list of files that should be
            part of the backup file set.
            </remarks>
            <param name="instance">The instance to get the information for.</param>
            <param name="files">
            Returns a list of null terminated strings describing the set of database files
            that should be a part of the backup file set. The list of strings returned in
            this buffer is in the same format as a multi-string used by the registry. Each
            null-terminated string is returned in sequence followed by a final null terminator.
            </param>
            <param name="maxChars">
            Maximum number of characters to retrieve.
            </param>
            <param name="actualChars">
            Actual size of the file list. If this is greater than maxChars
            then the list has been truncated.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetLogInfoInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String@,System.Int32,System.Int32@)">
            <summary>
            Used during a backup initiated by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>
            to query an instance for the names of database patch files and logfiles that
            should become part of the backup file set. These files may subsequently be
            opened using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)"/> and read using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetReadFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <remarks>
            It is important to note that this API does not return an error or warning if
            the output buffer is too small to accept the full list of files that should be
            part of the backup file set.
            </remarks>
            <param name="instance">The instance to get the information for.</param>
            <param name="files">
            Returns a list of null terminated strings describing the set of database patch files
            and log files that should be a part of the backup file set. The list of strings returned in
            this buffer is in the same format as a multi-string used by the registry. Each
            null-terminated string is returned in sequence followed by a final null terminator.
            </param>
            <param name="maxChars">
            Maximum number of characters to retrieve.
            </param>
            <param name="actualChars">
            Actual size of the file list. If this is greater than maxChars
            then the list has been truncated.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTruncateLogInfoInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String@,System.Int32,System.Int32@)">
            <summary>
            Used during a backup initiated by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>
            to query an instance for the names of the transaction log files that can be safely
            deleted after the backup has successfully completed.
            </summary>
            <remarks>
            It is important to note that this API does not return an error or warning if
            the output buffer is too small to accept the full list of files that should be
            part of the backup file set.
            </remarks>
            <param name="instance">The instance to get the information for.</param>
            <param name="files">
            Returns a list of null terminated strings describing the set of database log files
            that can be safely deleted after the backup completes. The list of strings returned in
            this buffer is in the same format as a multi-string used by the registry. Each
            null-terminated string is returned in sequence followed by a final null terminator.
            </param>
            <param name="maxChars">
            Maximum number of characters to retrieve.
            </param>
            <param name="actualChars">
            Actual size of the file list. If this is greater than maxChars
            then the list has been truncated.
            </param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)">
            <summary>
            Opens an attached database, database patch file, or transaction log
            file of an active instance for the purpose of performing a streaming
            fuzzy backup. The data from these files can subsequently be read
            through the returned handle using JetReadFileInstance. The returned
            handle must be closed using JetCloseFileInstance. An external backup
            of the instance must have been previously initiated using
            JetBeginExternalBackupInstance.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="file">The file to open.</param>
            <param name="handle">Returns a handle to the file.</param>
            <param name="fileSizeLow">Returns the least significant 32 bits of the file size.</param>
            <param name="fileSizeHigh">Returns the most significant 32 bits of the file size.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetReadFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_HANDLE,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves the contents of a file opened with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenFileInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.JET_HANDLE@,System.Int64@,System.Int64@)"/>.
            </summary>
            <param name="instance">The instance to use.</param>
            <param name="file">The file to read from.</param>
            <param name="buffer">The buffer to read into.</param>
            <param name="bufferSize">The size of the buffer.</param>
            <param name="bytesRead">Returns the amount of data read into the buffer.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetTruncateLogInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Used during a backup initiated by JetBeginExternalBackup to delete
            any transaction log files that will no longer be needed once the
            current backup completes successfully.
            </summary>
            <param name="instance">The instance to truncate.</param>
            <returns>An error code if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetBeginSession(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID@,System.String,System.String)">
            <summary>
            Initialize a new ESENT session.
            </summary>
            <param name="instance">The initialized instance to create the session in.</param>
            <param name="sesid">Returns the created session.</param>
            <param name="username">The parameter is not used.</param>
            <param name="password">The parameter is not used.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetSessionContext(Microsoft.Isam.Esent.Interop.JET_SESID,System.IntPtr)">
            <summary>
            Associates a session with the current thread using the given context
            handle. This association overrides the default engine requirement
            that a transaction for a given session must occur entirely on the
            same thread.
            </summary>
            <param name="sesid">The session to set the context on.</param>
            <param name="context">The context to set.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetResetSessionContext(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Disassociates a session from the current thread. This should be
            used in conjunction with JetSetSessionContext.
            </summary>
            <param name="sesid">The session to use.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetEndSession(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.EndSessionGrbit)">
            <summary>
            Ends a session.
            </summary>
            <param name="sesid">The session to end.</param>
            <param name="grbit">This parameter is not used.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDupSession(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_SESID@)">
            <summary>
            Initialize a new ESE session in the same instance as the given sesid.
            </summary>
            <param name="sesid">The session to duplicate.</param>
            <param name="newSesid">Returns the new session.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetThreadStats(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS@)">
            <summary>
            Retrieves performance information from the database engine for the
            current thread. Multiple calls can be used to collect statistics
            that reflect the activity of the database engine on this thread
            between those calls.
            </summary>
            <param name="threadstats">
            Returns the thread statistics..
            </param>
            <returns>An error code if the operation fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.OpenTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@)">
            <summary>
            Opens a cursor on a previously created table.
            </summary>
            <param name="sesid">The database session to use.</param>
            <param name="dbid">The database to open the table in.</param>
            <param name="tablename">The name of the table to open.</param>
            <param name="parameters">The parameter is not used.</param>
            <param name="parametersLength">The parameter is not used.</param>
            <param name="grbit">Table open options.</param>
            <param name="tableid">Returns the opened table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCloseTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Close an open table.
            </summary>
            <param name="sesid">The session which opened the table.</param>
            <param name="tableid">The table to close.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDupCursor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.DupCursorGrbit)">
            <summary>
            Duplicates an open cursor and returns a handle to the duplicated cursor.
            If the cursor that was duplicated was a read-only cursor then the
            duplicated cursor is also a read-only cursor.
            Any state related to constructing a search key or updating a record is
            not copied into the duplicated cursor. In addition, the location of the
            original cursor is not duplicated into the duplicated cursor. The
            duplicated cursor is always opened on the clustered index and its
            location is always on the first row of the table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to duplicate.</param>
            <param name="newTableid">The duplicated cursor.</param>
            <param name="grbit">Reserved for future use.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetComputeStats(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Walks each index of a table to exactly compute the number of entries
            in an index, and the number of distinct keys in an index. This
            information, together with the number of database pages allocated
            for an index and the current time of the computation is stored in
            index metadata in the database. This data can be subsequently retrieved
            with information operations.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table that the statistics will be computed on.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.LsGrbit)">
            <summary>
            Enables the application to associate a context handle known as
            Local Storage with a cursor or the table associated with that
            cursor. This context handle can be used by the application to
            store auxiliary data that is associated with a cursor or table.
            The application is later notified using a runtime callback when
            the context handle must be released. This makes it possible to
            associate dynamically allocated state with a cursor or table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use.</param>
            <param name="ls">The context handle to be associated with the session or cursor.</param>
            <param name="grbit">Set options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS@,Microsoft.Isam.Esent.Interop.LsGrbit)">
            <summary>
            Enables the application to retrieve the context handle known
            as Local Storage that is associated with a cursor or the table
            associated with that cursor. This context handle must have been
            previously set using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.LsGrbit)"/>. JetGetLS can also
            be used to simultaneously fetch the current context handle for
            a cursor or table and reset that context handle.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use.</param>
            <param name="ls">Returns the retrieved context handle.</param>
            <param name="grbit">Retrieve options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetCursorInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Determine whether an update of the current record of a cursor
            will result in a write conflict, based on the current update
            status of the record. It is possible that a write conflict will
            ultimately be returned even if JetGetCursorInfo returns successfully.
            because another session may update the record before the current
            session is able to update the same record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to check.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetBeginTransaction(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Causes a session to enter a transaction or create a new save point in an existing
            transaction.
            </summary>
            <param name="sesid">The session to begin the transaction for.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetBeginTransaction2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.BeginTransactionGrbit)">
            <summary>
            Causes a session to enter a transaction or create a new save point in an existing
            transaction.
            </summary>
            <param name="sesid">The session to begin the transaction for.</param>
            <param name="grbit">Transaction options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCommitTransaction(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.CommitTransactionGrbit)">
            <summary>
            Commits the changes made to the state of the database during the current save point
            and migrates them to the previous save point. If the outermost save point is committed
            then the changes made during that save point will be committed to the state of the
            database and the session will exit the transaction.
            </summary>
            <param name="sesid">The session to commit the transaction for.</param>
            <param name="grbit">Commit options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRollback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.RollbackTransactionGrbit)">
            <summary>
            Undoes the changes made to the state of the database
            and returns to the last save point. JetRollback will also close any cursors
            opened during the save point. If the outermost save point is undone, the
            session will exit the transaction.
            </summary>
            <param name="sesid">The session to rollback the transaction for.</param>
            <param name="grbit">Rollback options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32,System.Int32,Microsoft.Isam.Esent.Interop.JET_TABLEID@)">
            <summary>
            Create an empty table. The newly created table is opened exclusively.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to create the table in.</param>
            <param name="table">The name of the table to create.</param>
            <param name="pages">Initial number of pages in the table.</param>
            <param name="density">
            The default density of the table. This is used when doing sequential inserts.
            </param>
            <param name="tableid">Returns the tableid of the new table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDeleteTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String)">
            <summary>
            Deletes a table from a database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to delete the table from.</param>
            <param name="table">The name of the table to delete.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetAddColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.JET_COLUMNID@)">
            <summary>
            Add a new column to an existing table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to add the column to.</param>
            <param name="column">The name of the column.</param>
            <param name="columndef">The definition of the column.</param>
            <param name="defaultValue">The default value of the column.</param>
            <param name="defaultValueSize">The size of the default value.</param>
            <param name="columnid">Returns the columnid of the new column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDeleteColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Deletes a column from a database table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">A cursor on the table to delete the column from.</param>
            <param name="column">The name of the column to be deleted.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDeleteColumn2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.DeleteColumnGrbit)">
            <summary>
            Deletes a column from a database table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">A cursor on the table to delete the column from.</param>
            <param name="column">The name of the column to be deleted.</param>
            <param name="grbit">Column deletion options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.CreateIndexGrbit,System.String,System.Int32,System.Int32)">
            <summary>
            Creates an index over data in an ESE database. An index can be used to locate
            specific data quickly.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexName">
            Pointer to a null-terminated string that specifies the name of the index to create.
            </param>
            <param name="grbit">Index creation options.</param>
            <param name="keyDescription">
            Pointer to a double null-terminated string of null-delimited tokens.
            </param>
            <param name="keyDescriptionLength">
            The length, in characters, of szKey including the two terminating nulls.
            </param>
            <param name="density">Initial B+ tree density.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDeleteIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Deletes an index from a database table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">A cursor on the table to delete the index from.</param>
            <param name="index">The name of the index to be deleted.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenTempTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columns">
            Column definitions for the columns created in the temporary table.
            </param>
            <param name="numColumns">Number of column definitions.</param>
            <param name="grbit">Table creation options.</param>
            <param name="tableid">
            Returns the tableid of the temporary table. Closing this tableid
            frees the resources associated with the temporary table.
            </param>
            <param name="columnids">
            The output buffer that receives the array of column IDs generated
            during the creation of the temporary table. The column IDs in this
            array will exactly correspond to the input array of column definitions.
            As a result, the size of this buffer must correspond to the size of the input array.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenTempTable2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columns">
            Column definitions for the columns created in the temporary table.
            </param>
            <param name="numColumns">Number of column definitions.</param>
            <param name="lcid">
            The locale ID to use to compare any Unicode key column data in the temporary table.
            Any locale may be used as long as the appropriate language pack has been installed
            on the machine.
            </param>
            <param name="grbit">Table creation options.</param>
            <param name="tableid">
            Returns the tableid of the temporary table. Closing this tableid
            frees the resources associated with the temporary table.
            </param>
            <param name="columnids">
            The output buffer that receives the array of column IDs generated
            during the creation of the temporary table. The column IDs in this
            array will exactly correspond to the input array of column definitions.
            As a result, the size of this buffer must correspond to the size of the input array.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenTempTable3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="columns">
            Column definitions for the columns created in the temporary table.
            </param>
            <param name="numColumns">Number of column definitions.</param>
            <param name="unicodeindex">
            The Locale ID and normalization flags that will be used to compare
            any Unicode key column data in the temporary table. When this
            is not present then the default options are used.
            </param>
            <param name="grbit">Table creation options.</param>
            <param name="tableid">
            Returns the tableid of the temporary table. Closing this tableid
            frees the resources associated with the temporary table.
            </param>
            <param name="columnids">
            The output buffer that receives the array of column IDs generated
            during the creation of the temporary table. The column IDs in this
            array will exactly correspond to the input array of column definitions.
            As a result, the size of this buffer must correspond to the size of the input array.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenTemporaryTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <remarks>
            Introduced in Windows Vista.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="temporarytable">
            Description of the temporary table to create on input. After a
            successful call, the structure contains the handle to the temporary
            table and column identifications.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateTableColumnIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Creates a table, adds columns, and indices on that table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to which to add the new table.</param>
            <param name="tablecreate">Object describing the table to create.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columndef">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnid">The columnid of the column.</param>
            <param name="columndef">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a table column, given its <see cref="T:Microsoft.Isam.Esent.Interop.JET_TABLEID"/> and name.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columnbase">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a table column, given its <see cref="T:Microsoft.Isam.Esent.Interop.JET_TABLEID"/> and <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNID"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnid">The columnid of the column.</param>
            <param name="columnbase">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.ColInfoGrbit,Microsoft.Isam.Esent.Interop.JET_COLUMNLIST@)">
            <summary>
            Retrieves information about all columns in the table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="ignored">The parameter is ignored.</param>
            <param name="grbit">Additional options for JetGetTableColumnInfo.</param>
            <param name="columnlist">Filled in with information about the columns in the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columndef">Filled in with information about the column.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNLIST@)">
            <summary>
            Retrieves information about all columns in a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="ignored">This parameter is ignored.</param>
            <param name="columnlist">Filled in with information about the columns in the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a column in a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="columnbase">Filled in with information about the columns in the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="columnid">The columnid of the column.</param>
            <param name="columnbase">Filled in with information about the columns in the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetObjectInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_OBJECTLIST@)">
            <summary>
            Retrieves information about database objects.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="objectlist">Filled in with information about the objects in the database.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetObjectInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_objtyp,System.String,Microsoft.Isam.Esent.Interop.JET_OBJECTINFO@)">
            <summary>
            Retrieves information about database objects.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="objtyp">The type of the object.</param>
            <param name="objectName">The object name about which to retrieve information.</param>
            <param name="objectinfo">Filled in with information about the objects in the database.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String@,System.Int32)">
            <summary>
            JetGetCurrentIndex function determines the name of the current
            index of a given cursor. This name is also used to later re-select
            that index as the current index using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)"/>. It can
            also be used to discover the properties of that index using
            JetGetTableIndexInfo.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to get the index name for.</param>
            <param name="indexName">Returns the name of the index.</param>
            <param name="maxNameLength">
            The maximum length of the index name. Index names are no more than
            Api.MaxNameLength characters.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_OBJECTINFO@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Default"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Name"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.TemplateTableName"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Dbid"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32[],Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceUsage"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceAlloc"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_TblInfo)">
            <summary>
            Retrieves various pieces of information about a table in a database.
            </summary>
            <remarks>
            This overload is used with <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceOwned"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceAvailable"/>.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve information about.</param>
            <param name="result">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.UInt16@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.Int32@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXLIST@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.String@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.UInt16@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.Int32@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXLIST@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.String@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRenameTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String)">
            <summary>
            Changes the name of an existing table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database containing the table.</param>
            <param name="tableName">The name of the table.</param>
            <param name="newTableName">The new name of the table.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRenameColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.String,Microsoft.Isam.Esent.Interop.RenameColumnGrbit)">
            <summary>
            Changes the name of an existing column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="name">The name of the column.</param>
            <param name="newName">The new name of the column.</param>
            <param name="grbit">Column rename options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetColumnDefaultValue(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.SetColumnDefaultValueGrbit)">
            <summary>
            Changes the default value of an existing column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database containing the column.</param>
            <param name="tableName">The name of the table containing the column.</param>
            <param name="columnName">The name of the column.</param>
            <param name="data">The new default value.</param>
            <param name="dataSize">Size of the new default value.</param>
            <param name="grbit">Column default value options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGotoBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32)">
            <summary>
            Positions a cursor to an index entry for the record that is associated with
            the specified bookmark. The bookmark can be used with any index defined over
            a table. The bookmark for a record can be retrieved using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="bookmark">The bookmark used to position the cursor.</param>
            <param name="bookmarkSize">The size of the bookmark.</param>        /// <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGotoSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit)">
            <summary>
            Positions a cursor to an index entry that is associated with the
            specified secondary index bookmark. The secondary index bookmark
            must be used with the same index over the same table from which it
            was originally retrieved. The secondary index bookmark for an index
            entry can be retrieved using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGotoSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table cursor to position.</param>
            <param name="secondaryKey">The buffer that contains the secondary key.</param>
            <param name="secondaryKeySize">The size of the secondary key.</param>
            <param name="primaryKey">The buffer that contains the primary key.</param>
            <param name="primaryKeySize">The size of the primary key.</param>
            <param name="grbit">Options for positioning the bookmark.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetMakeKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.MakeKeyGrbit)">
            <summary>
            Constructs search keys that may then be used by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/> and <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
            <remarks>
            The MakeKey functions provide datatype-specific make key functionality.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to create the key on.</param>
            <param name="data">Column data for the current key column of the current index.</param>
            <param name="dataSize">Size of the data.</param>
            <param name="grbit">Key options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)">
            <summary>
            Efficiently positions a cursor to an index entry that matches the search
            criteria specified by the search key in that cursor and the specified
            inequality. A search key must have been previously constructed using
            JetMakeKey.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="grbit">Seek options.</param>
            <returns>An error or warning..</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)">
            <summary>
            Navigate through an index. The cursor can be positioned at the start or
            end of the index and moved backwards and forwards by a specified number
            of index entries.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="numRows">An offset which indicates how far to move the cursor.</param>
            <param name="grbit">Move options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)">
            <summary>
            Temporarily limits the set of index entries that the cursor can walk using
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)"/> to those starting
            from the current index entry and ending at the index entry that matches the
            search criteria specified by the search key in that cursor and the specified
            bound criteria. A search key must have been previously constructed using
            JetMakeKey.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index range on.</param>
            <param name="grbit">Index range options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetIntersectIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_INDEXRANGE[],System.Int32,Microsoft.Isam.Esent.Interop.JET_RECORDLIST@,Microsoft.Isam.Esent.Interop.IntersectIndexesGrbit)">
            <summary>
            Computes the intersection between multiple sets of index entries from different secondary
            indices over the same table. This operation is useful for finding the set of records in a
            table that match two or more criteria that can be expressed using index ranges.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="ranges">
            An the index ranges to intersect. The tableids in the ranges
             must have index ranges set on them.
            </param>
            <param name="numRanges">
            The number of index ranges.
            </param>
            <param name="recordlist">
            Returns information about the temporary table containing the intersection results.
            </param>
            <param name="grbit">Intersection options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetCurrentIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetCurrentIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <param name="grbit">
            Set index options.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetCurrentIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit,System.Int32)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <param name="grbit">
            Set index options.
            </param>
            <param name="itagSequence">
            Sequence number of the multi-valued column value which will be used
            to position the cursor on the new index. This parameter is only used
            in conjunction with <see cref="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.NoMove"/>. When
            this parameter is not present or is set to zero, its value is presumed
            to be 1.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetCurrentIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXID,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit,System.Int32)">
            <summary>
            Set the current index of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the index on.</param>
            <param name="index">
            The name of the index to be selected. If this is null or empty the primary
            index will be selected.
            </param>
            <param name="indexid">
            The id of the index to select. This id can be obtained using JetGetIndexInfo
            or JetGetTableIndexInfo with the <see cref="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.IndexId"/> option.
            </param>
            <param name="grbit">
            Set index options.
            </param>
            <param name="itagSequence">
            Sequence number of the multi-valued column value which will be used
            to position the cursor on the new index. This parameter is only used
            in conjunction with <see cref="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.NoMove"/>. When
            this parameter is not present or is set to zero, its value is presumed
            to be 1.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetIndexRecordCount(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32@,System.Int32)">
            <summary>
            Counts the number of entries in the current index from the current position forward.
            The current position is included in the count. The count can be greater than the
            total number of records in the table if the current index is over a multi-valued
            column and instances of the column have multiple-values. If the table is empty,
            then 0 will be returned for the count.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to count the records in.</param>
            <param name="numRecords">Returns the number of records.</param>
            <param name="maxRecordsToCount">
            The maximum number of records to count.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetIndexRecordCount2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int64@,System.Int64)">
            <summary>
            Counts the number of entries in the current index from the current position forward.
            The current position is included in the count. The count can be greater than the
            total number of records in the table if the current index is over a multi-valued
            column and instances of the column have multiple-values. If the table is empty,
            then 0 will be returned for the count.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to count the records in.</param>
            <param name="numRecords">Returns the number of records.</param>
            <param name="maxRecordsToCount">
            The maximum number of records to count.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetTableSequentialGrbit)">
            <summary>
            Notifies the database engine that the application is scanning the entire
            index that the cursor is positioned on. Consequently, the methods that
            are used to access the index data will be tuned to make this scenario as
            fast as possible.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor that will be accessing the data.</param>
            <param name="grbit">Reserved for future use.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetResetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ResetTableSequentialGrbit)">
            <summary>
            Notifies the database engine that the application is no longer scanning the
            entire index the cursor is positioned on. This call reverses a notification
            sent by JetSetTableSequential.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor that was accessing the data.</param>
            <param name="grbit">Reserved for future use.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetRecordPosition(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RECPOS@)">
            <summary>
            Returns the fractional position of the current record in the current index
            in the form of a JET_RECPOS structure.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor positioned on the record.</param>
            <param name="recpos">Returns the approximate fractional position of the record.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGotoPosition(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RECPOS)">
            <summary>
            Moves a cursor to a new location that is a fraction of the way through
            the current index.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="recpos">The approximate position to move to.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetPrereadKeys(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[][],System.Int32[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows7.PrereadKeysGrbit)">
            <summary>
            If the records with the specified keys are not in the buffer cache
            then start asynchronous reads to bring the records into the database
            buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="keys">
            The keys to preread. The keys must be sorted.
            </param>
            <param name="keyLengths">The lengths of the keys to preread.</param>
            <param name="keyIndex">
            The index of the first key in the keys array to read.
            </param>
            <param name="keyCount">
            The maximum number of keys to preread.
            </param>
            <param name="keysPreread">
            Returns the number of keys to actually preread.
            </param>
            <param name="grbit">
            Preread options. Used to specify the direction of the preread.
            </param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Retrieves the bookmark for the record that is associated with the index entry
            at the current position of a cursor. This bookmark can then be used to
            reposition that cursor back to the same record using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetGotoBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32)"/>.
            The bookmark will be no longer than <see cref="P:Microsoft.Isam.Esent.Interop.SystemParameters.BookmarkMost"/>
            bytes.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the bookmark from.</param>
            <param name="bookmark">Buffer to contain the bookmark.</param>
            <param name="bookmarkSize">Size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.GetSecondaryIndexBookmarkGrbit)">
            <summary>
            Retrieves a special bookmark for the secondary index entry at the
            current position of a cursor. This bookmark can then be used to
            efficiently reposition that cursor back to the same index entry
            using JetGotoSecondaryIndexBookmark. This is most useful when
            repositioning on a secondary index that contains duplicate keys or
            that contains multiple index entries for the same record.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the bookmark from.</param>
            <param name="secondaryKey">Output buffer for the secondary key.</param>
            <param name="secondaryKeySize">Size of the secondary key buffer.</param>
            <param name="actualSecondaryKeySize">Returns the size of the secondary key.</param>
            <param name="primaryKey">Output buffer for the primary key.</param>
            <param name="primaryKeySize">Size of the primary key buffer.</param>
            <param name="actualPrimaryKeySize">Returns the size of the primary key.</param>
            <param name="grbit">Options for the call.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRetrieveKey(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.RetrieveKeyGrbit)">
            <summary>
            Retrieves the key for the index entry at the current position of a cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the key from.</param>
            <param name="data">The buffer to retrieve the key into.</param>
            <param name="dataSize">The size of the buffer.</param>
            <param name="actualDataSize">Returns the actual size of the data.</param>
            <param name="grbit">Retrieve key options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRetrieveColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.IntPtr,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit,Microsoft.Isam.Esent.Interop.JET_RETINFO)">
            <summary>
            Retrieves a single column value from the current record. The record is that
            record associated with the index entry at the current position of the cursor.
            Alternatively, this function can retrieve a column from a record being created
            in the cursor copy buffer. This function can also retrieve column data from an
            index entry that references the current record. In addition to retrieving the
            actual column value, JetRetrieveColumn can also be used to retrieve the size
            of a column, before retrieving the column data itself so that application
            buffers can be sized appropriately.
            </summary>
            <remarks>
            The RetrieveColumnAs functions provide datatype-specific retrieval functions.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve the column from.</param>
            <param name="columnid">The columnid to retrieve.</param>
            <param name="data">The data buffer to be retrieved into.</param>
            <param name="dataSize">The size of the data buffer.</param>
            <param name="actualDataSize">Returns the actual size of the data buffer.</param>
            <param name="grbit">Retrieve column options.</param>
            <param name="retinfo">
            If pretinfo is give as NULL then the function behaves as though an itagSequence
            of 1 and an ibLongValue of 0 (zero) were given. This causes column retrieval to
            retrieve the first value of a multi-valued column, and to retrieve long data at
            offset 0 (zero).
            </param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRetrieveColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN*,System.Int32)">
            <summary>
            The JetRetrieveColumns function retrieves multiple column values
            from the current record in a single operation. An array of
            <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN"/> structures is used to
            describe the set of column values to be retrieved, and to describe
            output buffers for each column value to be retrieved.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve columns from.</param>
            <param name="retrievecolumns">
            An array of one or more JET_RETRIEVECOLUMN structures. Each
            structure includes descriptions of which column value to retrieve
            and where to store returned data.
            </param>
            <param name="numColumns">
            Number of structures in the array given by retrievecolumns.
            </param>
            <returns>
            An error or warning.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID[],System.Int32@,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN[]@,Microsoft.Isam.Esent.Interop.JET_PFNREALLOC,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit)">
            <summary>
            Efficiently retrieves a set of columns and their values from the
            current record of a cursor or the copy buffer of that cursor. The
            columns and values retrieved can be restricted by a list of
            column IDs, itagSequence numbers, and other characteristics. This
            column retrieval API is unique in that it returns information in
            dynamically allocated memory that is obtained using a
            user-provided realloc compatible callback. This new flexibility
            permits the efficient retrieval of column data with specific
            characteristics (such as size and multiplicity) that are unknown
            to the caller. This eliminates the need for the use of the discovery
            modes of JetRetrieveColumn to determine those
            characteristics in order to setup a final call to
            JetRetrieveColumn that will successfully retrieve
            the desired data.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve data from.</param>
            <param name="numColumnids">The numbers of JET_ENUMCOLUMNIDS.</param>
            <param name="columnids">
            An optional array of column IDs, each with an optional array of itagSequence
            numbers to enumerate.
            </param>
            <param name="numColumnValues">
            Returns the number of column values retrieved.
            </param>
            <param name="columnValues">
            Returns the enumerated column values.
            </param>
            <param name="allocator">
            Callback used to allocate memory.
            </param>
            <param name="allocatorContext">
            Context for the allocation callback.
            </param>
            <param name="maxDataSize">
            Sets a cap on the amount of data to return from a long text or long
            binary column. This parameter can be used to prevent the enumeration
            of an extremely large column value.
            </param>
            <param name="grbit">Retrieve options.</param>
            <returns>A warning, error or success.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit,System.Collections.Generic.IEnumerable{Microsoft.Isam.Esent.Interop.EnumeratedColumn}@)">
            <summary>
            Efficiently retrieves a set of columns and their values from the
            current record of a cursor or the copy buffer of that cursor.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to retrieve data from.</param>
            <param name="grbit">Enumerate options.</param>
            <param name="enumeratedColumns">The discovered columns and their values.</param>
            <returns>A warning or success.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetRecordSize(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE@,Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit)">
            <summary>
            Retrieves record size information from the desired location.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The cursor that will be used for the API call. The cursor must be
            positioned on a record, or have an update prepared.
            </param>
            <param name="recsize">Returns the size of the record.</param>
            <param name="grbit">Call options.</param>
            <returns>A warning, error or success.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Deletes the current record in a database table.
            </summary>
            <param name="sesid">The session that opened the cursor.</param>
            <param name="tableid">The cursor on a database table. The current row will be deleted.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)">
            <summary>
            Prepare a cursor for update.
            </summary>
            <param name="sesid">The session which is starting the update.</param>
            <param name="tableid">The cursor to start the update for.</param>
            <param name="prep">The type of update to prepare.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            The JetUpdate function performs an update operation including inserting a new row into
            a table or updating an existing row. Deleting a table row is performed by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session which started the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="bookmark">Returns the bookmark of the updated record. This can be null.</param>
            <param name="bookmarkSize">The size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
            <remarks>
            JetUpdate is the final step in performing an insert or an update. The update is begun by
            calling <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.IJetApi.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)"/> and then by calling
            JetSetColumn
            one or more times to set the record state. Finally, JetUpdate
            is called to complete the update operation. Indexes are updated only by JetUpdate or and not during JetSetColumn.
            </remarks>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetUpdate2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Server2003.UpdateGrbit)">
            <summary>
            The JetUpdate2 function performs an update operation including inserting a new row into
            a table or updating an existing row. Deleting a table row is performed by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session which started the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="bookmark">Returns the bookmark of the updated record. This can be null.</param>
            <param name="bookmarkSize">The size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
            <param name="grbit">Update options.</param>
            <remarks>
            JetUpdate is the final step in performing an insert or an update. The update is begun by
            calling <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)"/> and then by calling
            JetSetColumn one or more times to set the record state. Finally, JetUpdate
            is called to complete the update operation. Indexes are updated only by JetUpdate or and not during JetSetColumn.
            </remarks>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.SetColumnGrbit,Microsoft.Isam.Esent.Interop.JET_SETINFO)">
            <summary>
            The JetSetColumn function modifies a single column value in a modified record to be inserted or to
            update the current record. It can overwrite an existing value, add a new value to a sequence of
            values in a multi-valued column, remove a value from a sequence of values in a multi-valued column,
            or update all or part of a long value (a column of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>
            or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>).
            </summary>
            <remarks>
            The SetColumn methods provide datatype-specific overrides which may be more efficient.
            </remarks>
            <param name="sesid">The session which is performing the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="columnid">The columnid to set.</param>
            <param name="data">The data to set.</param>
            <param name="dataSize">The size of data to set.</param>
            <param name="grbit">SetColumn options.</param>
            <param name="setinfo">Used to specify itag or long-value offset.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Allows an application to set multiple column values in a single
            operation. An array of <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN"/> structures is
            used to describe the set of column values to be set, and to describe
            input buffers for each column value to be set.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to set the columns on.</param>
            <param name="setcolumns">
            An array of <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN"/> structures describing the
            data to set.
            </param>
            <param name="numColumns">
            Number of entries in the setcolumns parameter.
            </param>
            <returns>An error code or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetLock(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.GetLockGrbit)">
            <summary>
            Explicitly reserve the ability to update a row, write lock, or to explicitly prevent a row from
            being updated by any other session, read lock. Normally, row write locks are acquired implicitly as a
            result of updating rows. Read locks are usually not required because of record versioning. However,
            in some cases a transaction may desire to explicitly lock a row to enforce serialization, or to ensure
            that a subsequent operation will succeed.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to use. A lock will be acquired on the current record.</param>
            <param name="grbit">Lock options, use this to specify which type of lock to obtain.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetEscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.EscrowUpdateGrbit)">
            <summary>
            Performs an atomic addition operation on one column. This function allows
            multiple sessions to update the same record concurrently without conflicts.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The cursor to update.</param>
            <param name="columnid">
            The column to update. This must be an escrow updatable column.
            </param>
            <param name="delta">The buffer containing the addend.</param>
            <param name="deltaSize">The size of the addend.</param>
            <param name="previousValue">
            An output buffer that will recieve the current value of the column. This buffer
            can be null.
            </param>
            <param name="previousValueLength">The size of the previousValue buffer.</param>
            <param name="actualPreviousValueLength">Returns the actual size of the previousValue.</param>
            <param name="grbit">Escrow update options.</param>
            <returns>An error code if the operation fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)">
            <summary>
            Allows the application to configure the database engine to issue
            notifications to the application for specific events. These
            notifications are associated with a specific table and remain in
            effect only until the instance containing the table is shut down
            using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetTerm(Microsoft.Isam.Esent.Interop.JET_INSTANCE)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            A cursor opened on the table that the callback should be
            registered on.
            </param>
            <param name="cbtyp">
            The callback reasons for which the application wishes to receive notifications.
            </param>
            <param name="callback">The callback function.</param>
            <param name="context">A context that will be given to the callback.</param>
            <param name="callbackId">
            A handle that can later be used to cancel the registration of the given
            callback function using <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetUnregisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_HANDLE)"/>.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetUnregisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_HANDLE)">
            <summary>
            Configures the database engine to stop issuing notifications to the
            application as previously requested through
            <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)"/>.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            A cursor opened on the table that the callback should be
            registered on.
            </param>
            <param name="cbtyp">
            The callback reasons for which the application no longer wishes to receive notifications.
            </param>
            <param name="callbackId">
            The handle of the registered callback that was returned by <see cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)"/>.
            </param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDefragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.DefragGrbit)">
            <summary>
            Starts and stops database defragmentation tasks that improves data
            organization within a database.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="dbid">The database to be defragmented.</param>
            <param name="tableName">
            Under some options defragmentation is performed for the entire database described by the given 
            database ID, and other options (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>) require
            the name of the table to defragment.
            </param>
            <param name="passes">
            When starting an online defragmentation task, this parameter sets the maximum number of defragmentation
            passes. When stopping an online defragmentation task, this parameter is set to the number of passes
            performed. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="seconds">
            When starting an online defragmentation task, this parameter sets
            the maximum time for defragmentation. When stopping an online
            defragmentation task, this output buffer is set to the length of
            time used for defragmentation. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="grbit">Defragmentation options.</param>
            <returns>An error code.</returns>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.Defragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>.
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDefragment2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.JET_CALLBACK,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>.
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.Defragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.DefragGrbit)">
            <summary>
            Starts and stops database defragmentation tasks that improves data
            organization within a database.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="dbid">The database to be defragmented.</param>
            <param name="tableName">
            Under some options defragmentation is performed for the entire database described by the given 
            database ID, and other options (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>) require
            the name of the table to defragment.
            </param>
            <param name="grbit">Defragmentation options.</param>
            <returns>An error code.</returns>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDefragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>.
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDefragment2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.JET_CALLBACK,Microsoft.Isam.Esent.Interop.DefragGrbit)">
            <summary>
            Starts and stops database defragmentation tasks that improves data
            organization within a database.
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="dbid">The database to be defragmented.</param>
            <param name="tableName">
            Under some options defragmentation is performed for the entire database described by the given 
            database ID, and other options (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>) require
            the name of the table to defragment.
            </param>
            <param name="passes">
            When starting an online defragmentation task, this parameter sets the maximum number of defragmentation
            passes. When stopping an online defragmentation task, this parameter is set to the number of passes
            performed. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="seconds">
            When starting an online defragmentation task, this parameter sets
            the maximum time for defragmentation. When stopping an online
            defragmentation task, this output buffer is set to the length of
            time used for defragmentation. This is not honored in all modes (such as <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>).
            </param>
            <param name="callback">Callback function that defrag uses to report progress.</param>
            <param name="grbit">Defragmentation options.</param>
            <returns>An error code or warning.</returns>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetDefragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>.
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetIdle(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.IdleGrbit)">
            <summary>
            Performs idle cleanup tasks or checks the version store status in ESE.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="grbit">A combination of JetIdleGrbit flags.</param>
            <returns>An error code if the operation fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetConfigureProcessForCrashDump(Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit)">
            <summary>
            Crash dump options for Watson.
            </summary>
            <param name="grbit">Crash dump options.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetFreeBuffer(System.IntPtr)">
            <summary>
            Frees memory that was allocated by a database engine call.
            </summary>
            <param name="buffer">
            The buffer allocated by a call to the database engine.
            <see cref="F:System.IntPtr.Zero"/> is acceptable, and will be ignored.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.GetActualSize(System.UInt32)">
            <summary>
            Given the size returned by ESENT, get the size
            to return to the user.
            </summary>
            <param name="numBytesActual">The size returned by ESENT.</param>
            <returns>The bookmark size to return to the user.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CheckDataSize``1(System.Collections.Generic.ICollection{``0},System.Int32,System.String,System.Int32,System.String)">
            <summary>
            Make sure the data, dataOffset and dataSize arguments match.
            </summary>
            <param name="data">The data buffer.</param>
            <param name="dataOffset">The offset into the data.</param>
            <param name="offsetArgumentName">The name of the offset argument.</param>
            <param name="dataSize">The size of the data.</param>
            <param name="sizeArgumentName">The name of the size argument.</param>
            <typeparam name="T">The type of the data.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CheckDataSize``1(System.Collections.Generic.ICollection{``0},System.Int32,System.String)">
            <summary>
            Make sure the data and dataSize arguments match.
            </summary>
            <param name="data">The data buffer.</param>
            <param name="dataSize">The size of the data.</param>
            <param name="argumentName">The name of the size argument.</param>
            <typeparam name="T">The type of the data.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CheckNotNull(System.Object,System.String)">
            <summary>
            Make sure the given object isn't null. If it is
            then throw an ArgumentNullException.
            </summary>
            <param name="o">The object to check.</param>
            <param name="paramName">The name of the parameter.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CheckNotNegative(System.Int64,System.String)">
            <summary>
            Make sure the given integer isn't negative. If it is
            then throw an ArgumentOutOfRangeException.
            </summary>
            <param name="i">The integer to check.</param>
            <param name="paramName">The name of the parameter.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.UnsupportedApiException(System.String)">
            <summary>
            Used when an unsupported API method is called. This
            logs an error and returns an InvalidOperationException.
            </summary>
            <param name="method">The name of the method.</param>
            <returns>The exception to throw.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.TraceFunctionCall(System.String)">
            <summary>
            Trace a call to an ESENT function.
            </summary>
            <param name="function">The name of the function being called.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.Err(System.Int32)">
            <summary>
            Can be used to trap ESENT errors.
            </summary>
            <param name="err">The error being returned.</param>
            <returns>The error.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.TraceErr(System.Int32)">
            <summary>
            Trace an error generated by a call to ESENT.
            </summary>
            <param name="err">The error to trace.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.ConvertEnumColumnids(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID},System.Int32,Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNID*)">
            <summary>
            Convert managed JET_ENUMCOLUMNID objects to NATIVE_ENUMCOLUMNID
            structures.
            </summary>
            <param name="columnids">The columnids to convert.</param>
            <param name="numColumnids">The number of columnids to convert.</param>
            <param name="nativecolumnids">The array to store the converted columnids.</param>
            <returns>The total number of tag entries in the converted structures.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.ConvertEnumColumnidTags(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID},System.Int32,Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNID*,System.UInt32*)">
            <summary>
            Convert managed rgtagSequence to unmanaged rgtagSequence.
            </summary>
            <param name="columnids">The columnids to convert.</param>
            <param name="numColumnids">The number of columnids to covert.</param>
            <param name="nativecolumnids">The unmanaged columnids to add the tags to.</param>
            <param name="tags">
            Memory to use for converted rgtagSequence. This should be large enough to
            hold all columnids.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.ConvertEnumerateColumnsResult(Microsoft.Isam.Esent.Interop.JET_PFNREALLOC,System.IntPtr,System.UInt32,Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN*,System.Int32@,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN[]@)">
            <summary>
            Convert the native (unmanaged) results of JetEnumerateColumns to
            managed objects. This uses the allocator callback to free some
            memory as the data is converted.
            </summary>
            <param name="allocator">The allocator callback used.</param>
            <param name="allocatorContext">The allocator callback context.</param>
            <param name="numEnumColumn">Number of NATIVE_ENUMCOLUMN structures returned.</param>
            <param name="nativeenumcolumns">NATIVE_ENUMCOLUMN structures.</param>
            <param name="numColumnValues">Returns the number of converted JET_ENUMCOLUMN objects.</param>
            <param name="columnValues">Returns the convertd column values.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.GetNativecolumndefs(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_COLUMNDEF},System.Int32)">
            <summary>
            Make an array of native columndefs from JET_COLUMNDEFs.
            </summary>
            <param name="columns">Columndefs to convert.</param>
            <param name="numColumns">Number of columndefs to convert.</param>
            <returns>An array of native columndefs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.GetNativeConditionalColumns(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN},System.Boolean,Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection@)">
            <summary>
            Make native conditionalcolumn structures from the managed ones.
            </summary>
            <param name="conditionalColumns">The conditional columns to convert.</param>
            <param name="useUnicodeData">Wehether to convert the strings with UTF-16.</param>
            <param name="handles">The handle collection used to pin the data.</param>
            <returns>Pinned native versions of the conditional columns.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.GetNativeColumnCreates(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE},System.Boolean,Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection@)">
            <summary>
            Make native columncreate structures from the managed ones.
            </summary>
            <param name="managedColumnCreates">Column create structures to convert.</param>
            <param name="useUnicodeData">Wehether to convert the strings with UTF-16.</param>
            <param name="handles">The handle collection used to pin the data.</param>
            <returns>Pinned native versions of the column creates.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.GetNativeIndexCreates(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_INDEXCREATE},Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection@)">
            <summary>
            Make native indexcreate structures from the managed ones.
            Only supports Ascii data, since it could be used on XP.
            </summary>
            <param name="managedIndexCreates">Index create structures to convert.</param>
            <param name="handles">The handle collection used to pin the data.</param>
            <returns>Pinned native versions of the index creates.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.GetNativeIndexCreate1s(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_INDEXCREATE},Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection@)">
            <summary>
            Make native indexcreate structures from the managed ones.
            Only supports Unicode data, since it was introduced in Vista.
            </summary>
            <param name="managedIndexCreates">Index create structures to convert.</param>
            <param name="handles">The handle collection used to pin the data.</param>
            <returns>Pinned native versions of the index creates.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.GetNativeIndexCreate2s(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_INDEXCREATE},Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection@)">
            <summary>
            Make native indexcreate structures from the managed ones.
            Only supports Unicode data, since it was introduced in Win7.
            </summary>
            <param name="managedIndexCreates">Index create structures to convert.</param>
            <param name="handles">The handle collection used to pin the data.</param>
            <returns>Pinned native versions of the index creates.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.SetColumnids(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_COLUMNDEF},System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_COLUMNID},System.Collections.Generic.IList{System.UInt32},System.Int32)">
            <summary>
            Set managed columnids from unmanaged columnids. This also sets the columnids
            in the columndefs.
            </summary>
            <param name="columns">The column definitions.</param>
            <param name="columnids">The columnids to set.</param>
            <param name="nativecolumnids">The native columnids.</param>
            <param name="numColumns">The number of columnids to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CreateIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_INDEXCREATE},System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CreateIndexes1(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_INDEXCREATE},System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CreateIndexes2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_INDEXCREATE},System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CreateTableColumnIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Creates a table, adds columns, and indices on that table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to which to add the new table.</param>
            <param name="tablecreate">Object describing the table to create.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.ConvertInstanceInfosUnicode(System.UInt32,Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO*)">
            <summary>
            Convert native instance info structures to managed, treating the
            unmanaged strings as Unicode.
            </summary>
            <param name="nativeNumInstance">The number of native structures.</param>
            <param name="nativeInstanceInfos">
            A pointer to the native structures. This pointer will be freed with JetFreeBuffer.
            </param>
            <returns>
            An array of JET_INSTANCE_INFO structures created from the unmanaged.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.ConvertInstanceInfosAscii(System.UInt32,Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO*)">
            <summary>
            Convert native instance info structures to managed, treating the
            unmanaged string as Unicode.
            </summary>
            <param name="nativeNumInstance">The number of native structures.</param>
            <param name="nativeInstanceInfos">
            A pointer to the native structures. This pointer will be freed with JetFreeBuffer.
            </param>
            <returns>
            An array of JET_INSTANCE_INFO structures created from the unmanaged.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CheckSupportsServer2003Features(System.String)">
            <summary>
            Check that ESENT supports Server 2003 features. Throws an exception if Server 2003 features
            aren't supported.
            </summary>
            <param name="api">The API that is being called.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CheckSupportsVistaFeatures(System.String)">
            <summary>
            Check that ESENT supports Vista features. Throws an exception if Vista features
            aren't supported.
            </summary>
            <param name="api">The API that is being called.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CheckSupportsWindows7Features(System.String)">
            <summary>
            Check that ESENT supports Windows7 features. Throws an exception if Windows7 features
            aren't supported.
            </summary>
            <param name="api">The API that is being called.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CheckSupportsWindows8Features(System.String)">
            <summary>
            Check that ESENT supports Windows8 features. Throws an exception if Windows8 features
            aren't supported.
            </summary>
            <param name="api">The API that is being called.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CheckSupportsWindows10Features(System.String)">
            <summary>
            Check that ESENT supports Windows10 features. Throws an exception if Windows10 features
            aren't supported.
            </summary>
            <param name="api">The API that is being called.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CreateTableColumnIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Creates a table, adds columns, and indices on that table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to which to add the new table.</param>
            <param name="tablecreate">Object describing the table to create.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT@)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="operationContext">An operation context to set.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="operationContext">An operation context to set.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetThreadStats(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2@)">
            <summary>
            Retrieves performance information from the database engine for the
            current thread. Multiple calls can be used to collect statistics
            that reflect the activity of the database engine on this thread
            between those calls. 
            </summary>
            <param name="threadstats">
            Returns the thread statistics..
            </param>
            <returns>An error code if the operation fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetBeginTransaction3(Microsoft.Isam.Esent.Interop.JET_SESID,System.Int64,Microsoft.Isam.Esent.Interop.BeginTransactionGrbit)">
            <summary>
            Causes a session to enter a transaction or create a new save point in an existing
            transaction.
            </summary>
            <param name="sesid">The session to begin the transaction for.</param>
            <param name="userTransactionId">An optional identifier supplied by the user for identifying the transaction.</param>
            <param name="grbit">Transaction options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCommitTransaction2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.CommitTransactionGrbit,System.TimeSpan,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID@)">
            <summary>
            Commits the changes made to the state of the database during the current save point
            and migrates them to the previous save point. If the outermost save point is committed
            then the changes made during that save point will be committed to the state of the
            database and the session will exit the transaction.
            </summary>
            <param name="sesid">The session to commit the transaction for.</param>
            <param name="grbit">Commit options.</param>
            <param name="durableCommit">Duration to commit lazy transaction.</param>
            <param name="commitId">Commit-id associated with this commit record.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetErrorInfo(Microsoft.Isam.Esent.Interop.JET_err,Microsoft.Isam.Esent.Interop.Windows8.JET_ERRINFOBASIC@)">
            <summary>
            Gets extended information about an error.
            </summary>
            <param name="error">The error code about which to retrieve information.</param>
            <param name="errinfo">Information about the specified error code.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetResizeDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows8.ResizeDatabaseGrbit)">
            <summary>
            Resizes a currently open database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to grow.</param>
            <param name="desiredPages">The desired size of the database, in pages.</param>
            <param name="actualPages">The size of the database, in pages, after the call. </param>
            <param name="grbit">Resize options.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
            <remarks>
            <para>
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/> and <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetCreateIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/>
            are very similar, and appear to take the same arguments. The difference is in the
            implementation. JetCreateIndex2 uses LCIDs for Unicode indices (e.g. 1033), while
            JetCreateIndex4 uses Locale Names (e.g. "en-US" or "de-DE". LCIDs are older, and not as well
            supported in newer version of windows.
            </para>
            </remarks>
            <returns>An error code.</returns>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.CreateIndexGrbit,System.String,System.Int32,System.Int32)"/>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetOpenTemporaryTable2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="temporarytable">
            Description of the temporary table to create on input. After a
            successful call, the structure contains the handle to the temporary
            table and column identifications.
            </param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetCreateTableColumnIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Creates a table, adds columns, and indices on that table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to which to add the new table.</param>
            <param name="tablecreate">Object describing the table to create.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Int32@)">
            <summary>
            Gets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set, see
            <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/> and <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam"/>.</param>
            <param name="value">A 32-bit integer to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Gets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set, see
            <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/> and <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam"/>.</param>
            <param name="data">A byte array to retrieve.</param>
            <param name="length">AThe length of the data array.</param>
            <param name="actualDataSize">The actual size of the data field.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Int32)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="valueToSet">A 32-bit integer to set.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,System.Byte[],System.Int32)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="data">Data to set in this session parameter.</param>
            <param name="dataSize">Size of the data provided.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to use.</param>
            <param name="tablename">The name of the table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetGetTableIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to retrieve index information about.</param>
            <param name="indexname">The name of the index to retrieve information about.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetPrereadIndexRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_RANGE[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)">
            <summary>
            If the records with the specified key rangess are not in the buffer
            cache, then start asynchronous reads to bring the records into the
            database buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="indexRanges">The key ranges to preread.</param>
            <param name="rangeIndex">The index of the first key range in the array to read.</param>
            <param name="rangeCount">The maximum number of key ranges to preread.</param>
            <param name="rangesPreread">Returns the number of keys actually preread.</param>
            <param name="columnsPreread">List of column ids for long value columns to preread.</param>
            <param name="grbit">Preread options. Used to specify the direction of the preread.</param>
            <returns>
            An error if the call fails.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetPrereadKeyRanges(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[][],System.Int32[],System.Byte[][],System.Int32[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[],Microsoft.Isam.Esent.Interop.Windows8.PrereadIndexRangesGrbit)">
            <summary>
            If the records with the specified key ranges are not in the
            buffer cache then start asynchronous reads to bring the records
            into the database buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="keysStart">The start of key ranges to preread.</param>
            <param name="keyStartLengths">The lengths of the start keys to preread.</param>
            <param name="keysEnd">The end of key rangess to preread.</param>
            <param name="keyEndLengths">The lengths of the end keys to preread.</param>
            <param name="rangeIndex">The index of the first key range in the array to read.</param>
            <param name="rangeCount">The maximum number of key ranges to preread.</param>
            <param name="rangesPreread">Returns the number of keys actually preread.</param>
            <param name="columnsPreread">List of column ids for long value columns to preread.</param>
            <param name="grbit">Preread options. Used to specify the direction of the preread.</param>
            <returns>An error or warning.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.JetSetCursorFilter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Windows8.JET_INDEX_COLUMN[],Microsoft.Isam.Esent.Interop.Windows8.CursorFilterGrbit)">
            <summary>
            Set an array of simple filters for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)"/>
            </summary>
            <param name="sesid">The session to use for the call.</param>
            <param name="tableid">The cursor to position.</param>
            <param name="filters">Simple record filters.</param>
            <param name="grbit">Move options.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.GetNativeIndexCreate3s(System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_INDEXCREATE},Microsoft.Isam.Esent.Interop.Implementation.GCHandleCollection@)">
            <summary>
            Make native indexcreate structures from the managed ones.
            </summary>
            <param name="managedIndexCreates">Index create structures to convert.</param>
            <param name="handles">The handle collection used to pin the data.</param>
            <returns>Pinned native versions of the index creates.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CreateIndexes3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Collections.Generic.IList{Microsoft.Isam.Esent.Interop.JET_INDEXCREATE},System.Int32)">
            <summary>
            Creates indexes over data in an ESE database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to create the index on.</param>
            <param name="indexcreates">Array of objects describing the indexes to be created.</param>
            <param name="numIndexCreates">Number of index description objects.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.CreateTableColumnIndex4(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Creates a table, adds columns, and indices on that table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to which to add the new table.</param>
            <param name="tablecreate">Object describing the table to create.</param>
            <returns>An error if the call fails.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.ReportUnhandledException(System.Exception,System.String)">
            <summary>
            Reports the exception to a central authority.
            </summary>
            <param name="exception">An unhandled exception.</param>
            <param name="description">A string description of the scenario.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.DetermineCapabilities">
            <summary>
            Calculates the capabilities of the current Esent version.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.JetApi.GetVersionFromEsent">
            <summary>
            Create an instance and get the current version of Esent.
            </summary>
            <returns>The current version of Esent.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities">
            <summary>
            Describes the functionality exposed by an object which implements IJetApi.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities.SupportsServer2003Features">
            <summary>
            Gets or sets a value indicating whether Windows Server 2003 features
            (in the Interop.Server2003 namespace) are supported.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities.SupportsVistaFeatures">
            <summary>
            Gets or sets a value indicating whether Vista features (in the
            Interop.Vista namespace) are supported.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities.SupportsWindows7Features">
            <summary>
            Gets or sets a value indicating whether Win7 features (in the
            Interop.Windows7 namespace) are supported.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities.SupportsWindows8Features">
            <summary>
            Gets or sets a value indicating whether Win8 features (in the
            Interop.Windows8 namespace) are supported.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities.SupportsWindows81Features">
            <summary>
            Gets or sets a value indicating whether Win8.1 features (in the
            Interop.Windows81 namespace) are supported.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities.SupportsWindows10Features">
            <summary>
            Gets or sets a value indicating whether Win10 features (in the
            Interop.Windows10 namespace) are supported.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities.SupportsUnicodePaths">
            <summary>
            Gets or sets a value indicating whether unicode file paths are supported.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities.SupportsLargeKeys">
            <summary>
            Gets or sets a value indicating whether large (> 255 byte) keys are supported.
            The key size for an index can be specified in the <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE"/>
            object.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.JetCapabilities.ColumnsKeyMost">
            <summary>
            Gets or sets the maximum number of components in a sort or index key.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Implementation.NativeMethods">
            <summary>
            Native interop for functions in esent.dll.
            </summary>
            <summary>
            Native interop for Windows10 functions in ese.dll.
            </summary>
            <summary>
            Native interop for Windows8 functions in ese.dll.
            </summary>
            <summary>
            Configuration for functions in esent.dll.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Implementation.NativeMethods.EsentCharSet">
            <summary>
            The CharSet for the methods in the DLL.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Implementation.NativeMethods.#cctor">
            <summary>
            Initializes static members of the NativeMethods class.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Implementation.NativeMethods.Encoding">
            <summary>
            Gets encoding to be used when converting data to/from byte arrays.
            This should match the CharSet above.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Implementation.NativeMethods.EsentDll">
            <summary>
            The name of the DLL that the methods should be loaded from.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.GenericEnumerable`1">
            <summary>
            IEnumerable class that takes a delegate to create the enumerator it returns.
            </summary>
            <typeparam name="T">The type returned by the enumerator.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GenericEnumerable`1.enumeratorCreator">
            <summary>
            The delegate used to create the enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.GenericEnumerable`1.#ctor(Microsoft.Isam.Esent.Interop.GenericEnumerable{`0}.CreateEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.GenericEnumerable`1"/> class.
            </summary>
            <param name="enumeratorCreator">
            The enumerator creator.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.GenericEnumerable`1.CreateEnumerator">
            <summary>
            IEnumerator creating delegate.
            </summary>
            <returns>A new enumerator.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.GenericEnumerable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> 
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.GenericEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.IEnumerator"/>
            object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.CreateInstanceGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateInstance2(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,System.String,System.String,Microsoft.Isam.Esent.Interop.CreateInstanceGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateInstanceGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.InitGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetInit2(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,Microsoft.Isam.Esent.Interop.InitGrbit)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.RecoveryWithoutUndo"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.TruncateLogsAfterRecovery"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ReplayMissingMapEntryDB"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.LogStreamMustExist"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.ReplayIgnoreLostLogs"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Grbits.KeepDbAttachedAtEndOfRecovery"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.InitGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.TermGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetTerm2(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.TermGrbit)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.Dirty"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TermGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TermGrbit.Complete">
            <summary>
            Requests that the instance be shut down cleanly. Any optional
            cleanup work that would ordinarily be done in the background at
            run time is completed immediately.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TermGrbit.Abrupt">
            <summary>
            Requests that the instance be shut down as quickly as possible.
            Any optional work that would ordinarily be done in the
            background at run time is abandoned.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TermGrbit.StopBackup">
            <summary>
            Interrupts and fails any on-going backup.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.EnableCreateDbBackgroundMaintenance"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit.OverwriteExisting">
            <summary>
            By default, if JetCreateDatabase is called and the database already exists,
            the Api call will fail and the original database will not be overwritten.
            OverwriteExisting changes this behavior, and the old database
            will be overwritten with a new one.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateDatabaseGrbit.RecoveryOff">
            <summary>
            Turns off logging. Setting this bit loses the ability to replay log files
            and recover the database to a consistent usable state after a crash.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetDetachDatabase2(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit.ForceDetach">
            <summary>
            If <see cref="F:Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit.ForceDetach"/> is used, <see cref="T:Microsoft.Isam.Esent.Interop.EsentForceDetachNotAllowedException"/> will be returned.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit.ForceClose">
            <summary>
            <see cref="F:Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit.ForceClose"/> is no longer used.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit.ForceCloseAndDetach">
            <summary>
            If <see cref="F:Microsoft.Isam.Esent.Interop.DetachDatabaseGrbit.ForceCloseAndDetach"/> is used, <see cref="T:Microsoft.Isam.Esent.Interop.EsentForceDetachNotAllowedException"/> will be returned.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.DeleteUnicodeIndexes"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.EnableAttachDbBackgroundMaintenance"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Grbits.PurgeCacheOnAttach"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit.ReadOnly">
            <summary>
             Prevents modifications to the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit.DeleteCorruptIndexes">
            <summary>
            If JET_paramEnableIndexChecking has been set, all indexes over Unicode
            data will be deleted.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit.ReadOnly">
            <summary>
            Prevents modifications to the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit.Exclusive">
            <summary>
            Allows only a single session to attach a database.
            Normally, several sessions can open a database.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.CloseDatabaseGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCloseDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.CloseDatabaseGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CloseDatabaseGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.CompactGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCompact(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS,Microsoft.Isam.Esent.Interop.JET_CONVERT,Microsoft.Isam.Esent.Interop.CompactGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CompactGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CompactGrbit.Stats">
            <summary>
            Causes JetCompact to dump statistics on the source database to a file
             named DFRGINFO.TXT. Statistics include the name of each table in
            source database, number of rows in each table, total size in bytes of
            all rows in each table, total size in bytes of all columns of type
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/> or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>
            that were large enough to be stored separate from the record, number
            of clustered index leaf pages, and the number of long value leaf pages.
            In addition, summary statistics including the size of the source database,
            destination database, time required for database compaction, temporary
            database space are all dumped as well.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CompactGrbit.Repair">
            <summary>
            Used when the source database is known to be corrupt. It enables a
            whole set of new behaviors intended to salvage as much data as
            possible from the source database. JetCompact with this option set
            may return <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.Success"/> but not copy all of the data
            created in the source database. Data that was in damaged portions of
            the source database will be skipped.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SnapshotFreezeGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotFreeze(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@,Microsoft.Isam.Esent.Interop.SnapshotFreezeGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SnapshotFreezeGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SnapshotPrepareGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotPrepare(Microsoft.Isam.Esent.Interop.JET_OSSNAPID@,Microsoft.Isam.Esent.Interop.SnapshotPrepareGrbit)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ContinueAfterThaw"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.ExplicitPrepare"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SnapshotPrepareGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SnapshotPrepareGrbit.IncrementalSnapshot">
            <summary>
            Only logfiles will be taken.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SnapshotPrepareGrbit.CopySnapshot">
            <summary>
            A copy snapshot (normal or incremental) with no log truncation.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SnapshotThawGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SnapshotThawGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.BackupGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,Microsoft.Isam.Esent.Interop.BackupGrbit,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BackupGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BackupGrbit.Incremental">
            <summary>
            Creates an incremental backup as opposed to a full backup. This
            means that only the log files created since the last full or
            incremental backup will be backed up.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BackupGrbit.Atomic">
            <summary>
            Creates a full backup of the database. This allows the preservation
            of an existing backup in the same directory if the new backup fails.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBeginExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BeginExternalBackupGrbit.Incremental">
            <summary>
            Creates an incremental backup as opposed to a full backup. This
            means that only the log files since the last full or incremental
            backup will be backed up.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EndExternalBackupGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetEndExternalBackupInstance(Microsoft.Isam.Esent.Interop.JET_INSTANCE)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.TruncateDone"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EndExternalBackupGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EndExternalBackupGrbit.Normal">
            <summary>
            The client application finished the backup completely, and is ending normally.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EndExternalBackupGrbit.Abort">
            <summary>
            The client application is aborting the backup.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.BeginTransactionGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBeginTransaction2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.BeginTransactionGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BeginTransactionGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.BeginTransactionGrbit.ReadOnly">
            <summary>
            The transaction will not modify the database. If an update is attempted,
            that operation will fail with <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.TransReadOnly"/>. This
            option is ignored unless it is requested when the given session is not
            already in a transaction.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.CommitTransactionGrbit">
            <summary>
            Options for JetCommitTransaction.
            </summary>
            <seealso cref = "F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.WaitAllLevel0Commit"/>
            <seealso cref = "F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.ForceNewLog"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CommitTransactionGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CommitTransactionGrbit.LazyFlush">
            <summary>
            The transaction is committed normally but this Api does not wait for
            the transaction to be flushed to the transaction log file before returning
            to the caller. This drastically reduces the duration of a commit operation
            at the cost of durability. Any transaction that is not flushed to the log
            before a crash will be automatically aborted during crash recovery during
            the next call to JetInit. If <see cref="F:Microsoft.Isam.Esent.Interop.CommitTransactionGrbit.WaitLastLevel0Commit"/> or <see cref="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.WaitAllLevel0Commit"/>
            are specified, this option is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CommitTransactionGrbit.WaitLastLevel0Commit">
            <summary>
             If the session has previously committed any transactions and they have not yet
             been flushed to the transaction log file, they should be flushed immediately.
             This Api will wait until the transactions have been flushed before returning
             to the caller. This is useful if the application has previously committed several
             transactions using JET_bitCommitLazyFlush and now wants to flush all of them to disk.
            </summary>
            <remarks>
            This option may be used even if the session is not currently in a transaction.
            This option cannot be used in combination with any other option.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.RollbackTransactionGrbit">
            <summary>
            Options for JetRollbackTransaction.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RollbackTransactionGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RollbackTransactionGrbit.RollbackAll">
            <summary>
            This option requests that all changes made to the state of the
            database during all save points be undone. As a result, the
            session will exit the transaction.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EndSessionGrbit">
            <summary>
            Options for JetEndSession.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EndSessionGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.OpenTableGrbit">
            <summary>
            Options for JetOpenTable.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.DenyWrite">
            <summary>
            This table cannot be opened for write access by another session.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.DenyRead">
            <summary>
            This table cannot be opened for read access by another session.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.ReadOnly">
            <summary>
            Request read-only access to the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.Updatable">
            <summary>
            Request write access to the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.PermitDDL">
            <summary>
            Allow DDL modifications to a table flagged as FixedDDL. This option
            must be used with DenyRead.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.NoCache">
            <summary>
            Do not cache pages for this table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.Preread">
            <summary>
            Provides a hint that the table is probably not in the buffer cache, and
            that pre-reading may be beneficial to performance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.Sequential">
            <summary>
            Assume a sequential access pattern and prefetch database pages.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass1">
            <summary>
            Table belongs to stats class 1.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass2">
            <summary>
            Table belongs to stats class 2.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass3">
            <summary>
            Table belongs to stats class 3.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass4">
            <summary>
            Table belongs to stats class 4.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass5">
            <summary>
            Table belongs to stats class 5.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass6">
            <summary>
            Table belongs to stats class 6.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass7">
            <summary>
            Table belongs to stats class 7.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass8">
            <summary>
            Table belongs to stats class 8.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass9">
            <summary>
            Table belongs to stats class 9.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass10">
            <summary>
            Table belongs to stats class 10.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass11">
            <summary>
            Table belongs to stats class 11.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass12">
            <summary>
            Table belongs to stats class 12.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass13">
            <summary>
            Table belongs to stats class 13.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass14">
            <summary>
            Table belongs to stats class 14.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.OpenTableGrbit.TableClass15">
            <summary>
            Table belongs to stats class 15.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.DupCursorGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetDupCursor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.DupCursorGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DupCursorGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.LsGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.LsGrbit)"/> and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS@,Microsoft.Isam.Esent.Interop.LsGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.LsGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.LsGrbit.Reset">
            <summary>
            The context handle for the chosen object should be reset to JET_LSNil.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.LsGrbit.Cursor">
            <summary>
            Specifies the context handle should be associated with the given cursor.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.LsGrbit.Table">
            <summary>
            Specifies that the context handle should be associated with the
            table associated with the given cursor. It is illegal to use this
            option with <see cref="F:Microsoft.Isam.Esent.Interop.LsGrbit.Cursor"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SetColumnGrbit">
            <summary>
            Options for the <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Int32,Microsoft.Isam.Esent.Interop.SetColumnGrbit,Microsoft.Isam.Esent.Interop.JET_SETINFO)"/>
            and its associated overloads.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.Compressed"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.Uncompressed"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.AppendLV">
            <summary>
            This option is used to append data to a column of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>
            or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>. The same behavior can be achieved by determining
            the size of the existing long value and specifying ibLongValue in psetinfo.
            However, its simpler to use this grbit since knowing the size of the existing
            column value is not necessary.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.OverwriteLV">
            <summary>
            This option is used replace the existing long value with the newly provided
            data. When this option is used, it is as though the existing long value has
            been set to 0 (zero) length prior to setting the new data.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.RevertToDefaultValue">
            <summary>
            This option is only applicable for tagged, sparse or multi-valued columns.
            It causes the column to return the default column value on subsequent retrieve
            column operations. All existing column values are removed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.SeparateLV">
            <summary>
            This option is used to force a long value, columns of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>
            or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>, to be stored separately from the remainder of record
            data. This occurs normally when the size of the long value prevents it from being
            stored with remaining record data. However, this option can be used to force the
            long value to be stored separately. Note that long values four bytes in size
            of smaller cannot be forced to be separate. In such cases, the option is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.SizeLV">
            <summary>
            This option is used to interpret the input buffer as a integer number of bytes
            to set as the length of the long value described by the given columnid and if
            provided, the sequence number in psetinfo->itagSequence. If the size given is
            larger than the existing column value, the column will be extended with 0s.
            If the size is smaller than the existing column value then the value will be
            truncated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.UniqueMultiValues">
            <summary>
            This option is used to enforce that all values in a multi-valued column are
            distinct. This option compares the source column data, without any
            transformations, to other existing column values and an error is returned
            if a duplicate is found. If this option is given, then AppendLV, OverwriteLV
            and SizeLV cannot also be given.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.UniqueNormalizedMultiValues">
            <summary>
            This option is used to enforce that all values in a multi-valued column are
            distinct. This option compares the key normalized transformation of column
            data, to other similarly transformed existing column values and an error is
            returned if a duplicate is found. If this option is given, then AppendLV,
            OverwriteLV and SizeLV cannot also be given.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.ZeroLength">
            <summary>
            This option is used to set a value to zero length. Normally, a column value
            is set to NULL by passing a cbMax of 0 (zero). However, for some types, like
            JET_coltyp.Text, a column value can be 0 (zero) length instead of NULL, and
            this option is used to differentiate between NULL and 0 (zero) length.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnGrbit.IntrinsicLV">
            <summary>
            Try to store long-value columns in the record, even if they exceed the default
            separation size.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit">
            <summary>
            Options for JetRetrieveColumn.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit.RetrieveCopy">
            <summary>
             This flag causes retrieve column to retrieve the modified value instead of
             the original value. If the value has not been modified, then the original
             value is retrieved. In this way, a value that has not yet been inserted or
             updated may be retrieved during the operation of inserting or updating a record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit.RetrieveFromIndex">
            <summary>
            This option is used to retrieve column values from the index, if possible,
            without accessing the record. In this way, unnecessary loading of records
            can be avoided when needed data is available from index entries themselves.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit.RetrieveFromPrimaryBookmark">
            <summary>
            This option is used to retrieve column values from the index bookmark,
            and may differ from the index value when a column appears both in the
            primary index and the current index. This option should not be specified
            if the current index is the clustered, or primary, index. This bit cannot
            be set if RetrieveFromIndex is also set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit.RetrieveTag">
            <summary>
            This option is used to retrieve the sequence number of a multi-valued
            column value in JET_RETINFO.itagSequence. Retrieving the sequence number
            can be a costly operation and should only be done if necessary.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit.RetrieveNull">
            <summary>
            This option is used to retrieve multi-valued column NULL values. If
            this option is not specified, multi-valued column NULL values will
            automatically be skipped.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit.RetrieveIgnoreDefault">
            <summary>
            This option affects only multi-valued columns and causes a NULL
            value to be returned when the requested sequence number is 1 and
            there are no set values for the column in the record.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit,System.Collections.Generic.IEnumerable{Microsoft.Isam.Esent.Interop.EnumeratedColumn}@)"/>
            and its associated overloads.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.EnumerateIgnoreUserDefinedDefault"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.EnumerateInRecordOnly"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit.EnumerateCompressOutput">
            <summary>
            When enumerating column values, all columns for which we are retrieving
            all values and that have only one non-NULL column value may be returned
            in a compressed format. The status for such columns will be set to
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/> and the size of the column value
            and the memory containing the column value will be returned directly in
            the <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN"/> structure. It is not guaranteed that
            all eligible columns are compressed in this manner. See
            <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN"/> for more information.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit.EnumerateCopy">
            <summary>
            This option indicates that the modified column values of the record
            should be enumerated rather than the original column values. If a
            column value has not been modified, the original column value is
            enumerated. In this way, a column value that has not yet been inserted
            or updated may be enumerated when inserting or updating a record.
            </summary>
            <remarks>
            This option is identical to <see cref="F:Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit.RetrieveCopy"/>.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit.EnumerateIgnoreDefault">
            <summary>
            If a given column is not present in the record then no column value
            will be returned. Ordinarily, the default value for the column,
            if any, would be returned in this case. It is guaranteed that if the
            column is set to a value different than the default value then that
            different value will be returned (that is, if a column with a
            default value is explicitly set to NULL then a NULL will be returned
            as the value for that column). Even if this option is requested, it
            is still possible to see a column value that happens to be equal to
            the default value. No effort is made to remove column values that
            match their default values.
            It is important to remember that this option affects the output of
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit,System.Collections.Generic.IEnumerable{Microsoft.Isam.Esent.Interop.EnumeratedColumn}@)"/>
            and its associated overloads when used with
            <see cref="F:Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit.EnumeratePresenceOnly"/> or
            <see cref="F:Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit.EnumerateTaggedOnly"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit.EnumeratePresenceOnly">
            <summary>
            If a non-NULL value exists for the requested column or column value
            then the associated data is not returned. Instead, the associated
            status for that column or column value will be set to
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnPresent"/>. If the column or column value
            is NULL then <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnNull"/> will be returned as usual.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit.EnumerateTaggedOnly">
            <summary>
            When enumerating all column values in the record (for example,that is
            when numColumnids is zero), only tagged column values will be returned.
            This option is not allowed when enumerating a specific array of column IDs.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetGetRecordSize(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE@,Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit.InCopyBuffer">
            <summary>
            Retrieve the size of the record that is in the copy buffer prepared
            or update. Otherwise, the tableid must be positioned on a record,
            and that record will be used.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit.RunningTotal">
            <summary>
            The JET_RECSIZE is not zeroed before filling the contents, effectively
            acting as an accumulation of the statistics for multiple records visited
            or updated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit.Local">
            <summary>
            Ignore non-intrinsic Long Values. Only the local record on the page
            will be used.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.GetSecondaryIndexBookmarkGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.GetSecondaryIndexBookmarkGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GetSecondaryIndexBookmarkGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGotoSecondaryIndexBookmark(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GotoSecondaryIndexBookmarkGrbit.BookmarkPermitVirtualCurrency">
            <summary>
            In the event that the index entry can no longer be found, the cursor
            will be left positioned where that index entry was previously found.
            The operation will still fail with JET_errRecordDeleted; however,
            it will be possible to move to the next or previous index entry
            relative to the index entry that is now missing.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.MoveGrbit">
            <summary>
            Options for JetMove.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MoveGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MoveGrbit.MoveKeyNE">
            <summary>
            Moves the cursor forward or backward by the number of index entries
            required to skip the requested number of index key values encountered
            in the index. This has the effect of collapsing index entries with
            duplicate key values into a single index entry.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.MakeKeyGrbit">
            <summary>
            Options for JetMakeKey.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.NewKey">
            <summary>
            A new search key should be constructed. Any previously existing search
            key is discarded.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.NormalizedKey">
            <summary>
            When this option is specified, all other options are ignored, any
            previously existing search key is discarded, and the contents of the
            input buffer are loaded as the new search key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.KeyDataZeroLength">
            <summary>
            If the size of the input buffer is zero and the current key column
            is a variable length column, this option indicates that the input
            buffer contains a zero length value. Otherwise, an input buffer size
            of zero would indicate a NULL value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.StrLimit">
            <summary>
            This option indicates that the search key should be constructed
            such that any key columns that come after the current key column
            should be considered to be wildcards.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.SubStrLimit">
            <summary>
            This option indicates that the search key should be constructed
            such that the current key column is considered to be a prefix
            wildcard and that any key columns that come after the current
            key column should be considered to be wildcards.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.FullColumnStartLimit">
            <summary>
            The search key should be constructed such that any key columns
            that come after the current key column should be considered to
            be wildcards.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.FullColumnEndLimit">
            <summary>
            The search key should be constructed in such a way that any key
            columns that come after the current key column are considered to
            be wildcards.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.PartialColumnStartLimit">
            <summary>
            The search key should be constructed such that the current key
            column is considered to be a prefix wildcard and that any key
            columns that come after the current key column should be considered
            to be wildcards.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.PartialColumnEndLimit">
            <summary>
            The search key should be constructed such that the current key
            column is considered to be a prefix wildcard and that any key
            columns that come after the current key column should be considered
            to be wildcards.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.RetrieveKeyGrbit">
            <summary>
            Options for JetRetrieveKey.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RetrieveKeyGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RetrieveKeyGrbit.RetrieveCopy">
            <summary>
            Retrieve the currently constructed key.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SeekGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSeek(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SeekGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SeekGrbit.SeekEQ">
            <summary>
            The cursor will be positioned at the index entry closest to the
            start of the index that exactly matches the search key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SeekGrbit.SeekLT">
            <summary>
            The cursor will be positioned at the index entry closest to the
            end of the index that is less than an index entry that would
            exactly match the search criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SeekGrbit.SeekLE">
            <summary>
            The cursor will be positioned at the index entry closest to the
            end of the index that is less than or equal to an index entry
            that would exactly match the search criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SeekGrbit.SeekGE">
            <summary>
            The cursor will be positioned at the index entry closest to the
            start of the index that is greater than or equal to an index
            entry that would exactly match the search criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SeekGrbit.SeekGT">
            <summary>
            The cursor will be positioned at the index entry closest to the
            start of the index that is greater than an index entry that
            would exactly match the search criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SeekGrbit.SetIndexRange">
            <summary>
            An index range will automatically be setup for all keys that
            exactly match the search key.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetIndexRange(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit.RangeInclusive">
            <summary>
            This option indicates that the limit of the index range is inclusive.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit.RangeUpperLimit">
            <summary>
            The search key in the cursor represents the search criteria for the
            index entry closest to the end of the index that will match the index
            range.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit.RangeInstantDuration">
            <summary>
            The index range should be removed as soon as it has been established.
            This is useful for testing for the existence of index entries that
            match the search criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetIndexRangeGrbit.RangeRemove">
            <summary>
            Cancel and existing index range.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IndexRangeGrbit">
            <summary>
            Options for the <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexRangeGrbit.RecordInIndex">
            <summary>
            Records in the cursors indexrange should be included in the output.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IntersectIndexesGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetIntersectIndexes(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_INDEXRANGE[],System.Int32,Microsoft.Isam.Esent.Interop.JET_RECORDLIST@,Microsoft.Isam.Esent.Interop.IntersectIndexesGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IntersectIndexesGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetCurrentIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit)"/> and
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetCurrentIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit,System.Int32)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.None">
            <summary>
            Default options. This is the same as <see cref="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.MoveFirst"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.MoveFirst">
            <summary>
            Indicates that the cursor should be positioned on the first entry of
            the specified index. If the current index is being selected then this
            option is ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetCurrentIndexGrbit.NoMove">
            <summary>
            Indicates that the cursor should be positioned on the index entry
            of the new index that corresponds to the record associated with the
            index entry at the current position of the cursor on the old index.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SetTableSequentialGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.SetTableSequentialGrbit)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.Backward"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetTableSequentialGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ResetTableSequentialGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetResetTableSequential(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ResetTableSequentialGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ResetTableSequentialGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.GetLockGrbit">
            <summary>
            Options for JetGetLock.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GetLockGrbit.Read">
            <summary>
            Acquire a read lock on the current record. Read locks are incompatible with
            write locks already held by other sessions but are compatible with read locks
            held by other sessions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.GetLockGrbit.Write">
            <summary>
             Acquire a write lock on the current record. Write locks are not compatible
             with write or read locks held by other sessions but are compatible with
             read locks held by the same session.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EscrowUpdateGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetEscrowUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.EscrowUpdateGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EscrowUpdateGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EscrowUpdateGrbit.NoRollback">
            <summary>
            Even if the session performing the escrow update has its transaction rollback
            this update will not be undone. As the log records may not be flushed to disk,
            recent escrow updates done with this flag may be lost if there is a crash.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ColumndefGrbit">
            <summary>
            Options for the <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF"/> structure.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.ColumnDeleteOnZero"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.ColumnCompressed"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnFixed">
            <summary>
            The column will be fixed. It will always use the same amount of space in a row,
            regardless of how much data is being stored in the column. ColumnFixed
            cannot be used with ColumnTagged. This bit cannot be used with long values
            (that is JET_coltyp.LongText and JET_coltyp.LongBinary).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnTagged">
            <summary>
             The column will be tagged. Tagged columns do not take up any space in the database
             if they do not contain data. This bit cannot be used with ColumnFixed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnNotNULL">
            <summary>
            The column must never be set to a NULL value. On Windows XP this can only be applied to
            fixed columns (bit, byte, integer, etc).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnVersion">
            <summary>
            The column is a version column that specifies the version of the row. The value of
            this column starts at zero and will be automatically incremented for each update on
            the row. This option can only be applied to <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/> columns. This option cannot
            be used with <see cref="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnAutoincrement"/>, <see cref="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnEscrowUpdate"/>, or <see cref="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnTagged"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnAutoincrement">
            <summary>
            The column will automatically be incremented. The number is an increasing number, and
            is guaranteed to be unique within a table. The numbers, however, might not be continuous.
            For example, if five rows are inserted into a table, the "autoincrement" column could
            contain the values { 1, 2, 6, 7, 8 }. This bit can only be used on columns of type
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/> or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Currency"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnUpdatable">
            <summary>
            The column can be updated. This is NOT a valid grbit to set on input to any API. It is
            returned as part of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF"/> structure's grbit member, as an
            output from Api.JetGetColumnInfo.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnMultiValued">
            <summary>
            The column can be multi-valued.
            A multi-valued column can have zero, one, or more values
            associated with it. The various values in a multi-valued column are identified by a number
            called the itagSequence member, which belongs to various structures, including:
            <see cref="T:Microsoft.Isam.Esent.Interop.JET_RETINFO"/>, <see cref="T:Microsoft.Isam.Esent.Interop.JET_SETINFO"/>, <see cref="T:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN"/>, <see cref="T:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN"/>, and <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE"/>.
            Multi-valued columns must be tagged columns; that is, they cannot be fixed-length or
            variable-length columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnEscrowUpdate">
            <summary>
             Specifies that a column is an escrow update column. An escrow update column can be
             updated concurrently by different sessions with JetEscrowUpdate and will maintain
             transactional consistency. An escrow update column must also meet the following conditions:
             An escrow update column can be created only when the table is empty.
             An escrow update column must be of type JET_coltypLong.
             An escrow update column must have a default value.
             ColumnEscrowUpdate cannot be used in conjunction with <see cref="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnTagged"/>,
             <see cref="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnVersion"/>, or <see cref="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnAutoincrement"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnUnversioned">
            <summary>
            The column will be created in an without version information. This means that other
            transactions that attempt to add a column with the same name will fail. This bit
            is only useful with JetAddColumn. It cannot be used within a transaction.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnMaybeNull">
            <summary>
            In doing an outer join, the retrieve column operation might not have a match
            from the inner table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnFinalize">
            <summary>
            DEPRECATED / Not Fully Implemented: use ColumnDeleteOnZero <see cref="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.ColumnDeleteOnZero"/> instead.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnUserDefinedDefault">
            <summary>
            The default value for a column will be provided by a callback function. A column that
            has a user-defined default must be a tagged column. Specifying <see cref="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnUserDefinedDefault"/>
            means that pvDefault must point to a JET_USERDEFINEDDEFAULT structure, and cbDefault must be
            set to sizeof( JET_USERDEFINEDDEFAULT ).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.TTKey">
            <summary>
            The column will be a key column for the temporary table. The order
            of the column definitions with this option specified in the input
            array will determine the precedence of each key column for the
            temporary table. The first column definition in the array that
            has this option set will be the most significant key column and
            so on. If more key columns are requested than can be supported
            by the database engine then this option is ignored for the
            unsupportable key columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.TTDescending">
            <summary>
            The sort order of the key column for the temporary table should
            be descending rather than ascending. If this option is specified
             without <see cref="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.TTKey"/> then this option is ignored.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.CreateTableColumnIndexGrbit">
            <summary>
            Options for the <see cref="T:Microsoft.Isam.Esent.Interop.JET_TABLECREATE"/> parameter used by
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateTableColumnIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Grbits.TableCreateImmutableStructure"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateTableColumnIndexGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateTableColumnIndexGrbit.FixedDDL">
            <summary>
            The DDL is fixed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateTableColumnIndexGrbit.TemplateTable">
            <summary>
            The DDL is inheritable. Implies FixedDDL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateTableColumnIndexGrbit.NoFixedVarColumnsInDerivedTables">
            <summary>
            Used in conjunction with TemplateTable.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.CreateIndexGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.CreateIndexGrbit,System.String,System.Int32,System.Int32)"/> and <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexCrossProduct"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexDisallowTruncation"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexNestedTable"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexUnicode"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexKeyMost"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Grbits.IndexDotNetGuid"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Grbits.IndexCreateImmutableStructure"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexUnique">
            <summary>
            Duplicate index entries (keys) are disallowed. This is enforced when JetUpdate is called,
            not when JetSetColumn is called.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexPrimary">
            <summary>
            The index is a primary (clustered) index. Every table must have exactly one primary index.
            If no primary index is explicitly defined over a table, then the database engine will
            create its own primary index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexDisallowNull">
            <summary>
            None of the columns over which the index is created may contain a NULL value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexIgnoreNull">
            <summary>
            Do not add an index entry for a row if all of the columns being indexed are NULL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexIgnoreAnyNull">
            <summary>
            Do not add an index entry for a row if any of the columns being indexed are NULL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexIgnoreFirstNull">
            <summary>
            Do not add an index entry for a row if the first column being indexed is NULL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexLazyFlush">
            <summary>
            Specifies that the index operations will be logged lazily. JET_bitIndexLazyFlush does not
            affect the laziness of data updates. If the indexing operations is interrupted by process
            termination, Soft Recovery will still be able to able to get the database to a consistent
            state, but the index may not be present.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexEmpty">
            <summary>
            Do not attempt to build the index, because all entries would evaluate to NULL. grbit MUST
            also specify JET_bitIgnoreAnyNull when JET_bitIndexEmpty is passed. This is a performance
            enhancement. For example if a new column is added to a table, then an index is created over
            this newly added column, all of the records in the table would be scanned even though they
            would never get added to the index anyway. Specifying JET_bitIndexEmpty skips the scanning
            of the table, which could potentially take a long time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexUnversioned">
            <summary>
            Causes index creation to be visible to other transactions. Normally a session in a
            transaction will not be able to see an index creation operation in another session. This
            flag can be useful if another transaction is likely to create the same index, so that the
            second index-create will simply fail instead of potentially causing many unnecessary database
            operations. The second transaction may not be able to use the index immediately. The index
            creation operation needs to complete before it is usable. The session must not currently be in
            a transaction to create an index without version information.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.CreateIndexGrbit.IndexSortNullsHigh">
            <summary>
            Specifying this flag causes NULL values to be sorted after data for all columns in the index.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IndexKeyGrbit">
            <summary>
            Key definition grbits. Used when retrieving information about an index, contained
            in the column specified in <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidgrbitColumn"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexKeyGrbit.Ascending">
            <summary>
            Key segment is ascending.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexKeyGrbit.Descending">
            <summary>
            Key segment is descending.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ConditionalColumnGrbit">
            <summary>
            Options for the <seealso cref="T:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN"/> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ConditionalColumnGrbit.ColumnMustBeNull">
            <summary>
            The column must be null for an index entry to appear in the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ConditionalColumnGrbit.ColumnMustBeNonNull">
            <summary>
            The column must be non-null for an index entry to appear in the index.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.TempTableGrbit">
            <summary>
            Options for temporary table creation, with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>,
            Api.JetOpenTempTable2, and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.ForwardOnly"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.IntrinsicLVsOnly"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Grbits.TTDotNetGuid"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.Indexed">
            <summary>
            This option requests that the temporary table be flexible enough to
            permit the use of JetSeek to lookup records by index key. If this
            functionality it not required then it is best to not request it. If this
            functionality is not requested then the temporary table manager may be
            able to choose a strategy for managing the temporary table that will
            result in improved performance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.Unique">
            <summary>
            This option requests that records with duplicate index keys be removed
            from the final set of records in the temporary table.
            Prior to Windows Server 2003, the database engine always assumed this
            option to be in effect due to the fact that all clustered indexes must
            also be a primary key and thus must be unique. As of Windows Server
            2003, it is now possible to create a temporary table that does NOT
            remove duplicates when the <see cref="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.ForwardOnly"/>
            option is also specified.
            It is not possible to know which duplicate will win and which duplicates
            will be discarded in general. However, when the
            <see cref="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.ErrorOnDuplicateInsertion"/> option is requested then the first
            record with a given index key to be inserted into the temporary table
            will always win.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.Updatable">
            <summary>
            This option requests that the temporary table be flexible enough to
            allow records that have previously been inserted to be subsequently
            changed. If this functionality it not required then it is best to not
            request it. If this functionality is not requested then the temporary
            table manager may be able to choose a strategy for managing the
            temporary table that will result in improved performance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.Scrollable">
            <summary>
            This option requests that the temporary table be flexible enough to
            allow records to be scanned in arbitrary order and direction using
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetMove(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.MoveGrbit)"/>.
            If this functionality it not required then it is best to not
            request it. If this functionality is not requested then the temporary
            table manager may be able to choose a strategy for managing the
            temporary table that will result in improved performance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.SortNullsHigh">
            <summary>
            This option requests that NULL key column values sort closer
            to the end of the index than non-NULL key column values.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.ForceMaterialization">
            <summary>
            This option forces the temporary table manager to abandon
            any attempt to choose a clever strategy for managing the
            temporary table that will result in enhanced performance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.ErrorOnDuplicateInsertion">
            <summary>
            This option requests that any attempt to insert a record with the same
            index key as a previously inserted record will immediately fail with
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.KeyDuplicate"/>. If this option is not requested then a duplicate
            may be detected immediately and fail or may be silently removed later
            depending on the strategy chosen by the database engine to implement the
            temporary table based on the requested functionality. If this
            functionality it not required then it is best to not request it. If this
            functionality is not requested then the temporary table manager may be
            able to choose a strategy for managing the temporary table that will
            result in improved performance.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.DeleteColumnGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetDeleteColumn2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,Microsoft.Isam.Esent.Interop.DeleteColumnGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DeleteColumnGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DeleteColumnGrbit.IgnoreTemplateColumns">
            <summary>
            The API should only attempt to delete columns in the derived table.
            If a column of that name exists in the base table it will be ignored.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.RenameColumnGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetRenameColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String,System.String,Microsoft.Isam.Esent.Interop.RenameColumnGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.RenameColumnGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SetColumnDefaultValueGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumnDefaultValue(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.String,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.SetColumnDefaultValueGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SetColumnDefaultValueGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IdleGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetIdle(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.IdleGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IdleGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IdleGrbit.FlushBuffers">
            <summary>
            Reserved for future use. If this flag is specified, the API will return <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidGrbit"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IdleGrbit.Compact">
            <summary>Triggers cleanup of the version store.</summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IdleGrbit.GetStatus">
            <summary>
            Returns <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.IdleFull"/> if version store is more than half full.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.DefragGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetDefragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.NoPartialMerges"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DefragGrbit.AvailSpaceTreesOnly">
            <summary>
            Defragments the available space portion of ESE database space
            allocation. Database space is divided into two types, owned
            space and available space. Owned space is allocated to a table
            or index while available space is ready for use within the table
            or index, respectively. Available space is much more dynamic in
            behavior and requires on-line defragmentation more so than owned
            space or table or index data.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DefragGrbit.BatchStart">
            <summary>
            Starts a new defragmentation task.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.DefragGrbit.BatchStop">
            <summary>
            Stops a defragmentation task.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ColInfoGrbit">
            <summary>
            Grbits for the various Api.JetGetColumnInfo and Api.JetGetTableColumnInfo
            overloads.
            </summary>
            <remarks>
            Internally this value is OR'ed together with the
            <see cref="T:Microsoft.Isam.Esent.Interop.JET_ColInfo"/> info level. The info level is not publically exposed
            in this CLR code because it's only used to differentiate the type of the output
            parameter, which is covered by having explicit function overloads with different
            signatures. There is no need to expose JET_ColInfo to CLR.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColInfoGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColInfoGrbit.NonDerivedColumnsOnly">
            <summary>
            For lists (example: <see cref="F:Microsoft.Isam.Esent.Interop.JET_ColInfo.List"/>), only return
            non-derived columns (if the table is derived from a template).
            </summary>
            <remarks>This value is 0x80000000.</remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColInfoGrbit.MinimalInfo">
            <summary>
            For lists (example: <see cref="F:Microsoft.Isam.Esent.Interop.JET_ColInfo.List"/>), only return
            the column name and columnid of each column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ColInfoGrbit.SortByColumnid">
            <summary>
            For lists (example: <see cref="F:Microsoft.Isam.Esent.Interop.JET_ColInfo.List"/>), sort
            returned column list by columnid (the default is to sort list by column name).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit">
            <summary>
            Options for <see cref="T:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.SpaceHintUtilizeParentSpace">
            <summary>
            This changes the internal allocation policy to get space hierarchically
            from a B-Tree's immediate parent.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.CreateHintAppendSequential">
            <summary>
            This bit will enable Append split behavior to grow according to the
            growth dynamics of the table (set by cbMinExtent, ulGrowth, cbMaxExtent).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.CreateHintHotpointSequential">
            <summary>
            This bit will enable Hotpoint split behavior to grow according to the
            growth dynamics of the table (set by cbMinExtent, ulGrowth, cbMaxExtent).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.RetrieveHintReserve1">
            <summary>
            Reserved and ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.RetrieveHintTableScanForward">
            <summary>
            By setting this the client indicates that forward sequential scan is
            the predominant usage pattern of this table (causing B+ Tree defrag to
            be auto-triggered to clean it up if fragmented).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.RetrieveHintTableScanBackward">
            <summary>
            By setting this the client indicates that backwards sequential scan
            is the predominant usage pattern of this table(causing B+ Tree defrag to
            be auto-triggered to clean it up if fragmented).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.RetrieveHintReserve2">
            <summary>
            Reserved and ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.RetrieveHintReserve3">
            <summary>
            Reserved and ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit.DeleteHintTableSequential">
            <summary>
            The application expects this table to be cleaned up in-order
            sequentially (from lowest key to highest key).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.GuidColumnValue">
            <summary>
            A <see cref="T:System.Guid"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.GuidColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.GuidColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.GuidColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IContentEquatable`1">
            <summary>
            Interface for objects that can have their contents compared against
            each other. This should be used for equality comparisons on mutable
            reference objects where overriding Equals() and GetHashCode() isn't a
            good idea.
            </summary>
            <typeparam name="T">The type of objects to compare.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IContentEquatable`1.ContentEquals(`0)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IDeepCloneable`1">
            <summary>
            Interface for objects that can be cloned. This creates a deep copy of
            the object. It is used for cloning meta-data objects.
            </summary>
            <typeparam name="T">The type of object.</typeparam>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IDeepCloneable`1.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IJET_LOGTIME">
            <summary>
            Interface for common methods between JET_LOGTIME and JET_BKLOGTIME.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IJET_LOGTIME.ToDateTime">
            <summary>
            Generate a DateTime representation of this IJET_LOGTIME.
            </summary>
            <returns>
            A DateTime representing the IJET_LOGTIME. If the IJET_LOGTIME
            is null then null is returned.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IndexInfo">
            <summary>
            Information about one esent index. This is not an interop
            class, but is used by the meta-data helper methods.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexInfo.name">
            <summary>
            The name of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexInfo.cultureInfo">
            <summary>
            The culture info of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexInfo.compareOptions">
            <summary>
            Index comparison options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexInfo.indexSegments">
            <summary>
            Index segments.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexInfo.grbit">
            <summary>
            Index options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexInfo.keys">
            <summary>
            Number of unique keys in the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexInfo.entries">
            <summary>
            Number of entries in the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexInfo.pages">
            <summary>
            Number of pages in the index.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexInfo.#ctor(System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions,Microsoft.Isam.Esent.Interop.IndexSegment[],Microsoft.Isam.Esent.Interop.CreateIndexGrbit,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the IndexInfo class.
            </summary>
            <param name="name">Name of the index.</param>
            <param name="cultureInfo">CultureInfo for string sorting.</param>
            <param name="compareOptions">String comparison options.</param>
            <param name="indexSegments">Array of index segment descriptions.</param>
            <param name="grbit">Index options.</param>
            <param name="keys">Number of unique keys in the index.</param>
            <param name="entries">Number of entries in the index.</param>
            <param name="pages">Number of pages in the index.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexInfo.Name">
            <summary>
            Gets the name of the index.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexInfo.CultureInfo">
            <summary>
            Gets the CultureInfo the index is sorted by.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexInfo.CompareOptions">
            <summary>
            Gets the CompareOptions for the index.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexInfo.IndexSegments">
            <summary>
            Gets the segments of the index.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexInfo.Grbit">
            <summary>
            Gets the index options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexInfo.Keys">
            <summary>
            Gets the number of unique keys in the index.
            This value is not current and is only is updated by Api.JetComputeStats.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexInfo.Entries">
            <summary>
            Gets the number of entries in the index.
            This value is not current and is only is updated by Api.JetComputeStats.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexInfo.Pages">
            <summary>
            Gets the number of pages in the index.
            This value is not current and is only is updated by Api.JetComputeStats.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.IndexInfo"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.IndexInfo"/>.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IndexInfoEnumerator">
            <summary>
            Base class for enumerators that return IndexInfo objects. Subclasses differ
            by how they open the table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexInfoEnumerator.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.IndexInfoEnumerator"/> class.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexInfoEnumerator.Indexlist">
            <summary>
            Gets or sets the indexlist used to retrieve data.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexInfoEnumerator.GetCurrent">
            <summary>
            Gets the entry the cursor is currently positioned on.
            </summary>
            <returns>The entry the cursor is currently positioned on.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexInfoEnumerator.GetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexInfoEnumerator.GetIndexSegmentsFromIndexlist(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_INDEXLIST)">
            <summary>
            Create an array of IndexSegment objects from the data in the current JET_INDEXLIST entry.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="indexlist">The indexlist to take the data from.</param>
            <returns>An array of IndexSegment objects containing the information for the current index.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexInfoEnumerator.GetIndexInfoFromIndexlist(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_INDEXLIST)">
            <summary>
            Create an IndexInfo object from the data in the current JET_INDEXLIST entry.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="indexlist">The indexlist to take the data from.</param>
            <returns>An IndexInfo object containing the information from that record.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IndexSegment">
            <summary>
            Describes one segment of an index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexSegment.columnName">
            <summary>
            The name of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexSegment.coltyp">
            <summary>
            The type of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexSegment.isAscending">
            <summary>
            True if the column is sorted in ascending order.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IndexSegment.isASCII">
            <summary>
            True if the column is an ASCII column.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexSegment.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_coltyp,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the IndexSegment class.
            </summary>
            <param name="name">The name of the indexed column.</param>
            <param name="coltyp">The type of the column.</param>
            <param name="isAscending">True if the column is ascending.</param>
            <param name="isASCII">True if the column is over an ASCII column.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexSegment.ColumnName">
            <summary>
            Gets name of the column being indexed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexSegment.Coltyp">
            <summary>
            Gets the type of the column being indexed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexSegment.IsAscending">
            <summary>
            Gets a value indicating whether the index segment is ascending.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.IndexSegment.IsASCII">
            <summary>
            Gets a value indicating whether the index segment is over an ASCII text
            column. This value is only meaningful for text column segments.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexSegment.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexSegment.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexSegment.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IndexSegment.Equals(Microsoft.Isam.Esent.Interop.IndexSegment)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Instance">
            <summary>
            A class that encapsulates a <see cref="T:Microsoft.Isam.Esent.Interop.JET_INSTANCE"/> in a disposable object. The
            instance must be closed last and closing the instance releases all other
            resources for the instance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Instance.parameters">
            <summary>
            Parameters for the instance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Instance.name">
            <summary>
            The name of the instance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Instance.displayName">
            <summary>
            The display name of the instance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Instance.termGrbit">
            <summary>
            The TermGrbit to be used at JetTerm time.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Instance class. The underlying
            JET_INSTANCE is allocated, but not initialized.
            </summary>
            <param name="name">
            The name of the instance. This string must be unique within a
            given process hosting the database engine.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Instance class. The underlying
            JET_INSTANCE is allocated, but not initialized.
            </summary>
            <param name="name">
            The name of the instance. This string must be unique within a
            given process hosting the database engine.
            </param>
            <param name="displayName">
            A display name for the instance. This will be used in eventlog
            entries.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.#ctor(System.String,System.String,Microsoft.Isam.Esent.Interop.TermGrbit)">
            <summary>
            Initializes a new instance of the Instance class. The underlying
            JET_INSTANCE is allocated, but not initialized.
            </summary>
            <param name="name">
            The name of the instance. This string must be unique within a
            given process hosting the database engine.
            </param>
            <param name="displayName">
            A display name for the instance. This will be used in eventlog
            entries.
            </param>
            <param name="termGrbit">
            The TermGrbit to be used at JetTerm time.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Instance.JetInstance">
            <summary>
            Gets the JET_INSTANCE that this instance contains.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Instance.Parameters">
            <summary>
            Gets the InstanceParameters for this instance. 
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Instance.TermGrbit">
            <summary>
            Gets or sets the TermGrbit for this instance. 
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.op_Implicit(Microsoft.Isam.Esent.Interop.Instance)~Microsoft.Isam.Esent.Interop.JET_INSTANCE">
            <summary>
            Provide implicit conversion of an Instance object to a JET_INSTANCE
            structure. This is done so that an Instance can be used anywhere a
            JET_INSTANCE is required.
            </summary>
            <param name="instance">The instance to convert.</param>
            <returns>The JET_INSTANCE wrapped by the instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Instance"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Instance"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.Init">
            <summary>
            Initialize the JET_INSTANCE.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.Init(Microsoft.Isam.Esent.Interop.InitGrbit)">
            <summary>
            Initialize the JET_INSTANCE.
            </summary>
            <param name="grbit">
            Initialization options.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.Init(Microsoft.Isam.Esent.Interop.JET_RSTINFO,Microsoft.Isam.Esent.Interop.InitGrbit)">
            <summary>
            Initialize the JET_INSTANCE. This API requires at least the
            Vista version of ESENT.
            </summary>
            <param name="recoveryOptions">
            Additional recovery parameters for remapping databases during
            recovery, position where to stop recovery at, or recovery status.
            </param>
            <param name="grbit">
            Initialization options.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.Term">
            <summary>
            Terminate the JET_INSTANCE.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.ReleaseHandle">
            <summary>
            Release the handle for this instance.
            </summary>
            <returns>True if the handle could be released.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.CreateInstanceFromHandle">
            <summary>
            Create a JET_INSTANCE from the internal handle value.
            </summary>
            <returns>A JET_INSTANCE containing the internal handle.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Instance.CheckObjectIsNotDisposed">
            <summary>
            Check to see if this instance is invalid or closed.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.InstanceParameters">
            <summary>
            This class provides properties to set and get system parameters
            on an ESENT instance.
            </summary>
            <summary>
            This class provides static properties to set and get
            per-instance ESENT system parameters.
            </summary>
            <summary>
            This class provides static properties to set and get
            per-instance ESENT system parameters.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.InstanceParameters.instance">
            <summary>
            The instance to set parameters on.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.InstanceParameters.sesid">
            <summary>
            The session to set parameters with.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.#ctor(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Initializes a new instance of the InstanceParameters class.
            </summary>
            <param name="instance">
            The instance to set parameters on. If this is JET_INSTANCE.Nil,
            then the settings affect the default settings of future instances.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.SystemDirectory">
            <summary>
            Gets or sets the relative or absolute file system path of the
            folder that will contain the checkpoint file for the instance.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.TempDirectory">
            <summary>
            Gets or sets the relative or absolute file system path of
            the folder that will contain the temporary database for the instance.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.LogFileDirectory">
            <summary>
            Gets or sets the relative or absolute file system path of the
            folder that will contain the transaction logs for the instance.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.AlternateDatabaseRecoveryDirectory">
            <summary>
            Gets or sets the relative or absolute file system path of the
            a folder where crash recovery or a restore operation can find
            the databases referenced in the transaction log in the
            specified folder.
            </summary>
            <remarks>
            This parameter is ignored on Windows XP.
            </remarks>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.BaseName">
            <summary>
            Gets or sets the three letter prefix used for many of the files used by
            the database engine. For example, the checkpoint file is called EDB.CHK by
            default because EDB is the default base name.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EventSource">
            <summary>
            Gets or sets an application specific string that will be added to
            any event log messages that are emitted by the database engine. This allows
            easy correlation of event log messages with the source application. By default
            the host application executable name will be used.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.MaxSessions">
            <summary>
            Gets or sets the number of sessions resources reserved for this instance.
            A session resource directly corresponds to a JET_SESID.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.MaxOpenTables">
            <summary>
            Gets or sets the number of B+ Tree resources reserved for this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.MaxCursors">
            <summary>
            Gets or sets the number of cursor resources reserved for this instance.
            A cursor resource directly corresponds to a JET_TABLEID.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.MaxVerPages">
            <summary>
            Gets or sets the maximum number of version store pages reserved
            for this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.PreferredVerPages">
            <summary>
            Gets or sets the preferred number of version store pages reserved
            for this instance. If the size of the version store exceeds this
            threshold then any information that is only used for optional
            background tasks, such as reclaiming deleted space in the database,
            is instead sacrificed to preserve room for transactional information.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.VersionStoreTaskQueueMax">
            <summary>
            Gets or sets the the number of background cleanup work items that
            can be queued to the database engine thread pool at any one time.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.MaxTemporaryTables">
            <summary>
            Gets or sets the number of temporary table resources for use
            by an instance. This setting will affect how many temporary tables can be used at
            the same time. If this system parameter is set to zero then no temporary database
            will be created and any activity that requires use of the temporary database will
            fail. This setting can be useful to avoid the I/O required to create the temporary
            database if it is known that it will not be used.
            </summary>
            <remarks>
            The use of a temporary table also requires a cursor resource.
            </remarks>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.LogFileSize">
            <summary>
            Gets or sets the size of the transaction log files. This parameter
            should be set in units of 1024 bytes (e.g. a setting of 2048 will
            give 2MB logfiles).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.LogBuffers">
            <summary>
            Gets or sets the amount of memory used to cache log records
            before they are written to the transaction log file. The unit for this
            parameter is the sector size of the volume that holds the transaction log files.
            The sector size is almost always 512 bytes, so it is safe to assume that size
            for the unit. This parameter has an impact on performance. When the database
            engine is under heavy update load, this buffer can become full very rapidly.
            A larger cache size for the transaction log file is critical for good update
            performance under such a high load condition. The default is known to be too small
            for this case.
            Do not set this parameter to a number of buffers that is larger (in bytes) than
            half the size of a transaction log file.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.CircularLog">
            <summary>
            Gets or sets a value indicating whether circular logging is on.
            When circular logging is off, all transaction log files that are generated
            are retained on disk until they are no longer needed because a full backup of the
            database has been performed. When circular logging is on, only transaction log files
            that are younger than the current checkpoint are retained on disk. The benefit of
            this mode is that backups are not required to retire old transaction log files. 
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.CleanupMismatchedLogFiles">
            <summary>
            Gets or sets a value indicating whether JetInit fails when the database
            engine is configured to start using transaction log files on disk
            that are of a different size than what is configured. Normally,
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)"/> will successfully recover the databases
            but will fail with <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.LogFileSizeMismatchDatabasesConsistent"/>
            to indicate that the log file size is misconfigured. However, when
            this parameter is set to true then the database engine will silently
            delete all the old log files, start a new set of transaction log files
            using the configured log file size. This parameter is useful when the
            application wishes to transparently change its transaction log file
            size yet still work transparently in upgrade and restore scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.PageTempDBMin">
            <summary>
            Gets or sets the initial size of the temporary database. The size is in
            database pages. A size of zero indicates that the default size of an ordinary
            database should be used. It is often desirable for small applications to configure
            the temporary database to be as small as possible. Setting this parameter to
            <see cref="F:Microsoft.Isam.Esent.Interop.SystemParameters.PageTempDBSmallest"/> will achieve the smallest
            temporary database possible.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.CheckpointDepthMax">
            <summary>
            Gets or sets the threshold in bytes for about how many transaction log
            files will need to be replayed after a crash. If circular logging is enabled using
            CircularLog then this parameter will also control the approximate amount
            of transaction log files that will be retained on disk.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.DbExtensionSize">
            <summary>
            Gets or sets the number of pages that are added to a database file each
            time it needs to grow to accommodate more data.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.Recovery">
            <summary>
            Gets or sets a value indicating whether crash recovery is on.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EnableOnlineDefrag">
            <summary>
            Gets or sets a value indicating whether online defragmentation is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EnableIndexChecking">
            <summary>
            Gets or sets a value indicating whether <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/> will check for
            indexes that were build using an older version of the NLS library in the
            operating system.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EventSourceKey">
            <summary>
            Gets or sets the name of the event log the database engine uses for its event log
            messages. By default, all event log messages will go to the Application event log. If the registry
            key name for another event log is configured then the event log messages will go there instead.
            </summary>  
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.NoInformationEvent">
            <summary>
            Gets or sets a value indicating whether informational event 
            log messages that would ordinarily be generated by the
            database engine will be suppressed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EventLoggingLevel">
            <summary>
            Gets or sets the detail level of eventlog messages that are emitted
            to the eventlog by the database engine. Higher numbers will result
            in more detailed eventlog messages.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.OneDatabasePerSession">
            <summary>
            Gets or sets a value indicating whether only one database is allowed to
            be opened using JetOpenDatabase by a given session at one time.
            The temporary database is excluded from this restriction. 
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.CreatePathIfNotExist">
            <summary>
            Gets or sets a value indicating whether ESENT will silently create folders
            that are missing in its filesystem paths.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.CachedClosedTables">
            <summary>
            Gets or sets a value giving the number of B+ Tree resources cached by
            the instance after the tables they represent have been closed by
            the application. Large values for this parameter will cause the
            database engine to use more memory but will increase the speed
            with which a large number of tables can be opened randomly by
            the application. This is useful for applications that have a
            schema with a very large number of tables.
            <para>
            Supported on Windows Vista and up. Ignored on Windows XP and
            Windows Server 2003.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.WaypointLatency">
            <summary>
            Gets or sets a the number of logs that esent will defer database
            flushes for. This can be used to increase database recoverability if
            failures cause logfiles to be lost.
            <para>
            Supported on Windows 7 and up. Ignored on Windows XP,
            Windows Server 2003, Windows Vista and Windows Server 2008.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EnableIndexCleanup">
            <summary>
            Gets or sets a value indicating whether <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetAttachDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,Microsoft.Isam.Esent.Interop.AttachDatabaseGrbit)"/> will
            delete indexes that were build using an older version of the NLS library in the
            operating system.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.InstanceParameters"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.InstanceParameters"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.SetStringParameter(Microsoft.Isam.Esent.Interop.JET_param,System.String)">
            <summary>
            Set a system parameter which is a string.
            </summary>
            <param name="param">The parameter to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.GetStringParameter(Microsoft.Isam.Esent.Interop.JET_param)">
            <summary>
            Get a system parameter which is a string.
            </summary>
            <param name="param">The parameter to get.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.SetIntegerParameter(Microsoft.Isam.Esent.Interop.JET_param,System.Int32)">
            <summary>
            Set a system parameter which is an integer.
            </summary>
            <param name="param">The parameter to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.GetIntegerParameter(Microsoft.Isam.Esent.Interop.JET_param)">
            <summary>
            Get a system parameter which is an integer.
            </summary>
            <param name="param">The parameter to get.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.SetBoolParameter(Microsoft.Isam.Esent.Interop.JET_param,System.Boolean)">
            <summary>
            Set a system parameter which is a boolean.
            </summary>
            <param name="param">The parameter to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.GetBoolParameter(Microsoft.Isam.Esent.Interop.JET_param)">
            <summary>
            Get a system parameter which is a boolean.
            </summary>
            <param name="param">The parameter to get.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EnableShrinkDatabase">
            <summary>
            Gets or sets whether to free space back to the OS after deleting data. This may free space
            in the middle of files (done in the units of database extents). This uses Sparse Files,
            which is available on NTFS and ReFS (not FAT). The exact method of releasing space is an
            implementation detail and is subject to change.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.MaxTransactionSize">
            <summary>
            Gets or sets the percentage of version store that can be used by oldest transaction
            before <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.VersionStoreOutOfMemory"/> (default = 100).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EnableDbScanInRecovery">
            <summary>
            Gets or sets a value indicating whether Database Maintenance should run during recovery.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EnableDBScanSerialization">
            <summary>
            Gets or sets a value indicating whether database Maintenance
            serialization is enabled for databases sharing the same disk.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.DbScanThrottle">
            <summary>
            Gets or sets the throttling of the database scan, in milliseconds.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.DbScanIntervalMinSec">
            <summary>
            Gets or sets the minimum interval to repeat the database scan, in seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.DbScanIntervalMaxSec">
            <summary>
            Gets or sets the maximum interval to allow the database scan to finish, in seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.CachePriority">
            <summary>
            Gets or sets the per-instance property for relative cache priorities (default = 100).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.InstanceParameters.PrereadIOMax">
            <summary>
            Gets or sets the maximum number of I/O operations dispatched for a given purpose.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.GetDurableCommitCallback">
            <summary>
            Gets the callback for log flush.
            </summary>
            <returns>The delegate that's called for log flush.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.SetDurableCommitCallback(Microsoft.Isam.Esent.Interop.Windows8.NATIVE_JET_PFNDURABLECOMMITCALLBACK)">
            <summary>
            Sets the callback for log flush.
            It is the caller's responsibility to hold a reference to the delegate
            so that it doesn't get GC'ed.
            </summary>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.GetIntPtrParameter(Microsoft.Isam.Esent.Interop.JET_param)">
            <summary>
            Get a system parameter which is an IntPtr.
            </summary>
            <param name="param">The parameter to get.</param>
            <returns>The value of the parameter.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.InstanceParameters.SetIntPtrParameter(Microsoft.Isam.Esent.Interop.JET_param,System.IntPtr)">
            <summary>
            Set a system parameter which is an IntPtr.
            </summary>
            <param name="param">The parameter to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Int16ColumnValue">
            <summary>
            An <see cref="T:System.Int16"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Int16ColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Int16ColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Int16ColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Int32ColumnValue">
            <summary>
            An <see cref="T:System.Int32"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Int32ColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Int32ColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Int32ColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Int64ColumnValue">
            <summary>
            An <see cref="T:System.Int64"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Int64ColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Int64ColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Int64ColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.IntersectIndexesEnumerator">
            <summary>
            Enumerator that can intersect indexes and return the intersected bookmarks.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IntersectIndexesEnumerator.ranges">
            <summary>
            The ranges to intersect.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.IntersectIndexesEnumerator.recordlist">
            <summary>
            The recordlist containing the result of the intersection.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IntersectIndexesEnumerator.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_INDEXRANGE[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.IntersectIndexesEnumerator"/> class.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
            <param name="ranges">
            The ranges to intersect.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IntersectIndexesEnumerator.OpenTable">
            <summary>
            Open the table to be enumerated. This should set <see cref="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.TableidToEnumerate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.IntersectIndexesEnumerator.GetCurrent">
            <summary>
            Gets the entry the cursor is currently positioned on.
            </summary>
            <returns>The entry the cursor is currently positioned on.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.INullableJetStruct">
            <summary>
            Interface for Jet structures that are nullable (can have null values).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.INullableJetStruct.HasValue">
            <summary>
            Gets a value indicating whether the structure has a null value.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_CALLBACK">
            <summary>
            A multi-purpose callback function used by the database engine to inform
            the application of an event involving online defragmentation and cursor
            state notifications. 
            </summary>
            <param name="sesid">The session for which the callback is being made.</param>
            <param name="dbid">The database for which the callback is being made.</param>
            <param name="tableid">The cursor for which the callback is being made.</param>
            <param name="cbtyp">The operation for which the callback is being made.</param>
            <param name="arg1">First callback-specific argument.</param>
            <param name="arg2">Second callback-specific argument.</param>
            <param name="context">Callback context.</param>
            <param name="unused">This parameter is not used.</param>
            <returns>An ESENT error code.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JetCallbackWrapper">
            <summary>
            Wraps a NATIVE_CALLBACK callback around a JET_CALLBACK. This is
            used to catch exceptions and provide argument conversion.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JetCallbackWrapper.TraceSwitch">
            <summary>
            API call tracing.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JetCallbackWrapper.wrappedCallback">
            <summary>
            The wrapped status callback.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JetCallbackWrapper.nativeCallback">
            <summary>
            The native version of the callback. This will actually be a closure
            because we are calling a non-static method. Keep track of it here
            to make sure that it isn't garbage collected.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JetCallbackWrapper.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.Isam.Esent.Interop.JetCallbackWrapper"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JetCallbackWrapper.#ctor(Microsoft.Isam.Esent.Interop.JET_CALLBACK)">
            <summary>
            Initializes a new instance of the JetCallbackWrapper class.
            </summary>
            <param name="callback">
            The managed callback to use.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JetCallbackWrapper.IsAlive">
            <summary>
            Gets a value indicating whether the wrapped callback has been garbage
            collected.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JetCallbackWrapper.NativeCallback">
            <summary>
            Gets a NATIVE_CALLBACK callback that wraps the managed callback.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JetCallbackWrapper.IsWrapping(Microsoft.Isam.Esent.Interop.JET_CALLBACK)">
            <summary>
            Determine if the callback is wrapping the specified JET_CALLBACK.
            </summary>
            <param name="callback">The callback.</param>
            <returns>True if this wrapper is wrapping the callback.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JetCallbackWrapper.CallbackImpl(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Callback function for native code. We don't want to throw an exception through
            unmanaged ESENT because that will corrupt ESENT's internal state. Instead we
            catch all exceptions and return an error instead. We use a CER to make catching
            the exceptions as reliable as possible.
            </summary>
            <param name="nativeSesid">The session for which the callback is being made.</param>
            <param name="nativeDbid">The database for which the callback is being made.</param>
            <param name="nativeTableid">The cursor for which the callback is being made.</param>
            <param name="nativeCbtyp">The operation for which the callback is being made.</param>
            <param name="arg1">First callback-specific argument.</param>
            <param name="arg2">Second callback-specific argument.</param>
            <param name="nativeContext">Callback context.</param>
            <param name="unused">This parameter is not used.</param>
            <returns>An ESENT error code.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_BKINFO">
            <summary>
            Holds a collection of data about a specific backup event.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKINFO.logPosition">
            <summary>
            Current log position. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKINFO.backupTime">
            <summary>
            Time the backup was made.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKINFO.lowGeneration">
            <summary>
            Low log generation when the backup was made.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKINFO.highGeneration">
            <summary>
            High log generation when the backup was made.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_BKINFO.lgposMark">
            <summary>
            Gets the log position of the backup.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_BKINFO.bklogtimeMark">
            <summary>
            Gets the time of the backup.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_BKINFO.genLow">
            <summary>
            Gets the low generation of the backup.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_BKINFO.genHigh">
            <summary>
            Gets or sets the high generation of the backup.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_BKINFO.HasValue">
            <summary>
            Gets a value indicating whether this backup info is null.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKINFO.op_Equality(Microsoft.Isam.Esent.Interop.JET_BKINFO,Microsoft.Isam.Esent.Interop.JET_BKINFO)">
            <summary>
            Determines whether two specified instances of JET_BKINFO
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKINFO.op_Inequality(Microsoft.Isam.Esent.Interop.JET_BKINFO,Microsoft.Isam.Esent.Interop.JET_BKINFO)">
            <summary>
            Determines whether two specified instances of JET_BKINFO
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKINFO.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKINFO.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKINFO.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKINFO.Equals(Microsoft.Isam.Esent.Interop.JET_BKINFO)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME">
            <summary>
            Describes a date/time when a backup occurred.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.bSeconds">
            <summary>
            The time in seconds. This value can be 0 to 59.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.bMinutes">
            <summary>
            The time in minutes. This value can be 0 to 59.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.bHours">
            <summary>
            The time in hours. This value can be 0 to 23.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.bDays">
            <summary>
            The day of the month. This value can be 0 to 31. 0 is
            used when the structure is null.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.bMonth">
            <summary>
            The month. This value can be 0 to 12. 0 is
            used when the structure is null.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.bYear">
            <summary>
            The year of the event, offset by 1900.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.bFiller1">
            <summary>
            IsUTC flag at the first bit. Starting from win8, milliseconds (low part) is filled at left 7 bits.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.bFiller2">
            <summary>
            OSSnapshot flag at the first bit, Starting from win8, milliseconds (high part) is filled at following 3 bits. Other bits are reserved.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.#ctor(System.DateTime,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME"/> struct.
            </summary>
            <param name="time">
            The DateTime to initialize the structure with.
            </param>
            <param name="isSnapshot">
            True if this time is for a snapshot backup.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.HasValue">
            <summary>
            Gets a value indicating whether the JET_BKLOGTIME has a null value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.fTimeIsUTC">
            <summary>
            Gets a value indicating whether the JET_BKLOGTIME is in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.fOSSnapshot">
            <summary>
            Gets a value indicating whether the JET_BKLOGTIME is for a snapshot backup.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.op_Equality(Microsoft.Isam.Esent.Interop.JET_BKLOGTIME,Microsoft.Isam.Esent.Interop.JET_BKLOGTIME)">
            <summary>
            Determines whether two specified instances of JET_BKLOGTIME
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.op_Inequality(Microsoft.Isam.Esent.Interop.JET_BKLOGTIME,Microsoft.Isam.Esent.Interop.JET_BKLOGTIME)">
            <summary>
            Determines whether two specified instances of JET_BKLOGTIME
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.ToDateTime">
            <summary>
            Generate a DateTime representation of this JET_BKLOGTIME.
            </summary>
            <returns>
            A DateTime representing the JET_BKLOGTIME. If the JET_BKLOGTIME
            is null then null is returned.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_BKLOGTIME.Equals(Microsoft.Isam.Esent.Interop.JET_BKLOGTIME)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_CALLBACK">
            <summary>
            A multi-purpose callback function used by the database engine to inform
            the application of an event involving online defragmentation and cursor
            state notifications. 
            </summary>
            <param name="sesid">The session for which the callback is being made.</param>
            <param name="dbid">The database for which the callback is being made.</param>
            <param name="tableid">The cursor for which the callback is being made.</param>
            <param name="cbtyp">The operation for which the callback is being made.</param>
            <param name="arg1">First callback-specific argument.</param>
            <param name="arg2">Second callback-specific argument.</param>
            <param name="context">Callback context.</param>
            <param name="unused">This parameter is not used.</param>
            <returns>An ESENT error code.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_cbtyp">
            <summary>
            Type of progress being reported.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.Null">
            <summary>
            This callback is reserved and always considered invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.Finalize">
            <summary>
            A finalizable column has gone to zero.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.BeforeInsert">
            <summary>
            This callback will occur just before a new record is inserted into
            a table by a call to JetUpdate.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.AfterInsert">
            <summary>
            This callback will occur just after a new record has been inserted
            into a table by a call to JetUpdate but before JetUpdate returns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.BeforeReplace">
            <summary>
            This callback will occur just prior to an existing record in a table
            being changed by a call to JetUpdate.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.AfterReplace">
            <summary>
            This callback will occur just after an existing record in a table
            has been changed by a call to JetUpdate but prior to JetUpdate returning.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.BeforeDelete">
            <summary>
            This callback will occur just before an existing record in a table
            is deleted by a call to JetDelete.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.AfterDelete">
            <summary>
            This callback will occur just after an existing record in a table
            is deleted by a call to JetDelete.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.UserDefinedDefaultValue">
            <summary>
            This callback will occur when the engine needs to retrieve the
            user defined default value of a column from the application.
            This callback is essentially a limited implementation of
            JetRetrieveColumn that is evaluated by the application. A maximum
            of one column value can be returned for a user defined default value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.OnlineDefragCompleted">
            <summary>
            This callback will occur when the online defragmentation of a
            database as initiated by JetDefragment has stopped due to either the
            process being completed or the time limit being reached.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.FreeCursorLS">
            <summary>
            This callback will occur when the application needs to clean up
            the context handle for the Local Storage associated with a cursor
            that is being released by the database engine. For more information,
            see JetSetLS. The delegate for this callback reason is
            configured by means of JetSetSystemParameter with JET_paramRuntimeCallback.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.FreeTableLS">
            <summary>
            This callback will occur as the result of the need for the application
            to cleanup the context handle for the Local Storage associated with
            a table that is being released by the database engine. For more information,
            see JetSetLS. The delegate for this callback reason is configured
            by means of JetSetSystemParameter with JET_paramRuntimeCallback.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_ColInfo">
            <summary>
            Info levels for retrieving column info.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_ColInfo.Default">
            <summary>
            Default option. Retrieves a JET_COLUMNDEF.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_ColInfo.List">
            <summary>
            Retrieves a JET_COLUMNLIST structure, containing all the columns
            in the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_ColInfo.Base">
            <summary>
            Retrieves a JET_COLUMNBASE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_ColInfo.ByColid">
            <summary>
            Retrieves a JET_COLUMNDEF, the szColumnName argument is interpreted
            as a pointer to a columnid.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_coltyp">
            <summary>
            ESENT column types. This list is not extensive. Some column types introduced later
            are in different classes, such as <see cref="T:Microsoft.Isam.Esent.Interop.Vista.VistaColtyp"/>.
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Vista.VistaColtyp"/>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Coltyp"/>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Nil">
            <summary>
            Null column type. Invalid for column creation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Bit">
            <summary>
            True, False or NULL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.UnsignedByte">
            <summary>
            1-byte integer, unsigned.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Short">
            <summary>
            2-byte integer, signed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long">
            <summary>
            4-byte integer, signed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Currency">
            <summary>
            8-byte integer, signed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.IEEESingle">
            <summary>
            4-byte IEEE single-precisions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.IEEEDouble">
            <summary>
            8-byte IEEE double-precision.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.DateTime">
            <summary>
            Integral date, fractional time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Binary">
            <summary>
            Binary data, up to 255 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Text">
            <summary>
            Text data, up to 255 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary">
            <summary>
            Binary data, up to 2GB.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText">
            <summary>
            Text data, up to 2GB.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE">
            <summary>
            The native ANSI version of the JET_COLUMNBASE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.columnid">
            <summary>
            Column ID.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.coltyp">
            <summary>
            Type of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.wCountry">
            <summary>
            Reserved. Should be 0.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.langid">
            <summary>
            Obsolete. Should be .
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.cp">
            <summary>
            Code page for text columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.wFiller">
            <summary>
            Reserved. Should be 0.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.cbMax">
            <summary>
            Maximum length of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.grbit">
            <summary>
            Column options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.szBaseTableName">
            <summary>
            The table from which the current table inherits its DDL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.szBaseColumnName">
            <summary>
            The name of the column in the template table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE.NameSize">
            <summary>
            Max size of the table/column name string.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE">
            <summary>
            The native Unicode version of the JET_COLUMNBASE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.columnid">
            <summary>
            Column ID.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.coltyp">
            <summary>
            Type of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.wCountry">
            <summary>
            Reserved. Should be 0.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.langid">
            <summary>
            Obsolete. Should be .
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.cp">
            <summary>
            Code page for text columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.wFiller">
            <summary>
            Reserved. Should be 0.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.cbMax">
            <summary>
            Maximum length of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.grbit">
            <summary>
            Column options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.szBaseTableName">
            <summary>
            The table from which the current table inherits its DDL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.szBaseColumnName">
            <summary>
            The name of the column in the template table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE.NameSize">
            <summary>
            Max size of the table/column name string.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE">
            <summary>
            Describes a column in a table of an ESENT database.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.#ctor(Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE"/> class.
            </summary>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.#ctor(Microsoft.Isam.Esent.Interop.NATIVE_COLUMNBASE_WIDE)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE"/> class.
            </summary>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.coltyp">
            <summary>
            Gets type of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.cp">
            <summary>
            Gets code page of the column. This is only meaningful for columns of type
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Text"/> and <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.cbMax">
            <summary>
            Gets the maximum length of the column. This is only meaningful for columns of
            type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Text"/>, <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>, <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Binary"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.grbit">
            <summary>
            Gets the column options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.columnid">
            <summary>
            Gets the columnid of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.szBaseTableName">
            <summary>
            Gets the table from which the current table inherits its DDL.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.szBaseColumnName">
            <summary>
            Gets the name of the column in the template table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE.Equals(Microsoft.Isam.Esent.Interop.JET_COLUMNBASE)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE">
            <summary>
            The native version of the JET_COLUMNCREATE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.szColumnName">
            <summary>
            Name of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.coltyp">
            <summary>
            Type of the columnn.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.cbMax">
            <summary>
            The maximum length of this column (only relevant for binary and text columns).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.grbit">
            <summary>
            Column options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.pvDefault">
            <summary>
            Default value (NULL if none).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.cbDefault">
            <summary>
            Size of the default value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.cp">
            <summary>
            Code page (for text columns only).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.columnid">
            <summary>
            The returned column id.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE.err">
            <summary>
            The returned error code.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE">
            <summary>
            Describes a column in a table of an ESENT database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.name">
            <summary>
            Name of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.columnType">
            <summary>
            The type of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.maxSize">
            <summary>
            Maximum size of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.options">
            <summary>
            Column options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.defaultValue">
            <summary>
            Default value (NULL if none).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.defaultValueSize">
            <summary>
            Size of the default value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.codePage">
            <summary>
            The code page. Only valid for text columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.id">
            <summary>
            Id of the column. Not serialized because it is an internal
            value and shouldn't be persisted.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.errorCode">
            <summary>
            The returned error code.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.szColumnName">
            <summary>
            Gets or sets the name of the column to create. 
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.coltyp">
            <summary>
            Gets or sets type of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.cbMax">
            <summary>
            Gets or sets the maximum length of the column. This is only meaningful for columns of
            type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Text"/>, <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>, <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Binary"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.grbit">
            <summary>
            Gets or sets the column options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.pvDefault">
            <summary>
            Gets or sets the default value (NULL if none).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.cbDefault">
            <summary>
            Gets or sets the size of the default value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.cp">
            <summary>
            Gets or sets code page of the column. This is only meaningful for columns of type
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Text"/> and <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.columnid">
            <summary>
            Gets the columnid of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.err">
            <summary>
            Gets or sets the error code from creating this column.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.ContentEquals(Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.CheckMembersAreValid">
            <summary>
            Check this object to make sure its parameters are valid.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.GetNativeColumnCreate">
            <summary>
            Returns the unmanaged columncreate that represents this managed class.
            <see cref="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.szColumnName"/>, <see cref="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.pvDefault"/>, <see cref="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.columnid"/>,
            and <see cref="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.err"/> are not converted.
            </summary>
            <returns>A native (interop) version of the JET_COLUMNCREATE.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.SetFromNativeColumnCreate(Microsoft.Isam.Esent.Interop.NATIVE_COLUMNCREATE@)">
            <summary>
            Sets only the output fields of the object from a native JET_COLUMNCREATE struct,
            specifically <see cref="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.columnid"/> and <see cref="P:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE.err"/>.
            </summary>
            <param name="value">
            The native columncreate to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF">
            <summary>
            The native version of the JET_COLUMNDEF structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF.columnid">
            <summary>
            Column ID.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF.coltyp">
            <summary>
            Type of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF.wCountry">
            <summary>
            Reserved. Should be 0.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF.langid">
            <summary>
            Obsolete. Should be 0.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF.cp">
            <summary>
            Code page for text columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF.wCollate">
            <summary>
            Reserved. Should be 0.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF.cbMax">
            <summary>
            Maximum length of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF.grbit">
            <summary>
            Column options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF">
            <summary>
            Describes a column in a table of an ESENT database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.columnType">
            <summary>
            The type of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.codePage">
            <summary>
            The code page. Only valid for text columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.maxSize">
            <summary>
            Maximum size of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.id">
            <summary>
            Id of the column. Not serialized because it is an internal
            value and shouldn't be persisted.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.options">
            <summary>
            Column options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.coltyp">
            <summary>
            Gets or sets type of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.cp">
            <summary>
            Gets or sets code page of the column. This is only meaningful for columns of type
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Text"/> and <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.cbMax">
            <summary>
            Gets or sets the maximum length of the column. This is only meaningful for columns of
            type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Text"/>, <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>, <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Binary"/> and
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.grbit">
            <summary>
            Gets or sets the column options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.columnid">
            <summary>
            Gets the columnid of the column.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.ContentEquals(Microsoft.Isam.Esent.Interop.JET_COLUMNDEF)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.GetNativeColumndef">
            <summary>
            Returns the unmanaged columndef that represents this managed class.
            </summary>
            <returns>A native (interop) version of the JET_COLUMNDEF.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNDEF.SetFromNativeColumndef(Microsoft.Isam.Esent.Interop.NATIVE_COLUMNDEF)">
            <summary>
            Sets the fields of the object from a native JET_COLUMNDEF struct.
            </summary>
            <param name="value">
            The native columndef to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST">
            <summary>
            The native version of the JET_COLUMNLIST structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.tableid">
            <summary>
            Tableid of the temporary table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.cRecord">
            <summary>
            Number of records in the temporary table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidPresentationOrder">
            <summary>
            Columnid of the presentation order column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidcolumnname">
            <summary>
            Columnid of the name column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidcolumnid">
            <summary>
            Columnid of the columnid column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidcoltyp">
            <summary>
            Columnid of the coltyp column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidCountry">
            <summary>
            Columnid of the country column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidLangid">
            <summary>
            Columnid of the langid column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidCp">
            <summary>
            Columnid of the codepage column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidCollate">
            <summary>
            Columnid of the collation column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidcbMax">
            <summary>
            Columnid of the cbMax column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidgrbit">
            <summary>
            Columnid of the grbit column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidDefault">
            <summary>
            Columnid of the default value column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidBaseTableName">
            <summary>
            Columnid of the base table name column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidBaseColumnName">
            <summary>
            Columnid of the base column name column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST.columnidDefinitionName">
            <summary>
            The column identifier of the name of the column definition.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST">
            <summary>
            Information about a temporary table containing information
            about all columns for a given table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.tableid">
            <summary>
            Gets tableid of the temporary table. This should be closed
            when the table is no longer needed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.cRecord">
            <summary>
            Gets the number of records in the temporary table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.columnidcolumnname">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the name of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.columnidcolumnid">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the id of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.columnidcoltyp">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the type of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.columnidCp">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the code page of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.columnidcbMax">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the maximum length of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.columnidgrbit">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the grbit of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.columnidDefault">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the default value of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.columnidBaseTableName">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the name of the base table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST.SetFromNativeColumnlist(Microsoft.Isam.Esent.Interop.NATIVE_COLUMNLIST)">
            <summary>
            Sets the fields of the object from a native JET_COLUMNLIST struct.
            </summary>
            <param name="value">
            The native columnlist to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_CONDITIONALCOLUMN">
            <summary>
            The native version of the JET_CONDITIONALCOLUMN structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_CONDITIONALCOLUMN.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_CONDITIONALCOLUMN.szColumnName">
            <summary>
            Name of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_CONDITIONALCOLUMN.grbit">
            <summary>
            Conditional column option.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN">
            <summary>
            Defines how conditional indexing is performed for a given index. A
            conditional index contains an index entry for only those rows that
            match the specified condition. However, the conditional column is not
            part of the index's key, it only controls the presence of the index entry.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.columnName">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.option">
            <summary>
            Conditional column option.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.szColumnName">
            <summary>
            Gets or sets the name of the conditional column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.grbit">
            <summary>
            Gets or sets the options for the conditional index.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.#ctor(Microsoft.Isam.Esent.Interop.NATIVE_CONDITIONALCOLUMN@)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN"/> class.
            </summary>
            <param name="native">The native object from which to read values.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.ContentEquals(Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN.GetNativeConditionalColumn">
            <summary>
            Gets the NATIVE_CONDITIONALCOLUMN version of this object.
            </summary>
            <returns>A NATIVE_CONDITIONALCOLUMN for this object.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_CONVERT">
            <summary>
            Conversion options for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCompact(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String,Microsoft.Isam.Esent.Interop.JET_PFNSTATUS,Microsoft.Isam.Esent.Interop.JET_CONVERT,Microsoft.Isam.Esent.Interop.CompactGrbit)"/>. This feature
            was discontinued in Windows Server 2003.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_CP">
            <summary>
            Codepage for an ESENT column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_CP.None">
            <summary>
            Code page for non-text columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_CP.Unicode">
            <summary>
            Unicode encoding.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_CP.ASCII">
            <summary>
            ASCII encoding.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_DbInfo">
            <summary>
            Info levels for retrieving database info.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.Filename">
            <summary>
            Returns the path to the database file (string).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.LCID">
            <summary>
            Returns the locale identifier (LCID) associated with this database (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.Options">
            <summary>
            Returns a <see cref="T:Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit"/>. This indicates whether the
            database is opened in exclusive mode. If the database is in exclusive mode then 
            <see cref="F:Microsoft.Isam.Esent.Interop.OpenDatabaseGrbit.Exclusive"/> will be returned, otherwise zero is
            returned. Other database grbit options for JetAttachDatabase and JetOpenDatabase
            are not returned.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.Transactions">
            <summary>
            Returns a number one greater than the maximum level to which transactions can be
            nested. If <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetBeginTransaction(Microsoft.Isam.Esent.Interop.JET_SESID)"/> is called (in a nesting fashion, that is, on the
            same session, without a commit or rollback) as many times as this value, on the
            last call <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.TransTooDeep"/> will be returned (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.Version">
            <summary>
            Returns the major version of the database engine (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.Filesize">
            <summary>
            Returns the filesize of the database, in pages (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.SpaceOwned">
            <summary>
            Returns the owned space of the database, in pages (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.SpaceAvailable">
            <summary>
            Returns the available space in the database, in pages (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.Misc">
            <summary>
            Returns a <see cref="T:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.DBInUse">
            <summary>
            Returns a boolean indicating whether the database is attached (boolean).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.PageSize">
            <summary>
            Returns the page size of the database (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.FileType">
            <summary>
            Returns the type of the database (<see cref="T:Microsoft.Isam.Esent.Interop.JET_filetype"/>).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC">
            <summary>
            The native version of the JET_DBINFOMISC structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.ulVersion">
            <summary>
            Version of Esent that created the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.ulUpdate">
            <summary>
            Incremental version of Esent that created the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.signDb">
            <summary>
            Database signature.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.dbstate">
            <summary>
            Consistent/inconsistent state.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.lgposConsistent">
            <summary>
            Null if in inconsistent state.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.logtimeConsistent">
            <summary>
            Null if in inconsistent state.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.logtimeAttach">
            <summary>
            Last attach time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.lgposAttach">
            <summary>
            Lgpos at last attach.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.logtimeDetach">
            <summary>
            Last detach time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.lgposDetach">
            <summary>
            Lgpos at last detach.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.signLog">
            <summary>
            Logfile signature.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.bkinfoFullPrev">
            <summary>
            Last successful full backup.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.bkinfoIncPrev">
            <summary>
            Last successful incremental backup. Reset when 
            <see cref="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.bkinfoFullPrev"/> is set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.bkinfoFullCur">
            <summary>
            Current backup.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.fShadowingDisabled">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.fUpgradeDb">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.dwMajorVersion">
            <summary>
            OS major version.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.dwMinorVersion">
            <summary>
            OS minor version.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.dwBuildNumber">
            <summary>
            OS build number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.lSPNumber">
            <summary>
            OS Service Pack number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC.cbPageSize">
            <summary>
            Database page size (0 = 4Kb page).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4">
            <summary>
            Native version of the JET_DBINFOMISC structure.
            Adds support for fields that we added in Windows 7.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.dbinfo">
            <summary>
            The core dbinfo structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.genMinRequired">
            <summary>
            The minimum log generation required for replaying the logs.
            Typically the checkpoint generation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.genMaxRequired">
            <summary>
            The maximum log generation required for replaying the logs.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.logtimeGenMaxCreate">
            <summary>
            Creation time of the <see cref="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.genMaxRequired"/> logfile.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.ulRepairCount">
            <summary>
            Number of times repair has been called on this database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.logtimeRepair">
            <summary>
            The last time that repair was run against this database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.ulRepairCountOld">
            <summary>
            Number of times this database was repaired before the last defrag.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.ulECCFixSuccess">
            <summary>
            Number of times a one bit error was successfully fixed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.logtimeECCFixSuccess">
            <summary>
            The last time a one bit error was successfully fixed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.ulECCFixSuccessOld">
            <summary>
            The number of times a one bit error was successfully fixed before the last repair.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.ulECCFixFail">
            <summary>
            Number of times an uncorrectable one bit error was encountered.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.logtimeECCFixFail">
            <summary>
            The last time an uncorrectable one bit error was encountered.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.ulECCFixFailOld">
            <summary>
            The number of times an uncorrectable one bit error was encountered.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.ulBadChecksum">
            <summary>
            Number of times a non-correctable checksum error was found.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.logtimeBadChecksum">
            <summary>
            The last time a non-correctable checksum error was found.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.ulBadChecksumOld">
            <summary>
            The number of times a non-correctable checksum error was found before the last repair.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.genCommitted">
            <summary>
            The maximum log generation committed to the database. Typically the current log generation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.bkinfoCopyPrev">
            <summary>
            Last successful copy backup.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4.bkinfoDiffPrev">
            <summary>
            Last successful differential backup. Reset when 
            bkinfoFullPrev is set.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC">
            <summary>
            Holds miscellaneous information about a database. This is
            the information that is contained in the database header.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulVersion">
            <summary>
            Version of Esent that created the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulUpdate">
            <summary>
            Incremental version of Esent that created the database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._signDb">
            <summary>
            Database signature.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._dbstate">
            <summary>
            Consistent/inconsistent state.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._lgposConsistent">
            <summary>
            Null if in inconsistent state.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._logtimeConsistent">
            <summary>
            Null if in inconsistent state.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._logtimeAttach">
            <summary>
            Last attach time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._lgposAttach">
            <summary>
            Lgpos at last attach.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._logtimeDetach">
            <summary>
            Last detach time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._lgposDetach">
            <summary>
            Lgpos at last detach.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._signLog">
            <summary>
            Logfile signature.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._bkinfoFullPrev">
            <summary>
            Last successful full backup.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._bkinfoIncPrev">
            <summary>
            Last successful incremental backup. Reset when 
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._bkinfoFullPrev"/> is set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._bkinfoFullCur">
            <summary>
            Current backup.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._fShadowingDisabled">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._fUpgradeDb">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._dwMajorVersion">
            <summary>
            OS major version.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._dwMinorVersion">
            <summary>
            OS minor version.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._dwBuildNumber">
            <summary>
            OS build number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._lSPNumber">
            <summary>
            OS Service Pack number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._cbPageSize">
            <summary>
            Database page size (0 = 4Kb page).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._genMinRequired">
            <summary>
            The minimum log generation required for replaying the logs.
            Typically the checkpoint generation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._genMaxRequired">
            <summary>
            The maximum log generation required for replaying the logs.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._logtimeGenMaxCreate">
            <summary>
            Creation time of the <see cref="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._genMaxRequired"/> logfile.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulRepairCount">
            <summary>
            Number of times repair has been called on this database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._logtimeRepair">
            <summary>
            The last time that repair was run against this database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulRepairCountOld">
            <summary>
            Number of times this database was repaired before the last defrag.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulECCFixSuccess">
            <summary>
            Number of times a one bit error was successfully fixed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._logtimeECCFixSuccess">
            <summary>
            The last time a one bit error was successfully fixed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulECCFixSuccessOld">
            <summary>
            The number of times a one bit error was successfully fixed before the last repair.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulECCFixFail">
            <summary>
            Number of times an uncorrectable one bit error was encountered.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._logtimeECCFixFail">
            <summary>
            The last time an uncorrectable one bit error was encountered.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulECCFixFailOld">
            <summary>
            The number of times an uncorrectable one bit error was encountered.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulBadChecksum">
            <summary>
            Number of times a non-correctable checksum error was found.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._logtimeBadChecksum">
            <summary>
            The last time a non-correctable checksum error was found.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._ulBadChecksumOld">
            <summary>
            The number of times a non-correctable checksum error was found before the last repair.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._genCommitted">
            <summary>
            The maximum log generation committed to the database. Typically the current log generation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._bkinfoCopyPrev">
            <summary>
            Last successful copy backup.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._bkinfoDiffPrev">
            <summary>
            Last successful differential backup. Reset when 
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC._bkinfoFullPrev"/> is set.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulVersion">
            <summary>
            Gets the version of Esent that created the database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulUpdate">
            <summary>
            Gets the incremental version of Esent that created the database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.signDb">
            <summary>
            Gets the database signature.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.dbstate">
            <summary>
            Gets the consistent/inconsistent state of the database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.lgposConsistent">
            <summary>
            Gets the lgpos when the database was made consistent.
            This value is null if the database is inconsistent.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.logtimeConsistent">
            <summary>
            Gets the time when the database was made consistent.
            This value is null if the database is inconsistent.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.logtimeAttach">
            <summary>
            Gets the time when the database was attached.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.lgposAttach">
            <summary>
            Gets the lgpos of the last attach.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.logtimeDetach">
            <summary>
            Gets the time of the last detach.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.lgposDetach">
            <summary>
            Gets the lgpos of the last detach.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.signLog">
            <summary>
            Gets the logfile signature of logs used to modify the database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.bkinfoFullPrev">
            <summary>
            Gets information about the last successful full backup.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.bkinfoIncPrev">
            <summary>
            Gets information about the last successful incremental backup.
            This value is reset when <see cref="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.bkinfoFullPrev"/> is set.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.bkinfoFullCur">
            <summary>
            Gets information about the current backup.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.fShadowingDisabled">
            <summary>
            Gets a value indicating whether catalog shadowing is enabled.
            This value is for internal use only.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.fUpgradeDb">
            <summary>
            Gets a value indicating whether the database is being upgraded.
            This value is for internal use only.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.dwMajorVersion">
            <summary>
            Gets the OS major version from the last attach.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.dwMinorVersion">
            <summary>
            Gets the OS minor version from the last attach.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.dwBuildNumber">
            <summary>
            Gets the OS build number from the last attach.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.lSPNumber">
            <summary>
            Gets the OS Service Pack number from the last attach.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.cbPageSize">
            <summary>
            Gets the database page size. A value of 0 means 4Kb pages.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.genMinRequired">
            <summary>
            Gets the minimum log generation required for replaying the logs.
            Typically the checkpoint generation.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.genMaxRequired">
            <summary>
            Gets the maximum log generation required for replaying the logs.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.logtimeGenMaxCreate">
            <summary>
            Gets the creation time of the <see cref="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.genMaxRequired"/> logfile.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulRepairCount">
            <summary>
            Gets the number of times repair has been called on this database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.logtimeRepair">
            <summary>
            Gets the last time that repair was run against this database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulRepairCountOld">
            <summary>
            Gets the number of times this database was repaired before the last defrag.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulECCFixSuccess">
            <summary>
            Gets the number of times a one bit error was successfully fixed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.logtimeECCFixSuccess">
            <summary>
            Gets the last time a one bit error was successfully fixed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulECCFixSuccessOld">
            <summary>
            Gets the number of times a one bit error was successfully fixed before the last repair.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulECCFixFail">
            <summary>
            Gets the number of times an uncorrectable one bit error was encountered.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.logtimeECCFixFail">
            <summary>
            Gets the last time an uncorrectable one bit error was encountered.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulECCFixFailOld">
            <summary>
            Gets the number of times an uncorrectable one bit error was encountered.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulBadChecksum">
            <summary>
            Gets the number of times a non-correctable checksum error was found.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.logtimeBadChecksum">
            <summary>
            Gets the last time a non-correctable checksum error was found.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ulBadChecksumOld">
            <summary>
            Gets the number of times a non-correctable checksum error was found before the last repair.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.genCommitted">
            <summary>
            Gets the maximum log generation committed to the database. Typically the current log generation.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.bkinfoCopyPrev">
            <summary>
            Gets information about the last successful copy backup.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.bkinfoDiffPrev">
            <summary>
            Gets information about the last successful differential backup. Reset when 
            <see cref="P:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.bkinfoFullPrev"/> is set.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.ToString">
            <summary>
            Gets a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            True if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.Equals(Microsoft.Isam.Esent.Interop.JET_DBINFOMISC)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            True if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.SetFromNativeDbinfoMisc(Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC@)">
            <summary>
            Sets the members of this object from a native object.
            </summary>
            <param name="native">The native object.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.SetFromNativeDbinfoMisc(Microsoft.Isam.Esent.Interop.NATIVE_DBINFOMISC4@)">
            <summary>
            Sets the members of this object from a native object.
            </summary>
            <param name="native">The native object.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.GetNativeDbinfomisc">
            <summary>
            Calculates the native version of the structure.
            </summary>
            <returns>The native version of the structure.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC.GetNativeDbinfomisc4">
            <summary>
            Calculates the native version of the structure.
            </summary>
            <returns>The native version of the structure.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_dbstate">
            <summary>
            Database states (used in <see cref="T:Microsoft.Isam.Esent.Interop.JET_DBINFOMISC"/>).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_dbstate.JustCreated">
            <summary>
            The database was just created.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_dbstate.DirtyShutdown">
            <summary>
            Dirty shutdown (inconsistent) database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_dbstate.CleanShutdown">
            <summary>
            Clean shutdown (consistent) database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_dbstate.BeingConverted">
            <summary>
            Database is being converted.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_dbstate.ForceDetach">
            <summary>
            Database was force-detached.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN">
            <summary>
            Native (unmanaged) version of the JET_ENUMCOLUMN structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.columnid">
            <summary>
            The columnid that was enumerated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.err">
            <summary>
            The column status code from the enumeration of the column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.cbData">
            <summary>
            The size of the value that was enumerated for the column.
            This member is only used if <see cref="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.err"/> is equal to
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/>.
            </summary>
            <remarks>
            The unmanaged JET_ENUMCOLUMN structure is a union so this
            is aliased with cEnumColumnValue.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.pvData">
            <summary>
            The the value that was enumerated for the column.
            This member is only used if <see cref="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.err"/> is equal to
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/>.
            </summary>
            <remarks>
            The unmanaged JET_ENUMCOLUMN structure is a union so this
            is aliased with rgEnumColumnValue.
            </remarks>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.cEnumColumnValue">
            <summary>
            Gets or sets the number of entries in rgEnumColumnValue.
            This member is only used if <see cref="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.err"/> is not
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/>.
            </summary>
            <remarks>
            The unmanaged JET_ENUMCOLUMN structure is a union so this
            property uses cbData as its backing storage.
            </remarks>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.rgEnumColumnValue">
            <summary>
            Gets or sets an array of column values.
            This member is only used if <see cref="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN.err"/> is not
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/>.
            </summary>
            <remarks>
            The unmanaged JET_ENUMCOLUMN structure is a union so this
            property uses pvData as its backing storage.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN">
            <summary>
            Enumerates the column values of a record using the JetEnumerateColumns
            function. JetEnumerateColumns returns an array of JET_ENUMCOLUMNVALUE
            structures. The array is returned in memory that was allocated using
            the callback that was supplied to that function.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.columnid">
            <summary>
            Gets the columnid ID that was enumerated.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.err">
            <summary>
            Gets the column status code that results from the enumeration.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.cEnumColumnValue">
            <summary>
            Gets the number of column values enumerated for the column.
            This member is only used if <see cref="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.err"/> is not
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.rgEnumColumnValue">
            <summary>
            Gets the enumerated column values for the column.
            This member is only used if <see cref="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.err"/> is not
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.cbData">
            <summary>
            Gets the size of the value that was enumerated for the column.
            This member is only used if <see cref="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.err"/> is equal to
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.pvData">
            <summary>
            Gets the the value that was enumerated for the column.
            This member is only used if <see cref="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.err"/> is equal to
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue"/>.
            This points to memory allocated with the 
            <see cref="T:Microsoft.Isam.Esent.Interop.JET_PFNREALLOC"/> allocator callback passed to
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID[],System.Int32@,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN[]@,Microsoft.Isam.Esent.Interop.JET_PFNREALLOC,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit)"/>.
            Remember to release the memory when finished.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN.SetFromNativeEnumColumn(Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMN)">
            <summary>
            Sets the fields of the object from a native JET_ENUMCOLUMN struct.
            </summary>
            <param name="value">
            The native enumcolumn to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNID">
            <summary>
            The native (unmanaged) version of the
            <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNID.columnid">
            <summary>
            Column ID to enumerate.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNID.ctagSequence">
            <summary>
            Count of column values to enumerate.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNID.rgtagSequence">
            <summary>
            Column values to enumerate.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID">
            <summary>
            Enumerates a specific set of columns and, optionally, a specific set
            of multiple values for those columns when the JetEnumerateColumns
            function is used. JetEnumerateColumns optionally takes an array of
            JET_ENUMCOLUMNID structures.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID.columnid">
            <summary>
            Gets or sets the columnid ID to enumerate.
            </summary>
            <remarks>
            If the column ID is 0 (zero) then the enumeration of this column is
            skipped and a corresponding slot in the output array of JET_ENUMCOLUMN
            structures will be generated with a column state of JET_wrnColumnSkipped.
            </remarks>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID.ctagSequence">
            <summary>
            Gets or sets the count of column values (by one-based index) to
            enumerate for the specified column ID. If ctagSequence is 0 (zero) then
            rgtagSequence is ignored and all column values for the specified column
            ID will be enumerated.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID.rgtagSequence">
            <summary>
            Gets or sets the array of one-based indices into the array of column values for a
            given column. A single element is an itagSequence which is defined in
            JET_RETRIEVECOLUMN. An itagSequence of 0 (zero) means "skip". An
            itagSequence of 1 means return the first column value of the column,
            2 means the second, and so on.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID.CheckDataSize">
            <summary>
            Check to see if ctagSequence is negative or greater than the length
            of rgtagSequence.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID.GetNativeEnumColumnid">
            <summary>
            Gets the native (interop) version of this object.
            </summary>
            <returns>A NATIVE_ENUMCOLUMNID representing this object.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNVALUE">
            <summary>
            Native (unmanaged) version of the JET_ENUMCOLUMNVALUE class.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNVALUE.itagSequence">
            <summary>
            The column value that was enumerated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNVALUE.err">
            <summary>
            Error or warning from the enumeration.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNVALUE.cbData">
            <summary>
            Size of returned data.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNVALUE.pvData">
            <summary>
            Pointer to returned data.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE">
            <summary>
            Enumerates the column values of a record using the JetEnumerateColumns
            function. <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetEnumerateColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNID[],System.Int32@,Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMN[]@,Microsoft.Isam.Esent.Interop.JET_PFNREALLOC,System.IntPtr,System.Int32,Microsoft.Isam.Esent.Interop.EnumerateColumnsGrbit)"/>
            returns an array of JET_ENUMCOLUMNVALUE
            structures. The array is returned in memory that was allocated using
            the callback that was supplied to that function.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE.itagSequence">
            <summary>
            Gets the column value (by one-based index) that was enumerated.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE.err">
            <summary>
            Gets the column status code resulting from the enumeration of the
            column value.
            </summary>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnNull"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSkipped"/>
            <seealso cref="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnTruncated"/>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE.cbData">
            <summary>
            Gets the size of the column value for the column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE.pvData">
            <summary>
            Gets the value that was enumerated for the column.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_ENUMCOLUMNVALUE.SetFromNativeEnumColumnValue(Microsoft.Isam.Esent.Interop.NATIVE_ENUMCOLUMNVALUE)">
            <summary>
            Sets the fields of the object from a native JET_ENUMCOLUMN struct.
            </summary>
            <param name="value">
            The native enumcolumn to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_err">
            <summary>
            ESENT error codes.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.Success">
            <summary>
            Successful operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RfsFailure">
            <summary>
            Resource Failure Simulator failure
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RfsNotArmed">
            <summary>
            Resource Failure Simulator not initialized
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileClose">
            <summary>
            Could not close file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfThreads">
            <summary>
            Could not start thread
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyIO">
            <summary>
            System busy due to too many IOs
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TaskDropped">
            <summary>
            A requested async task could not be executed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InternalError">
            <summary>
            Fatal internal error
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DisabledFunctionality">
            <summary>
            You are running MinESE, that does not have all features compiled in.  This functionality is only supported in a full version of ESE.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.UnloadableOSFunctionality">
            <summary>
            The desired OS functionality could not be located and loaded / linked.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DeviceMissing">
            <summary>
            A required hardware device or functionality was missing.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DeviceMisconfigured">
            <summary>
            A required hardware device was misconfigured externally.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DeviceTimeout">
            <summary>
            Timeout occurred while waiting for a hardware device to respond.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DeviceFailure">
            <summary>
            A required hardware device didn't function as expected.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseBufferDependenciesCorrupted">
            <summary>
            Buffer dependencies improperly set. Recovery failure
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.PreviousVersion">
            <summary>
            Version already existed. Recovery failure
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.PageBoundary">
            <summary>
            Reached Page Boundary
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.KeyBoundary">
            <summary>
            Reached Key Boundary
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadPageLink">
            <summary>
            Database corrupted
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadBookmark">
            <summary>
            Bookmark has no corresponding address in database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NTSystemCallFailed">
            <summary>
            A call to the operating system failed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadParentPageLink">
            <summary>
            Database corrupted
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SPAvailExtCacheOutOfSync">
            <summary>
            AvailExt cache doesn't match btree
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SPAvailExtCorrupted">
            <summary>
            AvailExt space tree is corrupt
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SPAvailExtCacheOutOfMemory">
            <summary>
            Out of memory allocating an AvailExt cache node
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SPOwnExtCorrupted">
            <summary>
            OwnExt space tree is corrupt
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DbTimeCorrupted">
            <summary>
            Dbtime on current page is greater than global database dbtime
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.KeyTruncated">
            <summary>
            key truncated on index that disallows key truncation
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseLeakInSpace">
            <summary>
            Some database pages have become unreachable even from the avail tree, only an offline defragmentation can return the lost space.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadEmptyPage">
            <summary>
            Database corrupted. Searching an unexpectedly empty page.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadLineCount">
            <summary>
            Number of lines on the page is too few compared to the line being operated on
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.KeyTooBig">
            <summary>
            Key is too large
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotSeparateIntrinsicLV">
            <summary>
            illegal attempt to separate an LV which must be intrinsic
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SeparatedLongValue">
            <summary>
            Operation not supported on separated long-value
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MustBeSeparateLongValue">
            <summary>
            Can only preread long value columns that can be separate, e.g. not size constrained so that they are fixed or variable columns
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidPreread">
            <summary>
            Cannot preread long values when current index secondary
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidColumnReference">
            <summary>
            Column reference is invalid
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.StaleColumnReference">
            <summary>
            Column reference is stale
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CompressionIntegrityCheckFailed">
            <summary>
            A compression integrity check failed. Decompressing data failed the integrity checksum indicating a data corruption in the compress/decompress pipeline.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidLoggedOperation">
            <summary>
            Logged operation cannot be redone
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogFileCorrupt">
            <summary>
            Log file is corrupt
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NoBackupDirectory">
            <summary>
            No backup directory given
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BackupDirectoryNotEmpty">
            <summary>
            The backup directory is not empty
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BackupInProgress">
            <summary>
            Backup is active already
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RestoreInProgress">
            <summary>
            Restore in progress
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MissingPreviousLogFile">
            <summary>
            Missing the log file for check point
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogWriteFail">
            <summary>
            Failure writing to log file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogDisabledDueToRecoveryFailure">
            <summary>
            Try to log something after recovery failed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotLogDuringRecoveryRedo">
            <summary>
            Try to log something during recovery redo
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogGenerationMismatch">
            <summary>
            Name of logfile does not match internal generation number
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadLogVersion">
            <summary>
            Version of log file is not compatible with Jet version
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidLogSequence">
            <summary>
            Timestamp in next log does not match expected
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LoggingDisabled">
            <summary>
            Log is not active
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogBufferTooSmall">
            <summary>
            An operation generated a log record which was too large to fit in the log buffer or in a single log file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogSequenceEnd">
            <summary>
            Maximum log file number exceeded
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NoBackup">
            <summary>
            No backup in progress
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidBackupSequence">
            <summary>
            Backup call out of sequence
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BackupNotAllowedYet">
            <summary>
            Cannot do backup now
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DeleteBackupFileFail">
            <summary>
            Could not delete backup file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MakeBackupDirectoryFail">
            <summary>
            Could not make backup temp directory
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidBackup">
            <summary>
            Cannot perform incremental backup when circular logging enabled
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecoveredWithErrors">
            <summary>
            Restored with errors
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MissingLogFile">
            <summary>
            Current log file missing
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogDiskFull">
            <summary>
            Log disk full
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadLogSignature">
            <summary>
            Bad signature for a log file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadDbSignature">
            <summary>
            Bad signature for a db file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadCheckpointSignature">
            <summary>
            Bad signature for a checkpoint file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CheckpointCorrupt">
            <summary>
            Checkpoint file not found or corrupt
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MissingPatchPage">
            <summary>
            Patch file page not found during recovery
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadPatchPage">
            <summary>
            Patch file page is not valid
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RedoAbruptEnded">
            <summary>
            Redo abruptly ended due to sudden failure in reading logs from log file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.PatchFileMissing">
            <summary>
            Hard restore detected that patch file is missing from backup set
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseLogSetMismatch">
            <summary>
            Database does not belong with the current set of log files
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseStreamingFileMismatch">
            <summary>
            Database and streaming file do not match each other
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogFileSizeMismatch">
            <summary>
            actual log file size does not match JET_paramLogFileSize
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CheckpointFileNotFound">
            <summary>
            Could not locate checkpoint file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RequiredLogFilesMissing">
            <summary>
            The required log files for recovery is missing.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SoftRecoveryOnBackupDatabase">
            <summary>
            Soft recovery is intended on a backup database. Restore should be used instead
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogFileSizeMismatchDatabasesConsistent">
            <summary>
            databases have been recovered, but the log file size used during recovery does not match JET_paramLogFileSize
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogSectorSizeMismatch">
            <summary>
            the log file sector size does not match the current volume's sector size
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogSectorSizeMismatchDatabasesConsistent">
            <summary>
            databases have been recovered, but the log file sector size (used during recovery) does not match the current volume's sector size
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogSequenceEndDatabasesConsistent">
            <summary>
            databases have been recovered, but all possible log generations in the current sequence are used; delete all log files and the checkpoint file and backup the databases before continuing
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.StreamingDataNotLogged">
            <summary>
            Illegal attempt to replay a streaming file operation where the data wasn't logged. Probably caused by an attempt to roll-forward with circular logging enabled
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseDirtyShutdown">
            <summary>
            Database was not shutdown cleanly. Recovery must first be run to properly complete database operations for the previous shutdown.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ConsistentTimeMismatch">
            <summary>
            Database last consistent time unmatched
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabasePatchFileMismatch">
            <summary>
            Patch file is not generated from this backup
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.EndingRestoreLogTooLow">
            <summary>
            The starting log number too low for the restore
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.StartingRestoreLogTooHigh">
            <summary>
            The starting log number too high for the restore
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.GivenLogFileHasBadSignature">
            <summary>
            Restore log file has bad signature
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.GivenLogFileIsNotContiguous">
            <summary>
            Restore log file is not contiguous
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MissingRestoreLogFiles">
            <summary>
            Some restore log files are missing
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MissingFullBackup">
            <summary>
            The database missed a previous full backup before incremental backup
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadBackupDatabaseSize">
            <summary>
            The backup database size is not in 4k
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseAlreadyUpgraded">
            <summary>
            Attempted to upgrade a database that is already current
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseIncompleteUpgrade">
            <summary>
            Attempted to use a database which was only partially converted to the current format -- must restore from backup
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MissingCurrentLogFiles">
            <summary>
            Some current log files are missing for continuous restore
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DbTimeTooOld">
            <summary>
            dbtime on page smaller than dbtimeBefore in record
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DbTimeTooNew">
            <summary>
            dbtime on page in advance of the dbtimeBefore in record
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MissingFileToBackup">
            <summary>
            Some log or patch files are missing during backup
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogTornWriteDuringHardRestore">
            <summary>
            torn-write was detected in a backup set during hard restore
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogTornWriteDuringHardRecovery">
            <summary>
            torn-write was detected during hard recovery (log was not part of a backup set)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogCorruptDuringHardRestore">
            <summary>
            corruption was detected in a backup set during hard restore
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogCorruptDuringHardRecovery">
            <summary>
            corruption was detected during hard recovery (log was not part of a backup set)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MustDisableLoggingForDbUpgrade">
            <summary>
            Cannot have logging enabled while attempting to upgrade db
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadRestoreTargetInstance">
            <summary>
            TargetInstance specified for restore is not found or log files don't match
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecoveredWithoutUndo">
            <summary>
            Soft recovery successfully replayed all operations, but the Undo phase of recovery was skipped
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabasesNotFromSameSnapshot">
            <summary>
            Databases to be restored are not from the same shadow copy backup
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SoftRecoveryOnSnapshot">
            <summary>
            Soft recovery on a database from a shadow copy backup set
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CommittedLogFilesMissing">
            <summary>
            One or more logs that were committed to this database, are missing.  These log files are required to maintain durable ACID semantics, but not required to maintain consistency if the JET_bitReplayIgnoreLostLogs bit is specified during recovery.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SectorSizeNotSupported">
            <summary>
            The physical sector size reported by the disk subsystem, is unsupported by ESE for a specific file type.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecoveredWithoutUndoDatabasesConsistent">
            <summary>
            Soft recovery successfully replayed all operations and intended to skip the Undo phase of recovery, but the Undo phase was not required
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CommittedLogFileCorrupt">
            <summary>
            One or more logs were found to be corrupt during recovery.  These log files are required to maintain durable ACID semantics, but not required to maintain consistency if the JET_bitIgnoreLostLogs bit and JET_paramDeleteOutOfRangeLogs is specified during recovery.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogSequenceChecksumMismatch">
            <summary>
            The previous log's accumulated segment checksum doesn't match the next log
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.PageInitializedMismatch">
            <summary>
            Database divergence mismatch. Page was uninitialized on remote node, but initialized on local node.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.UnicodeTranslationBufferTooSmall">
            <summary>
            Unicode translation buffer too small
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.UnicodeTranslationFail">
            <summary>
            Unicode normalization failed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.UnicodeNormalizationNotSupported">
            <summary>
            OS does not provide support for Unicode normalisation (and no normalisation callback was specified)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.UnicodeLanguageValidationFailure">
            <summary>
            Can not validate the language
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ExistingLogFileHasBadSignature">
            <summary>
            Existing log file has bad signature
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ExistingLogFileIsNotContiguous">
            <summary>
            Existing log file is not contiguous
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogReadVerifyFailure">
            <summary>
            Checksum error in log file during backup
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CheckpointDepthTooDeep">
            <summary>
            too many outstanding generations between checkpoint and current generation
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RestoreOfNonBackupDatabase">
            <summary>
            hard recovery attempted on a database that wasn't a backup database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogFileNotCopied">
            <summary>
            log truncation attempted but not all required logs were copied
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SurrogateBackupInProgress">
            <summary>
            A surrogate backup is in progress.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TransactionTooLong">
            <summary>
            Too many outstanding generations between JetBeginTransaction and current generation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.EngineFormatVersionNoLongerSupportedTooLow">
            <summary>
            The specified JET_ENGINEFORMATVERSION value is too low to be supported by this version of ESE.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.EngineFormatVersionNotYetImplementedTooHigh">
            <summary>
            The specified JET_ENGINEFORMATVERSION value is too high, higher than this version of ESE knows about.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.EngineFormatVersionParamTooLowForRequestedFeature">
            <summary>
            Thrown by a format feature (not at JetSetSystemParameter) if the client requests a feature that requires a version higher than that set for the JET_paramEngineFormatVersion.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.EngineFormatVersionSpecifiedTooLowForLogVersion">
            <summary>
            The specified JET_ENGINEFORMATVERSION is set too low for this log stream, the log files have already been upgraded to a higher version.  A higher JET_ENGINEFORMATVERSION value must be set in the param.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.EngineFormatVersionSpecifiedTooLowForDatabaseVersion">
            <summary>
            The specified JET_ENGINEFORMATVERSION is set too low for this database file, the database file has already been upgraded to a higher version.  A higher JET_ENGINEFORMATVERSION value must be set in the param.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BackupAbortByServer">
            <summary>
            Backup was aborted by server by calling JetTerm with JET_bitTermStopBackup or by calling JetStopBackup
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidGrbit">
            <summary>
            Invalid flags parameter
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TermInProgress">
            <summary>
            Termination in progress
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FeatureNotAvailable">
            <summary>
            API not supported
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidName">
            <summary>
            Invalid name
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidParameter">
            <summary>
            Invalid API parameter
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseFileReadOnly">
            <summary>
            Tried to attach a read-only database file for read/write operations
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidDatabaseId">
            <summary>
            Invalid database id
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfMemory">
            <summary>
            Out of Memory
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfDatabaseSpace">
            <summary>
            Maximum database size reached
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfCursors">
            <summary>
            Out of table cursors
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfBuffers">
            <summary>
            Out of database page buffers
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyIndexes">
            <summary>
            Too many indexes
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyKeys">
            <summary>
            Too many columns in an index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecordDeleted">
            <summary>
            Record has been deleted
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ReadVerifyFailure">
            <summary>
            Checksum error on a database page
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.PageNotInitialized">
            <summary>
            Blank database page
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfFileHandles">
            <summary>
            Out of file handles
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DiskReadVerificationFailure">
            <summary>
            The OS returned ERROR_CRC from file IO
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DiskIO">
            <summary>
            Disk IO error
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidPath">
            <summary>
            Invalid file path
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidSystemPath">
            <summary>
            Invalid system path
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidLogDirectory">
            <summary>
            Invalid log directory
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecordTooBig">
            <summary>
            Record larger than maximum size
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyOpenDatabases">
            <summary>
            Too many open databases
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidDatabase">
            <summary>
            Not a database file
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NotInitialized">
            <summary>
            Database engine not initialized
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.AlreadyInitialized">
            <summary>
            Database engine already initialized
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InitInProgress">
            <summary>
            Database engine is being initialized
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileAccessDenied">
            <summary>
            Cannot access file, the file is locked or in use
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.QueryNotSupported">
            <summary>
            Query support unavailable
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SQLLinkNotSupported">
            <summary>
            SQL Link support unavailable
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BufferTooSmall">
            <summary>
            Buffer is too small
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyColumns">
            <summary>
            Too many columns defined
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ContainerNotEmpty">
            <summary>
            Container is not empty
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidFilename">
            <summary>
            Filename is invalid
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidBookmark">
            <summary>
            Invalid bookmark
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnInUse">
            <summary>
            Column used in an index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidBufferSize">
            <summary>
            Data buffer doesn't match column size
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnNotUpdatable">
            <summary>
            Cannot set column value
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexInUse">
            <summary>
            Index is in use
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LinkNotSupported">
            <summary>
            Link support unavailable
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NullKeyDisallowed">
            <summary>
            Null keys are disallowed on index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NotInTransaction">
            <summary>
            Operation must be within a transaction
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MustRollback">
            <summary>
            Transaction must rollback because failure of unversioned update
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyActiveUsers">
            <summary>
            Too many active database users
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidCountry">
            <summary>
            Invalid or unknown country/region code
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidLanguageId">
            <summary>
            Invalid or unknown language id
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidCodePage">
            <summary>
            Invalid or unknown code page
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidLCMapStringFlags">
            <summary>
            Invalid flags for LCMapString()
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.VersionStoreEntryTooBig">
            <summary>
            Attempted to create a version store entry (RCE) larger than a version bucket
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.VersionStoreOutOfMemoryAndCleanupTimedOut">
            <summary>
            Version store out of memory (and cleanup attempt failed to complete)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.VersionStoreOutOfMemory">
            <summary>
            Version store out of memory (cleanup already attempted)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CurrencyStackOutOfMemory">
            <summary>
            UNUSED: lCSRPerfFUCB * g_lCursorsMax exceeded (XJET only)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotIndex">
            <summary>
            Cannot index escrow column
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecordNotDeleted">
            <summary>
            Record has not been deleted
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyMempoolEntries">
            <summary>
            Too many mempool entries requested
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfObjectIDs">
            <summary>
            Out of btree ObjectIDs (perform offline defrag to reclaim freed/unused ObjectIds)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfLongValueIDs">
            <summary>
            Long-value ID counter has reached maximum value. (perform offline defrag to reclaim free/unused LongValueIDs)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfAutoincrementValues">
            <summary>
            Auto-increment counter has reached maximum value (offline defrag WILL NOT be able to reclaim free/unused Auto-increment values).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfDbtimeValues">
            <summary>
            Dbtime counter has reached maximum value (perform offline defrag to reclaim free/unused Dbtime values)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfSequentialIndexValues">
            <summary>
            Sequential index counter has reached maximum value (perform offline defrag to reclaim free/unused SequentialIndex values)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RunningInOneInstanceMode">
            <summary>
            Multi-instance call with single-instance mode enabled
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RunningInMultiInstanceMode">
            <summary>
            Single-instance call with multi-instance mode enabled
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SystemParamsAlreadySet">
            <summary>
            Global system parameters have already been set
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SystemPathInUse">
            <summary>
            System path already used by another database instance
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogFilePathInUse">
            <summary>
            Logfile path already used by another database instance
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TempPathInUse">
            <summary>
            Temp path already used by another database instance
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InstanceNameInUse">
            <summary>
            Instance Name already in use
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SystemParameterConflict">
            <summary>
            Global system parameters have already been set, but to a conflicting or disagreeable state to the specified values.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InstanceUnavailable">
            <summary>
            This instance cannot be used because it encountered a fatal error
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseUnavailable">
            <summary>
            This database cannot be used because it encountered a fatal error
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InstanceUnavailableDueToFatalLogDiskFull">
            <summary>
            This instance cannot be used because it encountered a log-disk-full error performing an operation (likely transaction rollback) that could not tolerate failure
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidSesparamId">
            <summary>
            This JET_sesparam* identifier is not known to the ESE engine.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyRecords">
            <summary>
            There are too many records to enumerate, switch to an API that handles 64-bit numbers
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidDbparamId">
            <summary>
            This JET_dbparam* identifier is not known to the ESE engine.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OutOfSessions">
            <summary>
            Out of sessions
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.WriteConflict">
            <summary>
            Write lock failed due to outstanding write lock
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TransTooDeep">
            <summary>
            Transactions nested too deeply
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidSesid">
            <summary>
            Invalid session handle
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.WriteConflictPrimaryIndex">
            <summary>
            Update attempted on uncommitted primary index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InTransaction">
            <summary>
            Operation not allowed within a transaction
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RollbackRequired">
            <summary>
            Must rollback current transaction -- cannot commit or begin a new one
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TransReadOnly">
            <summary>
            Read-only transaction tried to modify the database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SessionWriteConflict">
            <summary>
            Attempt to replace the same record by two different cursors in the same session
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecordTooBigForBackwardCompatibility">
            <summary>
            record would be too big if represented in a database format from a previous version of Jet
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotMaterializeForwardOnlySort">
            <summary>
            The temp table could not be created due to parameters that conflict with JET_bitTTForwardOnly
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SesidTableIdMismatch">
            <summary>
            This session handle can't be used with this table id
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidInstance">
            <summary>
            Invalid instance handle
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DirtyShutdown">
            <summary>
            The instance was shutdown successfully but all the attached databases were left in a dirty state by request via JET_bitTermDirty
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ReadPgnoVerifyFailure">
            <summary>
            The database page read from disk had the wrong page number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ReadLostFlushVerifyFailure">
            <summary>
            The database page read from disk had a previous write not represented on the page.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileSystemCorruption">
            <summary>
            File system operation failed with an error indicating the file system is corrupt.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecoveryVerifyFailure">
            <summary>
            One or more database pages read from disk during recovery do not match the expected state.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FilteredMoveNotSupported">
            <summary>
            Attempted to provide a filter to JetSetCursorFilter() in an unsupported scenario.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MustCommitDistributedTransactionToLevel0">
            <summary>
            Attempted to PrepareToCommit a distributed transaction to non-zero level
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DistributedTransactionAlreadyPreparedToCommit">
            <summary>
            Attempted a write-operation after a distributed transaction has called PrepareToCommit
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NotInDistributedTransaction">
            <summary>
            Attempted to PrepareToCommit a non-distributed transaction
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DistributedTransactionNotYetPreparedToCommit">
            <summary>
            Attempted to commit a distributed transaction, but PrepareToCommit has not yet been called
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotNestDistributedTransactions">
            <summary>
            Attempted to begin a distributed transaction when not at level 0
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DTCMissingCallback">
            <summary>
            Attempted to begin a distributed transaction but no callback for DTC coordination was specified on initialisation
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DTCMissingCallbackOnRecovery">
            <summary>
            Attempted to recover a distributed transaction but no callback for DTC coordination was specified on initialisation
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DTCCallbackUnexpectedError">
            <summary>
            Unexpected error code returned from DTC callback
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseDuplicate">
            <summary>
            Database already exists
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseInUse">
            <summary>
            Database in use
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseNotFound">
            <summary>
            No such database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseInvalidName">
            <summary>
            Invalid database name
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseInvalidPages">
            <summary>
            Invalid number of pages
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseCorrupted">
            <summary>
            Non database file or corrupted db
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseLocked">
            <summary>
            Database exclusively locked
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotDisableVersioning">
            <summary>
            Cannot disable versioning for this database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidDatabaseVersion">
            <summary>
            Database engine is incompatible with database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.Database200Format">
            <summary>
            The database is in an older (200) format
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.Database400Format">
            <summary>
            The database is in an older (400) format
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.Database500Format">
            <summary>
            The database is in an older (500) format
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.PageSizeMismatch">
            <summary>
            The database page size does not match the engine
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyInstances">
            <summary>
            Cannot start any more database instances
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseSharingViolation">
            <summary>
            A different database instance is using this database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.AttachedDatabaseMismatch">
            <summary>
            An outstanding database attachment has been detected at the start or end of recovery, but database is missing or does not match attachment info
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseInvalidPath">
            <summary>
            Specified path to database file is illegal
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseIdInUse">
            <summary>
            A database is being assigned an id already in use
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ForceDetachNotAllowed">
            <summary>
            Force Detach allowed only after normal detach errored out
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CatalogCorrupted">
            <summary>
            Corruption detected in catalog
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.PartiallyAttachedDB">
            <summary>
            Database is partially attached. Cannot complete attach operation
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseSignInUse">
            <summary>
            Database with same signature in use
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseCorruptedNoRepair">
            <summary>
            Corrupted db but repair not allowed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidCreateDbVersion">
            <summary>
            recovery tried to replay a database creation, but the database was originally created with an incompatible (likely older) version of the database engine
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseIncompleteIncrementalReseed">
            <summary>
            The database cannot be attached because it is currently being rebuilt as part of an incremental reseed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseInvalidIncrementalReseed">
            <summary>
            The database is not a valid state to perform an incremental reseed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseFailedIncrementalReseed">
            <summary>
            The incremental reseed being performed on the specified database cannot be completed due to a fatal error.  A full reseed is required to recover this database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NoAttachmentsFailedIncrementalReseed">
            <summary>
            The incremental reseed being performed on the specified database cannot be completed because the min required log contains no attachment info.  A full reseed is required to recover this database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseNotReady">
            <summary>
            Recovery on this database has not yet completed enough to permit access.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseAttachedForRecovery">
            <summary>
            Database is attached but only for recovery.  It must be explicitly attached before it can be opened. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TransactionsNotReadyDuringRecovery">
            <summary>
            Recovery has not seen any Begin0/Commit0 records and so does not know what trxBegin0 to assign to this transaction
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TableLocked">
            <summary>
            Table is exclusively locked
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TableDuplicate">
            <summary>
            Table already exists
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TableInUse">
            <summary>
            Table is in use, cannot lock
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ObjectNotFound">
            <summary>
            No such table or object
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DensityInvalid">
            <summary>
            Bad file/index density
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TableNotEmpty">
            <summary>
            Table is not empty
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidTableId">
            <summary>
            Invalid table id
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyOpenTables">
            <summary>
            Cannot open any more tables (cleanup already attempted)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IllegalOperation">
            <summary>
            Oper. not supported on table
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyOpenTablesAndCleanupTimedOut">
            <summary>
            Cannot open any more tables (cleanup attempt failed to complete)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ObjectDuplicate">
            <summary>
            Table or object name in use
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidObject">
            <summary>
            Object is invalid for operation
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotDeleteTempTable">
            <summary>
            Use CloseTable instead of DeleteTable to delete temp table
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotDeleteSystemTable">
            <summary>
            Illegal attempt to delete a system table
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotDeleteTemplateTable">
            <summary>
            Illegal attempt to delete a template table
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ExclusiveTableLockRequired">
            <summary>
            Must have exclusive lock on table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FixedDDL">
            <summary>
            DDL operations prohibited on this table
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FixedInheritedDDL">
            <summary>
            On a derived table, DDL operations are prohibited on inherited portion of DDL
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotNestDDL">
            <summary>
            Nesting of hierarchical DDL is not currently supported.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DDLNotInheritable">
            <summary>
            Tried to inherit DDL from a table not marked as a template table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidSettings">
            <summary>
            System parameters were set improperly
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ClientRequestToStopJetService">
            <summary>
            Client has requested stop service
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotAddFixedVarColumnToDerivedTable">
            <summary>
            Template table was created with NoFixedVarColumnsInDerivedTables
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexCantBuild">
            <summary>
            Index build failed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexHasPrimary">
            <summary>
            Primary index already defined
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexDuplicate">
            <summary>
            Index is already defined
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexNotFound">
            <summary>
            No such index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexMustStay">
            <summary>
            Cannot delete clustered index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexInvalidDef">
            <summary>
            Illegal index definition
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidCreateIndex">
            <summary>
            Invalid create index description
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyOpenIndexes">
            <summary>
            Out of index description blocks
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MultiValuedIndexViolation">
            <summary>
            Non-unique inter-record index keys generated for a multivalued index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexBuildCorrupted">
            <summary>
            Failed to build a secondary index that properly reflects primary index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.PrimaryIndexCorrupted">
            <summary>
            Primary index is corrupt. The database must be defragmented or the table deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SecondaryIndexCorrupted">
            <summary>
            Secondary index is corrupt. The database must be defragmented or the affected index must be deleted. If the corrupt index is over Unicode text, a likely cause is a sort-order change.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidIndexId">
            <summary>
            Illegal index id
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexTuplesSecondaryIndexOnly">
            <summary>
            tuple index can only be on a secondary index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexTuplesTooManyColumns">
            <summary>
            tuple index may only have eleven columns in the index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexTuplesNonUniqueOnly">
            <summary>
            tuple index must be a non-unique index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexTuplesTextBinaryColumnsOnly">
            <summary>
            tuple index must be on a text/binary column
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexTuplesVarSegMacNotAllowed">
            <summary>
            tuple index does not allow setting cbVarSegMac
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexTuplesInvalidLimits">
            <summary>
            invalid min/max tuple length or max characters to index specified
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexTuplesCannotRetrieveFromIndex">
            <summary>
            cannot call RetrieveColumn() with RetrieveFromIndex on a tuple index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.IndexTuplesKeyTooSmall">
            <summary>
            specified key does not meet minimum tuple length
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidLVChunkSize">
            <summary>
            Specified LV chunk size is not supported
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnCannotBeEncrypted">
            <summary>
            Only JET_coltypLongText and JET_coltypLongBinary columns without default values can be encrypted
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotIndexOnEncryptedColumn">
            <summary>
            Cannot index encrypted column
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnLong">
            <summary>
            Column value is long
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnNoChunk">
            <summary>
            No such chunk in long value
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnDoesNotFit">
            <summary>
            Field will not fit in record
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NullInvalid">
            <summary>
            Null not valid
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnIndexed">
            <summary>
            Column indexed, cannot delete
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnTooBig">
            <summary>
            Field length is greater than maximum
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnNotFound">
            <summary>
            No such column
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnDuplicate">
            <summary>
            Field is already defined
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MultiValuedColumnMustBeTagged">
            <summary>
            Attempted to create a multi-valued column, but column was not Tagged
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnRedundant">
            <summary>
            Second autoincrement or version column
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidColumnType">
            <summary>
            Invalid column data type
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TaggedNotNULL">
            <summary>
            No non-NULL tagged columns
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NoCurrentIndex">
            <summary>
            Invalid w/o a current index
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.KeyIsMade">
            <summary>
            The key is completely made
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadColumnId">
            <summary>
            Column Id Incorrect
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.BadItagSequence">
            <summary>
            Bad itagSequence for tagged column
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnInRelationship">
            <summary>
            Cannot delete, column participates in relationship
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CannotBeTagged">
            <summary>
            AutoIncrement and Version cannot be tagged
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DefaultValueTooBig">
            <summary>
            Default value exceeds maximum size
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MultiValuedDuplicate">
            <summary>
            Duplicate detected on a unique multi-valued column
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LVCorrupted">
            <summary>
            Corruption encountered in long-value tree
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.MultiValuedDuplicateAfterTruncation">
            <summary>
            Duplicate detected on a unique multi-valued column after data was normalized, and normalizing truncated the data before comparison
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DerivedColumnCorruption">
            <summary>
            Invalid column in derived table
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidPlaceholderColumn">
            <summary>
            Tried to convert column to a primary index placeholder, but column doesn't meet necessary criteria
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnCannotBeCompressed">
            <summary>
            Only JET_coltypLongText and JET_coltypLongBinary columns can be compressed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.ColumnNoEncryptionKey">
            <summary>
            Cannot retrieve/set encrypted column without an encryption key
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecordNotFound">
            <summary>
            The key was not found
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecordNoCopy">
            <summary>
            No working buffer
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.NoCurrentRecord">
            <summary>
            Currency not on a record
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecordPrimaryChanged">
            <summary>
            Primary key may not change
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.KeyDuplicate">
            <summary>
            Illegal duplicate key
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.AlreadyPrepared">
            <summary>
            Attempted to update record when record update was already in progress
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.KeyNotMade">
            <summary>
            No call to JetMakeKey
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.UpdateNotPrepared">
            <summary>
            No call to JetPrepareUpdate
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DataHasChanged">
            <summary>
            Data has changed, operation aborted
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LanguageNotSupported">
            <summary>
            Windows installation does not support language
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DecompressionFailed">
            <summary>
            Internal error: data could not be decompressed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.UpdateMustVersion">
            <summary>
            No version updates only for uncommitted tables
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DecryptionFailed">
            <summary>
            Data could not be decrypted
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.EncryptionBadItag">
            <summary>
            Cannot encrypt tagged columns with itag>1
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManySorts">
            <summary>
            Too many sort processes
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidOnSort">
            <summary>
            Invalid operation on Sort
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TempFileOpenError">
            <summary>
            Temp file could not be opened
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyAttachedDatabases">
            <summary>
            Too many open databases
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DiskFull">
            <summary>
            No space left on disk
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.PermissionDenied">
            <summary>
            Permission denied
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileNotFound">
            <summary>
            File not found
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileInvalidType">
            <summary>
            Invalid file type
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileAlreadyExists">
            <summary>
            File already exists
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.AfterInitialization">
            <summary>
            Cannot Restore after init.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LogCorrupted">
            <summary>
            Logs could not be interpreted
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidOperation">
            <summary>
            Invalid operation
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.AccessDenied">
            <summary>
            Access denied
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManySplits">
            <summary>
            Infinite split
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SessionSharingViolation">
            <summary>
            Multiple threads are using the same session
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.EntryPointNotFound">
            <summary>
            An entry point in a DLL we require could not be found
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SessionContextAlreadySet">
            <summary>
            Specified session already has a session context set
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SessionContextNotSetByThisThread">
            <summary>
            Tried to reset session context, but current thread did not originally set the session context
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SessionInUse">
            <summary>
            Tried to terminate session in use
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RecordFormatConversionFailed">
            <summary>
            Internal error during dynamic record format conversion
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OneDatabasePerSession">
            <summary>
            Just one open user database per session is allowed (JET_paramOneDatabasePerSession)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.RollbackError">
            <summary>
            error during rollback
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FlushMapVersionUnsupported">
            <summary>
            The version of the persisted flush map is not supported by this version of the engine.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FlushMapDatabaseMismatch">
            <summary>
            The persisted flush map and the database do not match.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FlushMapUnrecoverable">
            <summary>
            The persisted flush map cannot be reconstructed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.DatabaseAlreadyRunningMaintenance">
            <summary>
            The operation did not complete successfully because the database is already running maintenance on specified database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CallbackFailed">
            <summary>
            A callback failed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.CallbackNotResolved">
            <summary>
            A callback function could not be found
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.SpaceHintsInvalid">
            <summary>
            An element of the JET space hints structure was not correct or actionable.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OSSnapshotInvalidSequence">
            <summary>
            OS Shadow copy API used in an invalid sequence
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OSSnapshotTimeOut">
            <summary>
            OS Shadow copy ended with time-out
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OSSnapshotNotAllowed">
            <summary>
            OS Shadow copy not allowed (backup or recovery in progress)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.OSSnapshotInvalidSnapId">
            <summary>
            invalid JET_OSSNAPID
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TooManyTestInjections">
            <summary>
            Internal test injection limit hit
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.TestInjectionNotSupported">
            <summary>
            Test injection not supported
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.InvalidLogDataSequence">
            <summary>
            Some how the log data provided got out of sequence with the current state of the instance
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LSCallbackNotSpecified">
            <summary>
            Attempted to use Local Storage without a callback function being specified
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LSAlreadySet">
            <summary>
            Attempted to set Local Storage for an object which already had it set
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.LSNotSet">
            <summary>
            Attempted to retrieve Local Storage from an object which didn't have it set
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileIOSparse">
            <summary>
            an I/O was issued to a location that was sparse
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileIOBeyondEOF">
            <summary>
            a read was issued to a location beyond EOF (writes will expand the file)
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileIOAbort">
            <summary>
            instructs the JET_ABORTRETRYFAILCALLBACK caller to abort the specified I/O
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileIORetry">
            <summary>
            instructs the JET_ABORTRETRYFAILCALLBACK caller to retry the specified I/O
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileIOFail">
            <summary>
            instructs the JET_ABORTRETRYFAILCALLBACK caller to fail the specified I/O
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_err.FileCompressed">
            <summary>
            read/write access is not supported on compressed files
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.EventLoggingLevels">
            <summary>
            Options for EventLoggingLevel.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EventLoggingLevels.Disable">
            <summary>
            Disable all events.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EventLoggingLevels.Min">
            <summary>
            Default level. Windows 7 and later.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EventLoggingLevels.Low">
            <summary>
            Low verbosity and lower. Windows 7 and later.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EventLoggingLevels.Medium">
            <summary>
            Medium verbosity and lower. Windows 7 and later.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EventLoggingLevels.High">
            <summary>
            High verbosity and lower. Windows 7 and later.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.EventLoggingLevels.Max">
            <summary>
            All events.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_ExceptionAction">
            <summary>
            Constants to be used with JET_paramExceptionAction.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_ExceptionAction.MsgBox">
            <summary>
            Display message box on exception.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_ExceptionAction.None">
            <summary>
            Do not handle exceptions. Throw them to the caller.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_filetype">
            <summary>
            Esent file types.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_filetype.Unknown">
            <summary>
            Unknown file.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_filetype.Database">
            <summary>
            Database file.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_filetype.Log">
            <summary>
            Transaction log.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_filetype.Checkpoint">
            <summary>
            Checkpoint file.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_filetype.TempDatabase">
            <summary>
            Temporary database.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_IdxInfo">
            <summary>
            Info levels for retrieve index information with JetGetIndexInfo.
            and JetGetTableIndexInfo.
            </summary>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows7.Windows7IdxInfo"/>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows8.Windows8IdxInfo"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.Default">
            <summary>
            Returns a <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXLIST"/> structure with information about the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.List">
            <summary>
            Returns a <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXLIST"/> structure with information about the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.SysTabCursor">
            <summary>
            SysTabCursor is obsolete.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.OLC">
            <summary>
            OLC is obsolete.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.ResetOLC">
            <summary>
            Reset OLC is obsolete.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.SpaceAlloc">
            <summary>
            Returns an integer with the space usage of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.LCID">
            <summary>
            Returns an integer with the LCID of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.Langid">
            <summary>
            Langid is obsolete. Use <see cref="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.LCID"/> instead.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.Count">
            <summary>
            Returns an integer with the count of indexes in the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.VarSegMac">
            <summary>
            Returns a ushort with the value of cbVarSegMac the index was created with.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.IndexId">
            <summary>
            Returns a <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXID"/> identifying the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_IdxInfo.KeyMost">
            <summary>
            Introduced in Windows Vista. Returns a ushort with the value of cbKeyMost the 
            index was created with.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE">
            <summary>
            Contains the information needed to create an index over data in an ESE database.
            </summary>
            <summary>
            Contains the information needed to create an index over data in an ESE database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.name">
            <summary>
            Name of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.key">
            <summary>
            Index key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.keyLength">
            <summary>
            Length of the index key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.options">
            <summary>
            Index options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.density">
            <summary>
            Index density.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.unicodeOptions">
            <summary>
            Unicode comparison options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.maxSegmentLength">
            <summary>
            Maximum length of a column to store in the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.conditionalColumns">
            <summary>
            Conditional columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.numConditionalColumns">
            <summary>
            Number of conditional columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.errorCode">
            <summary>
            Error code from index creation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.maximumKeyLength">
            <summary>
            Maximum length of index keys.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.spaceHints">
            <summary>
            Space allocation, maintenance, and usage hints.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.err">
            <summary>
            Gets or sets the error code from creating this index.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szIndexName">
            <summary>
            Gets or sets the name of the index to create. 
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szKey">
            <summary>
            Gets or sets the description of the index key. This is a double 
            null-terminated string of null-delimited tokens. Each token is
            of the form [direction-specifier][column-name], where
            direction-specification is either "+" or "-". for example, a
            szKey of "+abc\0-def\0+ghi\0" will index over the three columns
            "abc" (in ascending order), "def" (in descending order), and "ghi"
            (in ascending order).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.cbKey">
            <summary>
            Gets or sets the length, in characters, of szKey including the two terminating nulls.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.grbit">
            <summary>
            Gets or sets index creation options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.ulDensity">
            <summary>
            Gets or sets the density of the index.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.pidxUnicode">
            <summary>
            Gets or sets the optional unicode comparison options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.cbVarSegMac">
            <summary>
            Gets or sets the maximum length, in bytes, of each column to store in the index.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.rgconditionalcolumn">
            <summary>
            Gets or sets the optional conditional columns.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.cConditionalColumn">
            <summary>
            Gets or sets the number of conditional columns.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.cbKeyMost">
            <summary>
            Gets or sets the maximum allowable size, in bytes, for keys in the index.
            The minimum supported maximum key size is JET_cbKeyMostMin (255) which
            is the legacy maximum key size. The maximum key size is dependent on
            the database page size <see cref="F:Microsoft.Isam.Esent.Interop.JET_param.DatabasePageSize"/>. The
            maximum key size can be retrieved with <see cref="P:Microsoft.Isam.Esent.Interop.SystemParameters.KeyMost"/>.
            <para>
            This parameter is ignored on Windows XP and Windows Server 2003.
            </para>
            <para>
            Unlike the unmanaged API, <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexKeyMost"/>
            (JET_bitIndexKeyMost) is not needed, it will be added automatically.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.pSpaceHints">
            <summary>
            Gets or sets space allocation, maintenance, and usage hints.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.ContentEquals(Microsoft.Isam.Esent.Interop.JET_INDEXCREATE)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.CheckMembersAreValid">
            <summary>
            Check this object to make sure its parameters are valid.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.GetNativeIndexcreate">
            <summary>
            Gets the native (interop) version of this object, except for
            <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szIndexName"/> and <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szKey"/>.
            </summary>
            <returns>The native (interop) version of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.GetNativeIndexcreate1">
            <summary>
            Gets the native (interop) version of this object, except for
            <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szIndexName"/> and <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szKey"/>.
            </summary>
            <returns>The native (interop) version of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.GetNativeIndexcreate2">
            <summary>
            Gets the native (interop) version of this object. The following members
            are not converted:
            <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szIndexName"/>, <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szKey"/>, <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.pSpaceHints"/>.
            </summary>
            <returns>The native (interop) version of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.SetFromNativeIndexCreate(Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE2)">
            <summary>
            Sets only the output fields of the object from a NATIVE_INDEXCREATE2 struct,
            specifically <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.err"/>.
            </summary>
            <param name="value">
            The native indexcreate to set the values from.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.SetFromNativeIndexCreate(Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE1)">
            <summary>
            Sets only the output fields of the object from a NATIVE_INDEXCREATE1 struct,
            specifically <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.err"/>.
            </summary>
            <param name="value">
            The native indexcreate to set the values from.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.SetFromNativeIndexCreate(Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE)">
            <summary>
            Sets only the output fields of the object from a native NATIVE_INDEXCREATE struct,
            specifically <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.err"/>.
            </summary>
            <param name="value">
            The native indexcreate to set the values from.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.IsUnicodeIndexEqual(Microsoft.Isam.Esent.Interop.JET_INDEXCREATE)">
            <summary>
            Returns a value indicating whether the pidxUnicode member of this
            instance is equal to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the pidxUnicode members of two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.AreConditionalColumnsEqual(Microsoft.Isam.Esent.Interop.JET_INDEXCREATE)">
            <summary>
            Returns a value indicating whether the conditional column members of this
            instance is equal to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the conditional column members of two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE">
            <summary>
            The native version of the JET_INDEXCREATE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.szIndexName">
            <summary>
            Name of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.szKey">
            <summary>
            Index key description.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.cbKey">
            <summary>
            Size of index key description.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.grbit">
            <summary>
            Index options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.ulDensity">
            <summary>
            Index density.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.pidxUnicode">
            <summary>
            Pointer to unicode sort options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.cbVarSegMac">
            <summary>
            Maximum size of column data to index. This can also be
            a pointer to a JET_TUPLELIMITS structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.rgconditionalcolumn">
            <summary>
            Pointer to array of conditional columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.cConditionalColumn">
            <summary>
            Count of conditional columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE.err">
            <summary>
            Returned error from index creation.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE2">
            <summary>
            The native version of the JET_INDEXCREATE2 structure. Introduced in Windows 7,
            this includes a <see cref="T:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS"/> member.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE2.indexcreate1">
            <summary>
            Nested NATIVE_INDEXCREATE1 structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE2.pSpaceHints">
            <summary>
            A <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS"/> pointer.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE1">
            <summary>
            The native version of the JET_INDEXCREATE structure. This version includes the cbKeyMost
            member, which is only valid on Windows Vista and above, but the name of the structure
            was not changed for Vista.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE1.indexcreate">
            <summary>
            Nested NATIVE_INDEXCREATE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE1.cbKeyMost">
            <summary>
            Maximum size of the key.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.GetNativeIndexcreate3">
            <summary>
            Gets the native (interop) version of this object, except for
            <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szIndexName"/> and <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.szKey"/>.
            </summary>
            <remarks>The cbKey holds the length of the key in bytes, and does not need to be adjusted.</remarks>
            <returns>The native (interop) version of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.SetFromNativeIndexCreate(Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3@)">
            <summary>
            Sets only the output fields of the object from a <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3"/> struct,
            specifically <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.err"/>.
            </summary>
            <param name="value">
            The native indexcreate to set the values from.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.SetAllFromNativeIndexCreate(Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3@)">
            <summary>
            Sets all of the fields (not just output fields) of the object from a <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3"/> struct,
            specifically <see cref="P:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.err"/>.
            </summary>
            <param name="value">
            The native indexcreate to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3">
            <summary>
            The native version of the JET_INDEXCREATE3 structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.szIndexName">
            <summary>
            Name of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.szKey">
            <summary>
            Index key description.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.cbKey">
            <summary>
            Size of index key description.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.grbit">
            <summary>
            Index options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.ulDensity">
            <summary>
            Index density.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.pidxUnicode">
            <summary>
            Pointer to unicode sort options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.cbVarSegMac">
            <summary>
            Maximum size of column data to index. This can also be
            a pointer to a JET_TUPLELIMITS structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.rgconditionalcolumn">
            <summary>
            Pointer to array of conditional columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.cConditionalColumn">
            <summary>
            Count of conditional columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.err">
            <summary>
            Returned error from index creation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.cbKeyMost">
            <summary>
            Maximum size of the key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3.pSpaceHints">
            <summary>
            A <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS"/> pointer.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST">
            <summary>
            The native version of the JET_INDEXLIST structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.tableid">
            <summary>
            Tableid of the temporary table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.cRecord">
            <summary>
            Number of records in the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidindexname">
            <summary>
            Id of the column containing the name of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidgrbitIndex">
            <summary>
            Id of the column containing index options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidcKey">
            <summary>
            Id of the column containing the number of unique keys in the index.
            This is updated by "Api.JetComputeStats".
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidcEntry">
            <summary>
            Id of the column containing the number of entries in the index.
            This is updated by "Api.JetComputeStats".
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidcPage">
            <summary>
            Id of the column containing the number of pages in the index.
            This is updated by "Api.JetComputeStats".
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidcColumn">
            <summary>
            Id of the column containing the number of columns in the index
            definition.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidiColumn">
            <summary>
            Id of the column storing the index of this column in the index key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidcolumnid">
            <summary>
            Id of the column containing the columnid.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidcoltyp">
            <summary>
            Id of the column containing the column type.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidCountry">
            <summary>
            Id of the column containing the country code (obsolete).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidLangid">
            <summary>
            Id of the column containing the LCID of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidCp">
            <summary>
            Id of the column containing the code page of the index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidCollate">
            <summary>
            Obsolete. Ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidgrbitColumn">
            <summary>
            Id of the column giving the column options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidcolumnname">
            <summary>
            Id of the column giving the column name.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST.columnidLCMapFlags">
            <summary>
            Id of the column giving the LCMapString options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_INDEXLIST">
            <summary>
            Information about a temporary table containing information
            about all indexes for a given table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.tableid">
            <summary>
            Gets tableid of the temporary table. This should be closed
            when the table is no longer needed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.cRecord">
            <summary>
            Gets the number of records in the temporary table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidindexname">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the name of the index.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Text"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidgrbitIndex">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the the grbits used on the index. See <see cref="T:Microsoft.Isam.Esent.Interop.CreateIndexGrbit"/>.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidcKey">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the number of unique keys in the index.
            This value is not current and is only is updated by "Api.JetComputeStats".
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidcEntry">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the number of entries in the index.
            This value is not current and is only is updated by "Api.JetComputeStats".
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidcPage">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the number of pages in the index.
            This value is not current and is only is updated by "Api.JetComputeStats".
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidcColumn">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the number of columns in the index key.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidiColumn">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the index of of this column in the index key.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidcolumnid">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the columnid of the column being indexed.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidcoltyp">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the column type of the column being indexed.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidLangid">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the language id (LCID) of the index.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Short"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidCp">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the code page of the indexed column.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Short"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidgrbitColumn">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the grbit that apply to the indexed column. See <see cref="T:Microsoft.Isam.Esent.Interop.IndexKeyGrbit"/>.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidcolumnname">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the grbit that apply to the indexed column. See <see cref="T:Microsoft.Isam.Esent.Interop.IndexKeyGrbit"/>.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Text"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.columnidLCMapFlags">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the unicode normalization flags for the index.
            The column is of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.Long"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXLIST"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXLIST"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXLIST.SetFromNativeIndexlist(Microsoft.Isam.Esent.Interop.NATIVE_INDEXLIST)">
            <summary>
            Sets the fields of the object from a native JET_INDEXLIST struct.
            </summary>
            <param name="value">
            The native indexlist to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_INDEXRANGE">
            <summary>
            The native version of the JET_INDEXRANGE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXRANGE.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXRANGE.tableid">
            <summary>
            Cursor containing the index range.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INDEXRANGE.grbit">
            <summary>
            Index range options.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.NATIVE_INDEXRANGE.MakeIndexRangeFromTableid(Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Create a NATIVE_INDEXRANGE from a cursor.
            </summary>
            <param name="tableid">The cursor containing the index range.</param>
            <returns>A new NATIVE_INDEXRANGE on the cursor.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE">
            <summary>
            Identifies an index range when it is used with the JetIntersectIndexes function.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE.#ctor">
            <summary>
            Initializes a new instance of the JET_INDEXRANGE class.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE.tableid">
            <summary>
            Gets or sets the cursor containing the index range. The cursor should have an
            index range set with JetSetIndexRange.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE.grbit">
            <summary>
            Gets or sets the indexrange option.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE.ContentEquals(Microsoft.Isam.Esent.Interop.JET_INDEXRANGE)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXRANGE.GetNativeIndexRange">
            <summary>
            Get a NATIVE_INDEXRANGE structure representing the object.
            </summary>
            <returns>A NATIVE_INDEXRANGE whose members match the class.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO">
            <summary>
            The native version of the JET_INSTANCE_INFO structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO.hInstanceId">
            <summary>
            The JET_INSTANCE of the given instance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO.szInstanceName">
            <summary>
            The name of the database instance. This value can be NULL if the
            instance does not have a name.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO.cDatabases">
            <summary>
            The number of databases that are attached to the database instance.
            cDatabases also holds the size of the arrays of strings that are
            returned in szDatabaseFileName, szDatabaseDisplayName, and
            szDatabaseSLVFileName.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO.szDatabaseFileName">
            <summary>
            An array of strings, each holding the file name of a database that
            is attached to the database instance. The array has cDatabases
            elements.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO.szDatabaseDisplayName">
            <summary>
            An array of strings, each holding the display name of a database.
            This string is always null. The array has cDatabases elements.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO.szDatabaseSLVFileName">
            <summary>
            An array of strings, each holding the file name of the SLV file that
            is attached to the database instance. The array has cDatabases
            elements. SLV files are not supported, so this field should be ignored.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO">
            <summary>
            Receives information about running database instances when used with the
            JetGetInstanceInfo and JetOSSnapshotFreeze functions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.databases">
            <summary>
            Collection of database file names.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.#ctor(Microsoft.Isam.Esent.Interop.JET_INSTANCE,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO"/> class.
            </summary>
            <param name="instance">
            The instance.
            </param>
            <param name="instanceName">
            The name of the instance.
            </param>
            <param name="databases">
            The databases in the instance.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.hInstanceId">
            <summary>
            Gets the JET_INSTANCE of the given instance.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.szInstanceName">
            <summary>
            Gets the name of the database instance. This value can be null if
            the instance does not have a name.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.cDatabases">
            <summary>
            Gets the number of databases that are attached to the database instance.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.szDatabaseFileName">
            <summary>
            Gets a collection of strings, each holding the file name of a database
            that is attached to the database instance. The array has cDatabases
            elements.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.Equals(Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.SetFromNativeAscii(Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO)">
            <summary>
            Set the properties of the object from a native instance info where the
            strings in the NATIVE_INSTANCE_INFO are ASCII.
            </summary>
            <param name="native">The native instance info.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO.SetFromNativeUnicode(Microsoft.Isam.Esent.Interop.NATIVE_INSTANCE_INFO)">
            <summary>
            Set the properties of the object from a native instance info where the
            strings in the NATIVE_INSTANCE_INFO are Unicode.
            </summary>
            <param name="native">The native instance info.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.JET_IOPriority">
            <summary>
            Values for use with <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.IOPriority"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_IOPriority.Normal">
            <summary>
            This is the default I/O priority level.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_IOPriority.Low">
            <summary>
            Subsequent I/Os issued will be issued at Low priority.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_IOPriority.LowForCheckpoint">
            <summary>
            Subsequent I/Os issued for checkpoint advancement will be issued at Low priority.
            </summary>
            <remarks>
            Available on Windows 8.1 and later.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_IOPriority.LowForScavenge">
            <summary>
            Subsequent I/Os issued for scavenging buffers will be issued at Low priority.
            </summary>
            <remarks>
            Available on Windows 8.1 and later.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE">
            <summary>
            The native version of the JET_OPENTEMPORARYTABLE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE.prgcolumndef">
            <summary>
            Columns to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE.ccolumn">
            <summary>
            Number of entries in prgcolumndef.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE.pidxunicode">
            <summary>
            Optional pointer to unicode index information.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE.grbit">
            <summary>
            Table options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE.rgcolumnid">
            <summary>
            Pointer to array of returned columnids. This
            should have at least ccolumn entries.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE.cbKeyMost">
            <summary>
            Maximum key size.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE.cbVarSegMac">
            <summary>
            Maximum amount of data used to construct a key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE.tableid">
            <summary>
            Returns the tableid of the new table.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE">
            <summary>
            A collection of parameters for the JetOpenTemporaryTable method.
            </summary>
            <summary>
            A collection of parameters for the JetOpenTemporaryTable method.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.prgcolumndef">
            <summary>
            Gets or sets the column definitions for the columns created in
            the temporary table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.ccolumn">
            <summary>
            Gets or sets the number of columns in <see cref="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.prgcolumndef"/>.
            </summary>
            <seealso cref="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.prgcolumnid"/>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.pidxunicode">
            <summary>
            Gets or sets the locale ID and normalization flags to use to compare any Unicode
            key column data in the temporary table. When this parameter is
            null, then the default LCID will be used to compare any Unicode key
            columns in the temporary table. The default LCID is the U.S. English
            locale. When this parameter is null, then the default normalization
            flags will be used to compare any Unicode key column data in the temp
            table. The default normalization flags are: NORM_IGNORECASE,
            NORM_IGNOREKANATYPE, and NORM_IGNOREWIDTH.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.grbit">
            <summary>
            Gets or sets options for the temp table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.prgcolumnid">
            <summary>
            Gets or sets the output buffer that receives the array of column
            IDs generated during the creation of the temporary table. The
            column IDs in this array will exactly correspond to the input array
            of column definitions. As a result, the size of this buffer must
            correspond to the size of <see cref="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.prgcolumndef"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.cbKeyMost">
            <summary>
            Gets or sets the maximum size for a key representing a given row. The maximum
            key size may be set to control how keys are truncated. Key
            truncation is important because it can affect when rows are
            considered to be distinct. If this parameter is set to 0 or
            255 then the maximum key size and its semantics will remain
            identical to the maximum key size supported by Windows Server 2003
            and previous releases. This parameter may also be set to a larger
            value as a function of the database page size for the instance
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_param.DatabasePageSize"/>. See
            <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.KeyMost"/> for more information.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.cbVarSegMac">
            <summary>
            Gets or sets maximum amount of data that will be used from any
            variable lengthcolumn to construct a key for a given row. This
            parameter may be used to control the amount of key space consumed
            by any given key column. This limit is in bytes. If this parameter
            is zero or is the same as the <see cref="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.cbKeyMost"/> property
            then no limit is in effect.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.tableid">
            <summary>
            Gets the table handle for the temporary table created as a result
            of a successful call to JetOpenTemporaryTable.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.GetNativeOpenTemporaryTable">
            <summary>
            Returns the unmanaged opentemporarytable that represents this managed class.
            </summary>
            <returns>
            A native (interop) version of the JET_OPENTEMPORARYTABLE.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.CheckDataSize">
            <summary>
            Make sure the data and count members are the correct size.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE.GetNativeOpenTemporaryTable2">
            <summary>
            Returns the unmanaged opentemporarytable that represents this managed class.
            </summary>
            <returns>
            A native (interop) version of the JET_OPENTEMPORARYTABLE.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2">
            <summary>
            The native version of the JET_OPENTEMPORARYTABLE2 structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2.prgcolumndef">
            <summary>
            Columns to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2.ccolumn">
            <summary>
            Number of entries in prgcolumndef.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2.pidxunicode">
            <summary>
            Optional pointer to unicode index information.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2.grbit">
            <summary>
            Table options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2.rgcolumnid">
            <summary>
            Pointer to array of returned columnids. This
            should have at least ccolumn entries.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2.cbKeyMost">
            <summary>
            Maximum key size.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2.cbVarSegMac">
            <summary>
            Maximum amount of data used to construct a key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_OPENTEMPORARYTABLE2.tableid">
            <summary>
            Returns the tableid of the new table.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE">
            <summary>
            Used by <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetGetRecordSize(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE@,Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit)"/> to return information about a record's usage
            requirements in user data space, number of set columns, number of
            values, and ESENT record structure overhead space.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.userData">
            <summary>
            User data in the record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.userLongValueData">
            <summary>
            User data associated with the record, but in the LV tree.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.overhead">
            <summary>
            Record overhead, including key size.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.longValueOverhead">
            <summary>
            Overhead of storing the long-value data.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.numNonTaggedColumns">
            <summary>
            Number of fixed and variable columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.numTaggedColumns">
            <summary>
            Number of tagged columns in the record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.numLongValues">
            <summary>
            Number of extrinsic (separated) long values.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.numMultiValues">
            <summary>
            Number of multi-values (itag > 1) in the record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.numCompressedColumns">
            <summary>
            Number of compressed columns in the record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.userDataAfterCompression">
            <summary>
            Size of user data after being compressed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.userLongValueDataCompressed">
            <summary>
            Size of the long value data after compression.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cbData">
            <summary>
            Gets the user data set in the record.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cbLongValueData">
            <summary>
            Gets the user data set in the record, but stored in the long-value tree.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cbOverhead">
            <summary>
            Gets the overhead of the ESENT record structure for this record.
            This includes the record's key size.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cbLongValueOverhead">
            <summary>
            Gets the overhead of the long-value data.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cNonTaggedColumns">
            <summary>
            Gets the total number of fixed and variable columns set in this record.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cTaggedColumns">
            <summary>
            Gets the total number of tagged columns set in this record.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cLongValues">
            <summary>
            Gets the total number of long values stored in the long-value tree
            for this record. This does not include intrinsic long values.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cMultiValues">
            <summary>
            Gets the accumulation of the total number of values beyond the first
            for all columns in the record.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cCompressedColumns">
            <summary>
            Gets the total number of columns in the record which are compressed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cbDataCompressed">
            <summary>
            Gets the compressed size of user data in record. This is the same
            as <see cref="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cbData"/> if no intrinsic long-values are compressed).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cbLongValueDataCompressed">
            <summary>
            Gets the compressed size of user data in the long-value tree. This is
            the same as <see cref="P:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.cbLongValueData"/> if no separated long values
            are compressed.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.Add(Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE)">
            <summary>
            Add the sizes in two JET_RECSIZE structures.
            </summary>
            <param name="s1">The first JET_RECSIZE.</param>
            <param name="s2">The second JET_RECSIZE.</param>
            <returns>A JET_RECSIZE containing the result of adding the sizes in s1 and s2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.op_Addition(Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE)">
            <summary>
            Add the sizes in two JET_RECSIZE structures.
            </summary>
            <param name="left">The first JET_RECSIZE.</param>
            <param name="right">The second JET_RECSIZE.</param>
            <returns>A JET_RECSIZE containing the result of adding the sizes in left and right.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.Subtract(Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE)">
            <summary>
            Calculate the difference in sizes between two JET_RECSIZE structures.
            </summary>
            <param name="s1">The first JET_RECSIZE.</param>
            <param name="s2">The second JET_RECSIZE.</param>
            <returns>A JET_RECSIZE containing the difference in sizes between s1 and s2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.op_Subtraction(Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE)">
            <summary>
            Calculate the difference in sizes between two JET_RECSIZE structures.
            </summary>
            <param name="left">The first JET_RECSIZE.</param>
            <param name="right">The second JET_RECSIZE.</param>
            <returns>A JET_RECSIZE containing the difference in sizes between left and right.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.op_Equality(Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE)">
            <summary>
            Determines whether two specified instances of JET_RECSIZE
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.op_Inequality(Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE)">
            <summary>
            Determines whether two specified instances of JET_RECSIZE
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.Equals(Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.SetFromNativeRecsize(Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE)">
            <summary>
            Sets the fields of the object from a NATIVE_RECSIZE struct.
            </summary>
            <param name="value">
            The native recsize to set the values from.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.SetFromNativeRecsize(Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2)">
            <summary>
            Sets the fields of the object from a NATIVE_RECSIZE2 struct.
            </summary>
            <param name="value">
            The native recsize to set the values from.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.GetNativeRecsize">
            <summary>
            Gets a NATIVE_RECSIZE containing the values in this object.
            </summary>
            <returns>
            A NATIVE_RECSIZE initialized with the values in the object.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE.GetNativeRecsize2">
            <summary>
            Gets a NATIVE_RECSIZE2 containing the values in this object.
            </summary>
            <returns>
            A NATIVE_RECSIZE2 initialized with the values in the object.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE">
            <summary>
            The native version of the JET_RECSIZE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE.cbData">
            <summary>
            User data in record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE.cbLongValueData">
            <summary>
            User data associated with the record but stored in the long-value
            tree. Does NOT count intrinsic long-values.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE.cbOverhead">
            <summary>
            Record overhead.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE.cbLongValueOverhead">
            <summary>
            Overhead of long-value data. Does not count intrinsic long-values.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE.cNonTaggedColumns">
            <summary>
            Total number of fixed/variable columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE.cTaggedColumns">
            <summary>
            Total number of tagged columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE.cLongValues">
            <summary>
            Total number of values stored in the long-value tree for this record.
            Does NOT count intrinsic long-values.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE.cMultiValues">
            <summary>
            Total number of values beyond the first for each column in the record.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2">
            <summary>
            The native version of the JET_RECSIZE2 structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cbData">
            <summary>
            User data in record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cbLongValueData">
            <summary>
            User data associated with the record but stored in the long-value
            tree. Does NOT count intrinsic long-values.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cbOverhead">
            <summary>
            Record overhead.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cbLongValueOverhead">
            <summary>
            Overhead of long-value data. Does not count intrinsic long-values.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cNonTaggedColumns">
            <summary>
            Total number of fixed/variable columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cTaggedColumns">
            <summary>
            Total number of tagged columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cLongValues">
            <summary>
            Total number of values stored in the long-value tree for this record.
            Does NOT count intrinsic long-values.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cMultiValues">
            <summary>
            Total number of values beyond the first for each column in the record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cCompressedColumns">
            <summary>
            Total number of columns which are compressed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cbDataCompressed">
            <summary>
            Compressed size of user data in record. Same as cbData if no intrinsic
            long-values are compressed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.NATIVE_RECSIZE2.cbLongValueDataCompressed">
            <summary>
            Compressed size of user data in the long-value tree. Same as
            cbLongValue data if no separated long values are compressed.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS">
            <summary>
            Contains cumulative statistics on the work performed by the database
            engine on the current thread. This information is returned via
            JetGetThreadStats.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.Size">
            <summary>
            The size of a JET_THREADSTATS structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.cbStruct">
            <summary>
            Size of the structure. This is used for interop.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.pagesReferenced">
            <summary>
            Number of pages visited.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.pagesRead">
            <summary>
            Number of pages read from disk.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.pagesPreread">
            <summary>
            Number of pages preread.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.pagesDirtied">
            <summary>
            Number of pages dirtied.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.pagesRedirtied">
            <summary>
            Pages redirtied.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.numLogRecords">
            <summary>
            Number of log records generated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.loggedBytes">
            <summary>
            Number of bytes logged.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.cPageReferenced">
            <summary>
            Gets the total number of database pages visited by the database
            engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.cPageRead">
            <summary>
            Gets the total number of database pages fetched from disk by the
            database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.cPagePreread">
            <summary>
            Gets the total number of database pages prefetched from disk by
            the database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.cPageDirtied">
            <summary>
            Gets the total number of database pages, with no unwritten changes,
            that have been modified by the database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.cPageRedirtied">
            <summary>
            Gets the total number of database pages, with unwritten changes, that
            have been modified by the database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.cLogRecord">
            <summary>
            Gets the total number of transaction log records that have been
            generated by the database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.cbLogRecord">
            <summary>
            Gets the total size, in bytes, of transaction log records that
            have been generated by the database engine on the current thread.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new <see cref="T:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS"/> struct with the specified
            valued.
            </summary>
            <param name="cPageReferenced">
            Number of pages visited.
            </param>
            <param name="cPageRead">
            Number of pages read.
            </param>
            <param name="cPagePreread">
            Number of pages preread.
            </param>
            <param name="cPageDirtied">
            TNumber of pages dirtied.
            </param>
            <param name="cPageRedirtied">
            Number of pages redirtied.
            </param>
            <param name="cLogRecord">
            Number of log records generated.
            </param>
            <param name="cbLogRecord">
            Bytes of log records written.
            </param>
            <returns>
            A new <see cref="T:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS"/> struct with the specified values.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.Add(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS,Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS)">
            <summary>
            Add the stats in two JET_THREADSTATS structures.
            </summary>
            <param name="t1">The first JET_THREADSTATS.</param>
            <param name="t2">The second JET_THREADSTATS.</param>
            <returns>A JET_THREADSTATS containing the result of adding the stats in t1 and t2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.op_Addition(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS,Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS)">
            <summary>
            Add the stats in two JET_THREADSTATS structures.
            </summary>
            <param name="t1">The first JET_THREADSTATS.</param>
            <param name="t2">The second JET_THREADSTATS.</param>
            <returns>A JET_THREADSTATS containing the result of adding the stats in t1 and t2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.Subtract(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS,Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS)">
            <summary>
            Calculate the difference in stats between two JET_THREADSTATS structures.
            </summary>
            <param name="t1">The first JET_THREADSTATS.</param>
            <param name="t2">The second JET_THREADSTATS.</param>
            <returns>A JET_THREADSTATS containing the difference in stats between t1 and t2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.op_Subtraction(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS,Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS)">
            <summary>
            Calculate the difference in stats between two JET_THREADSTATS structures.
            </summary>
            <param name="t1">The first JET_THREADSTATS.</param>
            <param name="t2">The second JET_THREADSTATS.</param>
            <returns>A JET_THREADSTATS containing the difference in stats between t1 and t2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.op_Equality(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS,Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS)">
            <summary>
            Determines whether two specified instances of JET_THREADSTATS
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.op_Inequality(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS,Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS)">
            <summary>
            Determines whether two specified instances of JET_THREADSTATS
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.ToString">
            <summary>
            Gets a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.Equals(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS.GetPluralS(System.Int32)">
            <summary>
            Get the plural suffix ('s') for the given number.
            </summary>
            <param name="n">The number.</param>
            <returns>The letter 's' if n is greater than 1.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.LegacyFileNames">
            <summary>
            Options for LegacyFileNames.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.LegacyFileNames.ESE98FileNames">
            <summary>
            When this option is present then the database engine will use the following naming conventions for its files:
              o Transaction Log files will use .LOG for their file extension.
              o Checkpoint files will use .CHK for their file extension.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.LegacyFileNames.EightDotThreeSoftCompat">
            <summary>
            Preserve the 8.3 naming syntax for as long as possible. (this should not be changed, w/o ensuring there are no log files).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.VistaApi">
            <summary>
            ESENT APIs that were first supported in Windows Vista.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetGetColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a column in a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database that contains the table.</param>
            <param name="tablename">The name of the table containing the column.</param>
            <param name="columnid">The ID of the column.</param>
            <param name="columnbase">Filled in with information about the columns in the table.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetGetTableColumnInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE@)">
            <summary>
            Retrieves information about a table column.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table containing the column.</param>
            <param name="columnid">The columnid of the column.</param>
            <param name="columnbase">Filled in with information about the column.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOpenTemporaryTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)">
            <summary>
            Creates a temporary table with a single index. A temporary table
            stores and retrieves records just like an ordinary table created
            using JetCreateTableColumnIndex. However, temporary tables are
            much faster than ordinary tables due to their volatile nature.
            They can also be used to very quickly sort and perform duplicate
            removal on record sets when accessed in a purely sequential manner.
            Also see
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>,
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>.
            </summary>
            <remarks>
            Introduced in Windows Vista. Use <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOpenTempTable3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_COLUMNDEF[],System.Int32,Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX,Microsoft.Isam.Esent.Interop.TempTableGrbit,Microsoft.Isam.Esent.Interop.JET_TABLEID@,Microsoft.Isam.Esent.Interop.JET_COLUMNID[])"/>
            for earlier versions of Esent.
            </remarks>
            <param name="sesid">The session to use.</param>
            <param name="temporarytable">
            Description of the temporary table to create on input. After a
            successful call, the structure contains the handle to the temporary
            table and column identifications. Use <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCloseTable(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>
            to free the temporary table when finished.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetGetThreadStats(Microsoft.Isam.Esent.Interop.Vista.JET_THREADSTATS@)">
            <summary>
            Retrieves performance information from the database engine for the
            current thread. Multiple calls can be used to collect statistics
            that reflect the activity of the database engine on this thread
            between those calls. 
            </summary>
            <param name="threadstats">Returns the thread statistics data.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotPrepareInstance(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Vista.SnapshotPrepareInstanceGrbit)">
            <summary>
            Selects a specific instance to be part of the snapshot session.
            </summary>
            <param name="snapshot">The snapshot identifier.</param>
            <param name="instance">The instance to add to the snapshot.</param>
            <param name="grbit">Options for this call.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotTruncateLog(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit)">
            <summary>
            Enables log truncation for all instances that are part of the snapshot session.
            </summary>
            <remarks>
            This function should be called only if the snapshot was created with the
            <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ContinueAfterThaw"/> option. Otherwise, the snapshot
            session ends after the call to <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)"/>.
            </remarks>
            <param name="snapshot">The snapshot identifier.</param>
            <param name="grbit">Options for this call.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotTruncateLogInstance(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit)">
            <summary>
            Truncates the log for a specified instance during a snapshot session.
            </summary>
            <remarks>
            This function should be called only if the snapshot was created with the
            <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ContinueAfterThaw"/> option. Otherwise, the snapshot
            session ends after the call to <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetOSSnapshotThaw(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.SnapshotThawGrbit)"/>.
            </remarks>
            <param name="snapshot">The snapshot identifier.</param>
            <param name="instance">The instance to truncat the log for.</param>
            <param name="grbit">Options for this call.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotGetFreezeInfo(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@,Microsoft.Isam.Esent.Interop.Vista.SnapshotGetFreezeInfoGrbit)">
            <summary>
            Retrieves the list of instances and databases that are part of the
            snapshot session at any given moment.
            </summary>
            <param name="snapshot">The identifier of the snapshot session.</param>
            <param name="numInstances">Returns the number of instances.</param>
            <param name="instances">Returns information about the instances.</param>
            <param name="grbit">Options for this call.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotEnd(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Vista.SnapshotEndGrbit)">
            <summary>
            Notifies the engine that the snapshot session finished.
            </summary>
            <param name="snapshot">The identifier of the snapshot session.</param>
            <param name="grbit">Snapshot end options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetGetInstanceMiscInfo(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SIGNATURE@,Microsoft.Isam.Esent.Interop.Vista.JET_InstanceMiscInfo)">
            <summary>
            Retrieves information about an instance.
            </summary>
            <param name="instance">The instance to get information about.</param>
            <param name="signature">Retrieved information.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetInit3(Microsoft.Isam.Esent.Interop.JET_INSTANCE@,Microsoft.Isam.Esent.Interop.JET_RSTINFO,Microsoft.Isam.Esent.Interop.InitGrbit)">
            <summary>
            Initialize the ESENT database engine.
            </summary>
            <param name="instance">
            The instance to initialize. If an instance hasn't been
            allocated then a new one is created and the engine
            will operate in single-instance mode.
            </param>
            <param name="recoveryOptions">
            Additional recovery parameters for remapping databases during
            recovery, position where to stop recovery at, or recovery status.
            </param>
            <param name="grbit">
            Initialization options.
            </param>
            <returns>
            A warning code.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetGetRecordSize(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.Vista.JET_RECSIZE@,Microsoft.Isam.Esent.Interop.GetRecordSizeGrbit)">
            <summary>
            Retrieves record size information from the desired location.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The cursor that will be used for the API call. The cursor must be
            positioned on a record, or have an update prepared.
            </param>
            <param name="recsize">Returns the size of the record.</param>
            <param name="grbit">Call options.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.VistaColInfo">
            <summary>
            Column info levels that have been added to the Vista version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaColInfo.BaseByColid">
            <summary>
            Retrieve the JET_COLBASE using the column id.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaColInfo.GrbitNonDerivedColumnsOnly">
            <summary>
            For lists, only return non-derived columns (if the table is derived from a template).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaColInfo.GrbitMinimalInfo">
            <summary>
            For lists, only return the column name and columnid of each column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaColInfo.GrbitSortByColumnid">
            <summary>
            For lists, sort returned column list by columnid (default is to sort list by column name).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.VistaColtyp">
            <summary>
            Column types that have been added to the Vista version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaColtyp.UnsignedLong">
            <summary>
            Unsigned 32-bit number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaColtyp.LongLong">
            <summary>
            Signed 64-bit number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaColtyp.GUID">
            <summary>
            16-byte GUID.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaColtyp.UnsignedShort">
            <summary>
            Unsigned 16-bit number.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.SnapshotEndGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotEnd(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Vista.SnapshotEndGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.SnapshotEndGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.SnapshotEndGrbit.AbortSnapshot">
            <summary>
            The snapshot session aborted.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.SnapshotPrepareInstanceGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotPrepareInstance(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Vista.SnapshotPrepareInstanceGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.SnapshotPrepareInstanceGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotTruncateLog(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotTruncateLogInstance(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit.None">
            <summary>
            No truncation will occur.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.SnapshotTruncateLogGrbit.AllDatabasesSnapshot">
            <summary>
            All the databases are attached so the storage engine can compute
            and do the log truncation.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.SnapshotGetFreezeInfoGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetOSSnapshotGetFreezeInfo(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_INSTANCE_INFO[]@,Microsoft.Isam.Esent.Interop.Vista.SnapshotGetFreezeInfoGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.SnapshotGetFreezeInfoGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.JET_InstanceMiscInfo">
            <summary>
            Information levels for <see cref="M:Microsoft.Isam.Esent.Interop.Vista.VistaApi.JetGetInstanceMiscInfo(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SIGNATURE@,Microsoft.Isam.Esent.Interop.Vista.JET_InstanceMiscInfo)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.JET_InstanceMiscInfo.LogSignature">
            <summary>
            Get the signature of the transaction log associated with this sequence.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits">
            <summary>
            Grbits that have been added to the Vista version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexCrossProduct">
            <summary>
            Specifying this flag for an index that has more than one key column
            that is a multi-valued column will result in an index entry being
            created for each result of a cross product of all the values in
            those key columns. Otherwise, the index would only have one entry
            for each multi-value in the most significant key column that is a
            multi-valued column and each of those index entries would use the
            first multi-value from any other key columns that are multi-valued columns.
            <para>
            For example, if you specified this flag for an index over column
            A that has the values "red" and "blue" and over column B that has
            the values "1" and "2" then the following index entries would be
            created: "red", "1"; "red", "2"; "blue", "1"; "blue", "2". Otherwise,
            the following index entries would be created: "red", "1"; "blue", "1".
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexDisallowTruncation">
            <summary>
            Specifying this flag will cause any update to the index that would
            result in a truncated key to fail with <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.KeyTruncated"/>.
            Otherwise, keys will be silently truncated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexNestedTable">
            <summary>
            Index over multiple multi-valued columns but only with values of same itagSequence.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.TruncateDone">
            <summary>
            The engine can mark the database headers as appropriate (for example,
            a full backup completed), even though the call to truncate was not completed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.RecoveryWithoutUndo">
            <summary>
            Perform recovery, but halt at the Undo phase. Allows whatever logs are present to
            be replayed, then later additional logs can be copied and replayed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.TruncateLogsAfterRecovery">
            <summary>
            On successful soft recovery, truncate log files.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ReplayMissingMapEntryDB">
            <summary>
            Missing database map entry default to same location.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.LogStreamMustExist">
            <summary>
            Transaction logs must exist in the log file directory
            (i.e. can't auto-start a new stream).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.ContinueAfterThaw">
            <summary>
            The snapshot session continues after JetOSSnapshotThaw and will
            require a JetOSSnapshotEnd function call.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexKeyMost">
            <summary>
            Specifying this flag will cause the index to use the maximum key size
            specified in the cbKeyMost field in the structure. Otherwise, the
            index will use JET_cbKeyMost (255) as its maximum key size.
            </summary>
            <remarks>
            Set internally when the NATIVE_INDEXCREATE structure is generated.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaGrbits.IndexUnicode">
            <summary>
            LCID field of JET_INDEXCREATE actually points to a JET_UNICODEINDEX
            struct to allow user-defined LCMapString() flags.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Vista.VistaParam">
            <summary>
            System parameters that have been added to the Vista version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.CachedClosedTables">
            <summary>
            This parameter controls the number of B+ Tree resources cached by
            the instance after the tables they represent have been closed by
            the application. Large values for this parameter will cause the
            database engine to use more memory but will increase the speed
            with which a large number of tables can be opened randomly by
            the application. This is useful for applications that have a
            schema with a very large number of tables.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.EnableFileCache">
            <summary>
            Enable the use of the OS file cache for all managed files.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.EnableViewCache">
            <summary>
            Enable the use of memory mapped file I/O for database files.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.Configuration">
            <summary>
            This parameter exposes multiple sets of default values for the
            entire set of system parameters. When this parameter is set to
            a specific configuration, all system parameter values are reset
            to their default values for that configuration. If the
            configuration is set for a specific instance then global system
            parameters will not be reset to their default values.
            Small Configuration (0): The database engine is optimized for memory use. 
            Legacy Configuration (1): The database engine has its traditional defaults.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.EnableAdvanced">
            <summary>
            This parameter is used to control when the database engine accepts
            or rejects changes to a subset of the system parameters. This
            parameter is used in conjunction with <see cref="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.Configuration"/> to
            prevent some system parameters from being set away from the selected
            configuration's defaults.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.KeyMost">
            <summary>
            This read-only parameter indicates the maximum allowable index key
            length that can be selected for the current database page size
            (as configured by <see cref="F:Microsoft.Isam.Esent.Interop.JET_param.DatabasePageSize"/>).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.LegacyFileNames">
            <summary>
            This parameter provides backwards compatibility with the file naming conventions of earlier releases of the database engine.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass1Name">
            <summary>
            Set the name associated with table class 1.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass2Name">
            <summary>
            Set the name associated with table class 2.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass3Name">
            <summary>
            Set the name associated with table class 3.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass4Name">
            <summary>
            Set the name associated with table class 4.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass5Name">
            <summary>
            Set the name associated with table class 5.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass6Name">
            <summary>
            Set the name associated with table class 6.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass7Name">
            <summary>
            Set the name associated with table class 7.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass8Name">
            <summary>
            Set the name associated with table class 8.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass9Name">
            <summary>
            Set the name associated with table class 9.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass10Name">
            <summary>
            Set the name associated with table class 10.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass11Name">
            <summary>
            Set the name associated with table class 11.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass12Name">
            <summary>
            Set the name associated with table class 12.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass13Name">
            <summary>
            Set the name associated with table class 13.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass14Name">
            <summary>
            Set the name associated with table class 14.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.TableClass15Name">
            <summary>
            Set the name associated with table class 15.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Vista.VistaParam.IOPriority">
            <summary>
            Sets the IO priority per instance, anytime. This is used
            mainly for background recovery (log replay).
            Does not affect the pending IOs, just the subsequent ones issued.
            The valid values for this parameter are contained in the
            <see cref="T:Microsoft.Isam.Esent.Interop.Vista.JET_IOPriority"/> enumeration.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_LGPOS">
            <summary>
            Describes an offset in the log sequence.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LGPOS.offset">
            <summary>
            Byte offset inside the sector.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LGPOS.sector">
            <summary>
            Sector number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LGPOS.generation">
            <summary>
            Generation number.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_LGPOS.ib">
            <summary>
            Gets or sets the byte offset represented by this log position. This
            offset is inside of the sector.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_LGPOS.isec">
            <summary>
            Gets or sets the sector number represented by this log position.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_LGPOS.lGeneration">
            <summary>
            Gets or sets the generation of this log position.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_LGPOS.HasValue">
            <summary>
            Gets a value indicating whether this log position is null.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.op_Equality(Microsoft.Isam.Esent.Interop.JET_LGPOS,Microsoft.Isam.Esent.Interop.JET_LGPOS)">
            <summary>
            Determines whether two specified instances of JET_LGPOS
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.op_Inequality(Microsoft.Isam.Esent.Interop.JET_LGPOS,Microsoft.Isam.Esent.Interop.JET_LGPOS)">
            <summary>
            Determines whether two specified instances of JET_LGPOS
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.op_LessThan(Microsoft.Isam.Esent.Interop.JET_LGPOS,Microsoft.Isam.Esent.Interop.JET_LGPOS)">
            <summary>
            Determine whether one log position is before another log position.
            </summary>
            <param name="lhs">The first log position to compare.</param>
            <param name="rhs">The second log position to compare.</param>
            <returns>True if lhs comes before rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.op_GreaterThan(Microsoft.Isam.Esent.Interop.JET_LGPOS,Microsoft.Isam.Esent.Interop.JET_LGPOS)">
            <summary>
            Determine whether one log position is after another log position.
            </summary>
            <param name="lhs">The first log position to compare.</param>
            <param name="rhs">The second log position to compare.</param>
            <returns>True if lhs comes after rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.op_LessThanOrEqual(Microsoft.Isam.Esent.Interop.JET_LGPOS,Microsoft.Isam.Esent.Interop.JET_LGPOS)">
            <summary>
            Determine whether one log position is before or equal to
            another log position.
            </summary>
            <param name="lhs">The first log position to compare.</param>
            <param name="rhs">The second log position to compare.</param>
            <returns>True if lhs comes before or is equal to rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.op_GreaterThanOrEqual(Microsoft.Isam.Esent.Interop.JET_LGPOS,Microsoft.Isam.Esent.Interop.JET_LGPOS)">
            <summary>
            Determine whether one log position is after or equal to
            another log position.
            </summary>
            <param name="lhs">The first log position to compare.</param>
            <param name="rhs">The second log position to compare.</param>
            <returns>True if lhs comes after or is equal to rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.Equals(Microsoft.Isam.Esent.Interop.JET_LGPOS)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LGPOS.CompareTo(Microsoft.Isam.Esent.Interop.JET_LGPOS)">
            <summary>
            Compares this log position to another log position and determines
            whether this instance is before, the same as or after the other
            instance.
            </summary>
            <param name="other">The log position to compare to the current instance.</param>
            <returns>
            A signed number indicating the relative positions of this instance and the value parameter.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_LOGTIME">
            <summary>
            Describes a date/time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LOGTIME.bSeconds">
            <summary>
            The time in seconds. This value can be 0 to 59.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LOGTIME.bMinutes">
            <summary>
            The time in minutes. This value can be 0 to 59.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LOGTIME.bHours">
            <summary>
            The time in hours. This value can be 0 to 23.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LOGTIME.bDays">
            <summary>
            The day of the month. This value can be 0 to 31. 0 is
            used when the structure is null.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LOGTIME.bMonth">
            <summary>
            The month. This value can be 0 to 12. 0 is
            used when the structure is null.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LOGTIME.bYear">
            <summary>
            The year of the event, offset by 1900.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LOGTIME.bFiller1">
            <summary>
            IsUTC flag at the first bit. Starting from win8, milli-seconds (low part) is filled at left 7 bits.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LOGTIME.bFiller2">
            <summary>
            OSSnapshot flag at the first bit, Starting from win8, milli-seconds (high part) is filled at following 3 bits. Other bits are reserved.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LOGTIME.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_LOGTIME"/> struct.
            </summary>
            <param name="time">
            The DateTime to initialize the structure with.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_LOGTIME.HasValue">
            <summary>
            Gets a value indicating whether the JET_LOGTIME has a null value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_LOGTIME.fTimeIsUTC">
            <summary>
            Gets a value indicating whether the JET_LOGTIME is in UTC.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LOGTIME.op_Equality(Microsoft.Isam.Esent.Interop.JET_LOGTIME,Microsoft.Isam.Esent.Interop.JET_LOGTIME)">
            <summary>
            Determines whether two specified instances of JET_LOGTIME
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LOGTIME.op_Inequality(Microsoft.Isam.Esent.Interop.JET_LOGTIME,Microsoft.Isam.Esent.Interop.JET_LOGTIME)">
            <summary>
            Determines whether two specified instances of JET_LOGTIME
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LOGTIME.ToDateTime">
            <summary>
            Generate a DateTime representation of this JET_LOGTIME.
            </summary>
            <returns>
            A DateTime representing the JET_LOGTIME. If the JET_LOGTIME
            is null then null is returned.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LOGTIME.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LOGTIME.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LOGTIME.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LOGTIME.Equals(Microsoft.Isam.Esent.Interop.JET_LOGTIME)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_Move">
            <summary>
            Offsets for JetMove.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_Move.First">
            <summary>
            Move the cursor to the first index entry.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_Move.Previous">
            <summary>
            Move to the previous index entry.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_Move.Next">
            <summary>
            Move to the next index entry.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_Move.Last">
            <summary>
            Move to the last index entry.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO">
            <summary>
            The native version of the JET_OBJECTINFO structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO.objtyp">
            <summary>
            Holds the JET_OBJTYP of the structure. Currently only tables will be
            returned (that is, <see cref="F:Microsoft.Isam.Esent.Interop.JET_objtyp.Table"/>).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO.ignored1">
            <summary>
            Obsolete. Do not use.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO.ignored2">
            <summary>
            Obsolete. Do not use.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO.grbit">
            <summary>
            A group of bits that contain table options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO.flags">
            <summary>
            Table type flags.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO.cRecord">
            <summary>
            Number of records in the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO.cPage">
            <summary>
            Number of pages used by the table.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO">
            <summary>
            The JET_OBJECTINFO structure holds information about an object.
            Tables are the only object types that are currently supported.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO.objtyp">
            <summary>
            Gets the JET_OBJTYP of the table. Currently only tables will be
            returned (that is, <see cref="F:Microsoft.Isam.Esent.Interop.JET_objtyp.Table"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO.grbit">
            <summary>
            Gets the table options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO.flags">
            <summary>
            Gets the table type flags.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO.cRecord">
            <summary>
            Gets the number of records in the table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO.cPage">
            <summary>
            Gets the number of pages used by the table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO.SetFromNativeObjectinfo(Microsoft.Isam.Esent.Interop.NATIVE_OBJECTINFO@)">
            <summary>
            Sets the fields of the object from a native JET_OBJECTINFO struct.
            </summary>
            <param name="value">
            The native objectlist to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST">
            <summary>
            The native version of the JET_OBJECTLIST structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.tableid">
            <summary>
            Tableid of the temporary table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.cRecord">
            <summary>
            Number of records in the temporary table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.columnidcontainername">
            <summary>
            The id of column containing the name of the container type.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.columnidobjectname">
            <summary>
            The id of the column containing the name of the object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.columnidobjtyp">
            <summary>
            The id of the column containing the type of the object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.columniddtCreate">
            <summary>
            Obsolete. Do not use.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.columniddtUpdate">
            <summary>
            Obsolete. Do not use.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.columnidgrbit">
            <summary>
            The id of the column containing object grbits.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.columnidflags">
            <summary>
            The id of the column containing object flags.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.columnidcRecord">
            <summary>
            The id of the column containing the number of records in the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST.columnidcPage">
            <summary>
            The id of the column containing the number of pages the object uses.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST">
            <summary>
            Information about a temporary table containing information
            about all tables for a given database.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.tableid">
            <summary>
            Gets tableid of the temporary table. This should be closed
            when the table is no longer needed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.cRecord">
            <summary>
            Gets the number of records in the temporary table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.columnidobjectname">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the name of the table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.columnidobjtyp">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the type of the table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.columnidgrbit">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the grbits used when the table was created.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.columnidflags">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the table flags (e.g. the system table flag).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.columnidcRecord">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the number of records in the table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.columnidcontainername">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the name of the container.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.columnidcPage">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the number of pages used by the table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST.SetFromNativeObjectlist(Microsoft.Isam.Esent.Interop.NATIVE_OBJECTLIST)">
            <summary>
            Sets the fields of the object from a native JET_OBJECTLIST struct.
            </summary>
            <param name="value">
            The native objectlist to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_ObjInfo">
            <summary>
            Info levels for retrieving object info.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_ObjInfo.ListNoStats">
            <summary>
            Retrieve a JET_OBJINFOLIST containing information
            about all object in the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_ObjInfo.NoStats">
            <summary>
            Retrieve a JET_OBJINFO containing information
            about all object in the table.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_objtyp">
            <summary>
            Type of an ESENT object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_objtyp.Nil">
            <summary>
            Invalid object type.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_objtyp.Table">
            <summary>
            Object is a table.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows10.NATIVE_OPERATIONCONTEXT">
            <summary>
            A structure that can be used with <see cref="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam.OperationContext"/> to set a client context on a session.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.NATIVE_OPERATIONCONTEXT.ulUserID">
            <summary>
            User ID this operation context belongs to.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.NATIVE_OPERATIONCONTEXT.nOperationID">
            <summary>
            An operation ID identifying this operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.NATIVE_OPERATIONCONTEXT.nOperationType">
            <summary>
            Type of this operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.NATIVE_OPERATIONCONTEXT.nClientType">
            <summary>
            The client type that this operation context belongs to.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.NATIVE_OPERATIONCONTEXT.fFlags">
            <summary>
            Flags for additional context that an application might want to store.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT">
            <summary>
            A type that can be used with <see cref="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam.OperationContext"/> to set a client context on a session.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.#ctor(Microsoft.Isam.Esent.Interop.Windows10.NATIVE_OPERATIONCONTEXT@)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT"/>
            struct.
            </summary>
            <param name="native">The native <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.NATIVE_OPERATIONCONTEXT"/>
            object to be based upon.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.UserID">
            <summary>
            Gets or sets the user ID this operation context belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.OperationID">
            <summary>
            Gets or sets an operation ID identifying this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.OperationType">
            <summary>
            Gets or sets the type of this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.ClientType">
            <summary>
            Gets or sets the client type that this operation context belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.Flags">
            <summary>
            Gets or sets the flags for additional context that an application might want to store.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.op_Equality(Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT,Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT"/>
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.op_Inequality(Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT,Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT"/>
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.Equals(Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT.GetNativeOperationContext">
            <summary>
            Gets the native (interop) version of this object.
            </summary>
            <returns>
            The native (interop) version of this object.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2">
            <summary>
            Contains cumulative statistics on the work performed by the database
            engine on the current thread. This information is returned via
            JetGetThreadStats.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.Size">
            <summary>
            The size of a JET_THREADSTATS2 structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cbStruct">
            <summary>
            Size of the structure. This is used for interop.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.pagesReferenced">
            <summary>
            Number of pages visited.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.pagesRead">
            <summary>
            Number of pages read from disk.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.pagesPreread">
            <summary>
            Number of pages preread.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.pagesDirtied">
            <summary>
            Number of pages dirtied.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.pagesRedirtied">
            <summary>
            Pages redirtied.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.numLogRecords">
            <summary>
            Number of log records generated.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.loggedBytes">
            <summary>
            Number of bytes logged.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.usecsCacheMisses">
            <summary>
            Elapsed time for pages cache missed in microseconds.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.pagesCacheMisses">
            <summary>
            Number of pages cache missed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cPageReferenced">
            <summary>
            Gets the total number of database pages visited by the database
            engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cPageRead">
            <summary>
            Gets the total number of database pages fetched from disk by the
            database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cPagePreread">
            <summary>
            Gets the total number of database pages prefetched from disk by
            the database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cPageDirtied">
            <summary>
            Gets the total number of database pages, with no unwritten changes,
            that have been modified by the database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cPageRedirtied">
            <summary>
            Gets the total number of database pages, with unwritten changes, that
            have been modified by the database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cLogRecord">
            <summary>
            Gets the total number of transaction log records that have been
            generated by the database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cbLogRecord">
            <summary>
            Gets the total size, in bytes, of transaction log records that
            have been generated by the database engine on the current thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cusecPageCacheMiss">
            <summary>
            Gets the cumulative latency, in microseconds, of cache misses experienced by
            this thread.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.cPageCacheMiss">
            <summary>
            Gets the cumulative count of cache misses experienced by the thread.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Int32)">
            <summary>
            Create a new <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2"/> struct with the specified
            valued.
            </summary>
            <param name="cPageReferenced">
            Number of pages visited.
            </param>
            <param name="cPageRead">
            Number of pages read.
            </param>
            <param name="cPagePreread">
            Number of pages preread.
            </param>
            <param name="cPageDirtied">
            TNumber of pages dirtied.
            </param>
            <param name="cPageRedirtied">
            Number of pages redirtied.
            </param>
            <param name="cLogRecord">
            Number of log records generated.
            </param>
            <param name="cbLogRecord">
            Bytes of log records written.
            </param>
            <param name="cusecPageCacheMiss">
            Elapsed time for pages cache missed in microseconds.
            </param>
            <param name="cPageCacheMiss">
            Number of pages cache missed.
            </param>
            <returns>
            A new <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2"/> struct with the specified values.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.Add(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2,Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2)">
            <summary>
            Add the stats in two JET_THREADSTATS2 structures.
            </summary>
            <param name="t1">The first JET_THREADSTATS2.</param>
            <param name="t2">The second JET_THREADSTATS2.</param>
            <returns>A JET_THREADSTATS2 containing the result of adding the stats in t1 and t2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.op_Addition(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2,Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2)">
            <summary>
            Add the stats in two JET_THREADSTATS2 structures.
            </summary>
            <param name="t1">The first JET_THREADSTATS2.</param>
            <param name="t2">The second JET_THREADSTATS2.</param>
            <returns>A JET_THREADSTATS2 containing the result of adding the stats in t1 and t2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.Subtract(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2,Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2)">
            <summary>
            Calculate the difference in stats between two JET_THREADSTATS2 structures.
            </summary>
            <param name="t1">The first JET_THREADSTATS2.</param>
            <param name="t2">The second JET_THREADSTATS2.</param>
            <returns>A JET_THREADSTATS2 containing the difference in stats between t1 and t2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.op_Subtraction(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2,Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2)">
            <summary>
            Calculate the difference in stats between two JET_THREADSTATS2 structures.
            </summary>
            <param name="t1">The first JET_THREADSTATS2.</param>
            <param name="t2">The second JET_THREADSTATS2.</param>
            <returns>A JET_THREADSTATS2 containing the difference in stats between t1 and t2.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.op_Equality(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2,Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2)">
            <summary>
            Determines whether two specified instances of JET_THREADSTATS2
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.op_Inequality(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2,Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2)">
            <summary>
            Determines whether two specified instances of JET_THREADSTATS2
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.ToString">
            <summary>
            Gets a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.Equals(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2.GetPluralS(System.Int32)">
            <summary>
            Get the plural suffix ('s') for the given number.
            </summary>
            <param name="n">The number.</param>
            <returns>The letter 's' if n is greater than 1.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Api">
            <summary>
            Api calls introduced in Windows 10.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.Windows10Api.JetGetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT@)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to retrieve.</param>
            <param name="operationContext">An operation context to retrieve.</param>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.Windows10Api.JetSetSessionParameter(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam,Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT)">
            <summary>
            Sets a parameter on the provided session state, used for the lifetime of this session or until reset.
            </summary>
            <param name="sesid">The session to set the parameter on.</param>
            <param name="sesparamid">The ID of the session parameter to set.</param>
            <param name="operationContext">An operation context to set.</param>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.Windows10Api.JetGetThreadStats(Microsoft.Isam.Esent.Interop.Windows10.JET_THREADSTATS2@)">
            <summary>
            Retrieves performance information from the database engine for the
            current thread. Multiple calls can be used to collect statistics
            that reflect the activity of the database engine on this thread
            between those calls.
            </summary>
            <param name="threadstats">Returns the thread statistics data.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Coltyp">
            <summary>
            Column types that have been added to the Windows 10 version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Coltyp.UnsignedLongLong">
            <summary>
            Unsigned 64-bit number.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Grbits">
            <summary>
            System parameters that have been introduced in Windows 10.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Grbits.TableCreateImmutableStructure">
            <summary>
            Do not write to the input structures, so that the structures can be stored in readonly memory.
            Additionally, do not return any auto-opened tableid.
            </summary>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.CreateTableColumnIndexGrbit"/>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateTableColumnIndex3(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_TABLECREATE)"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Grbits.IndexCreateImmutableStructure">
            <summary>
            Do not write to the input structures, so that the structures can be stored in readonly memory.
            </summary>
            <remarks>
            This was primarily introduced for the C API so that the input structures could be stored in read-only
            memory. It is of limited use in this managed code interop, since the input structures are generated
            on the fly. It is provided here for completeness.
            </remarks>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.CreateIndexGrbit"/>
            <seealso cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Grbits.LogUnavailable">
            <summary>
            Passed back to durable commit callback to let it know that log is down (and all pending commits will not be flushed to disk).
            Used with <see cref="F:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param.DurableCommitCallback"/>.
            </summary>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows8.DurableCommitCallbackGrbit"/>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Param">
            <summary>
            System parameters that were introduced in Windows 10.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Param.ConfigStoreSpec">
            <summary>
            This allows the client to specify a registry path preceded by a reg: to optionally configure
            loading or overriding parameters from the registry.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam">
            <summary>
            Values of <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/> that were introduced in Windows 10.
            </summary>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam.TransactionLevel">
            <summary>
            Gets the current number of nested levels of transactions begun. A value of zero indicates that
            the session is not currently in a transaction. This parameter is read-only.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam.OperationContext">
            <summary>
            A client context of type <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT"/> that the engine uses to track and trace operations (such as IOs).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows10.Windows10Sesparam.CorrelationID">
            <summary>
            A 32-bit integer ID that is logged in traces and can be used by clients to correlate ESE actions with their activity.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows10.Windows10Session">
            <summary>
            An extension class to provide Values of <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/> that were introduced in Windows 10.
            </summary>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows8.JET_sesparam"/>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.Windows10Session.GetTransactionLevel(Microsoft.Isam.Esent.Interop.Session)">
            <summary>
            Gets the current number of nested levels of transactions begun. A value of zero indicates that
            the session is not currently in a transaction. This parameter is read-only.
            </summary>
            <param name="session">The <see cref="T:Microsoft.Isam.Esent.Interop.Session"/> to query.</param>
            <returns>The current transaction level of the specified database session.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.Windows10Session.GetOperationContext(Microsoft.Isam.Esent.Interop.Session)">
            <summary>
            A client context of type <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT"/> that the engine uses to track
            and trace operations (such as IOs).
            </summary>
            <param name="session">The <see cref="T:Microsoft.Isam.Esent.Interop.Session"/> to query.</param>
            <returns>The operation context of the specified database session.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.Windows10Session.SetOperationContext(Microsoft.Isam.Esent.Interop.Session,Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT)">
            <summary>
            A client context of type <see cref="T:Microsoft.Isam.Esent.Interop.Windows10.JET_OPERATIONCONTEXT"/> that the engine uses to track
            and trace operations (such as IOs).
            </summary>
            <param name="session">The <see cref="T:Microsoft.Isam.Esent.Interop.Session"/> to query.</param>
            <param name="operationcontext">The operation context to set.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.Windows10Session.GetCorrelationID(Microsoft.Isam.Esent.Interop.Session)">
            <summary>
            A 32-bit integer ID that is logged in traces and can be used by clients to
            correlate ESE actions with their activity.
            </summary>
            <param name="session">The <see cref="T:Microsoft.Isam.Esent.Interop.Session"/> to query.</param>
            <returns>The corrlation identifer of the specified database session.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows10.Windows10Session.SetCorrelationID(Microsoft.Isam.Esent.Interop.Session,System.Int32)">
            <summary>
            A 32-bit integer ID that is logged in traces and can be used by clients to
            correlate ESE actions with their activity.
            </summary>
            <param name="session">The <see cref="T:Microsoft.Isam.Esent.Interop.Session"/> to set.</param>
            <param name="correlationId">The value to set. Internally, this is a 32-bit unsigned integer.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_param">
            <summary>
            ESENT system parameters. This list is not extensive. Some parameters introduced later
            are in different classes, such as <see cref="T:Microsoft.Isam.Esent.Interop.Vista.VistaParam"/>, <see cref="T:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param"/>,
            or <see cref="T:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param"/>.
            <para>
            <see cref="T:Microsoft.Isam.Esent.Interop.JET_param"/> is usually used with <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.Int32,System.String)"/>,
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.IntPtr,System.String)"/>,
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.Int32@,System.String@,System.Int32)"/>, and
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetSystemParameter(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_param,System.IntPtr@,System.String@,System.Int32)"/>.
            Some of these parameters are exposed with the helper classes <see cref="T:Microsoft.Isam.Esent.Interop.SystemParameters"/>
            and <see cref="T:Microsoft.Isam.Esent.Interop.InstanceParameters"/>.
            </para>
            </summary>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Vista.VistaParam"/>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param"/>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows8.Windows8Param"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.SystemPath">
            <summary>
            This parameter indicates the relative or absolute file system path of the
            folder that will contain the checkpoint file for the instance. The path
            must be terminated with a backslash character, which indicates that the
            target path is a folder. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.TempPath">
            <summary>
            This parameter indicates the relative or absolute file system path of
            the folder or file that will contain the temporary database for the instance.
            If the path is to a folder that will contain the temporary database then it
            must be terminated with a backslash character.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.LogFilePath">
            <summary>
            This parameter indicates the relative or absolute file system path of the
            folder that will contain the transaction logs for the instance. The path must
            be terminated with a backslash character, which indicates that the target path
            is a folder.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.BaseName">
            <summary>
            This parameter sets the three letter prefix used for many of the files used by
            the database engine. For example, the checkpoint file is called EDB.CHK by
            default because EDB is the default base name.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.EventSource">
            <summary>
            This parameter supplies an application specific string that will be added to
            any event log messages that are emitted by the database engine. This allows
            easy correlation of event log messages with the source application. By default
            the host application executable name will be used.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.MaxSessions">
            <summary>
            This parameter reserves the requested number of session resources for use by an
            instance. A session resource directly corresponds to a JET_SESID data type.
            This setting will affect how many sessions can be used at the same time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.MaxOpenTables">
            <summary>
            This parameter reserves the requested number of B+ Tree resources for use by
            an instance. This setting will affect how many tables can be used at the same time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.MaxCursors">
            <summary>
            This parameter reserves the requested number of cursor resources for use by an
            instance. A cursor resource directly corresponds to a JET_TABLEID data type.
            This setting will affect how many cursors can be used at the same time. A cursor
            resource cannot be shared by different sessions so this parameter must be set to
            a large enough value so that each session can use as many cursors as are required.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.MaxVerPages">
            <summary>
            This parameter reserves the requested number of version store pages for use by an instance.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.MaxTemporaryTables">
            <summary>
            This parameter reserves the requested number of temporary table resources for use
            by an instance. This setting will affect how many temporary tables can be used at
            the same time. If this system parameter is set to zero then no temporary database
            will be created and any activity that requires use of the temporary database will
            fail. This setting can be useful to avoid the I/O required to create the temporary
            database if it is known that it will not be used.
            </summary>
            <remarks>
            The use of a temporary table also requires a cursor resource.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.LogFileSize">
            <summary>
            This parameter will configure the size of the transaction log files. Each
            transaction log file is a fixed size. The size is equal to the setting of
            this system parameter in units of 1024 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.LogBuffers">
            <summary>
            This parameter will configure the amount of memory used to cache log records
            before they are written to the transaction log file. The unit for this
            parameter is the sector size of the volume that holds the transaction log files.
            The sector size is almost always 512 bytes, so it is safe to assume that size
            for the unit. This parameter has an impact on performance. When the database
            engine is under heavy update load, this buffer can become full very rapidly.
            A larger cache size for the transaction log file is critical for good update
            performance under such a high load condition. The default is known to be too small
            for this case.
            Do not set this parameter to a number of buffers that is larger (in bytes) than
            half the size of a transaction log file.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.CircularLog">
            <summary>
            This parameter configures how transaction log files are managed by the database
            engine. When circular logging is off, all transaction log files that are generated
            are retained on disk until they are no longer needed because a full backup of the
            database has been performed. When circular logging is on, only transaction log files
            that are younger than the current checkpoint are retained on disk. The benefit of
            this mode is that backups are not required to retire old transaction log files. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.DbExtensionSize">
            <summary>
            This parameter controls the amount of space that is added to a database file each
            time it needs to grow to accommodate more data. The size is in database pages.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.PageTempDBMin">
            <summary>
            This parameter controls the initial size of the temporary database. The size is in
            database pages. A size of zero indicates that the default size of an ordinary
            database should be used. It is often desirable for small applications to configure
            the temporary database to be as small as possible. Setting this parameter to
            SystemParameters.PageTempDBSmallest will achieve the smallest temporary database possible.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.CacheSizeMax">
            <summary>
            This parameter configures the maximum size of the database page cache. The size
            is in database pages. If this parameter is left to its default value, then the
            maximum size of the cache will be set to the size of physical memory when JetInit
            is called.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.CheckpointDepthMax">
            <summary>
            This parameter controls how aggressively database pages are flushed from the
            database page cache to minimize the amount of time it will take to recover from a
            crash. The parameter is a threshold in bytes for about how many transaction log
            files will need to be replayed after a crash. If circular logging is enabled using
            JET_param.CircularLog then this parameter will also control the approximate amount
            of transaction log files that will be retained on disk.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.LrukCorrInterval">
            <summary>
            This parameter controls the correlation interval of ESE's LRU-K page replacement
            algorithm.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.LrukTimeout">
            <summary>
            This parameter controls the timeout interval of ESE's LRU-K page replacement
            algorithm.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.OutstandingIOMax">
            <summary>
            This parameter controls how many database file I/Os can be queued
            per-disk in the host operating system at one time.  A larger value
            for this parameter can significantly help the performance of a large
            database application.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.StartFlushThreshold">
            <summary>
            This parameter controls when the database page cache begins evicting pages from the
            cache to make room for pages that are not cached. When the number of page buffers in the cache
            drops below this threshold then a background process will be started to replenish that pool
            of available buffers. This threshold is always relative to the maximum cache size as set by
            JET_paramCacheSizeMax. This threshold must also always be less than the stop threshold as
            set by JET_paramStopFlushThreshold.
            <para>
            The distance height of the start threshold will determine the response time that the database
             page cache must have to produce available buffers before the application needs them. A high
            start threshold will give the background process more time to react. However, a high start
            threshold implies a higher stop threshold and that will reduce the effective size of the
            database page cache for modified pages (Windows 2000) or for all pages (Windows XP and later).
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.StopFlushThreshold">
            <summary>
            This parameter controls when the database page cache ends evicting pages from the cache to make
            room for pages that are not cached. When the number of page buffers in the cache rises above
            this threshold then the background process that was started to replenish that pool of available
            buffers is stopped. This threshold is always relative to the maximum cache size as set by
            JET_paramCacheSizeMax. This threshold must also always be greater than the start threshold
            as set by JET_paramStartFlushThreshold.
            <para>
            The distance between the start threshold and the stop threshold affects the efficiency with
            which database pages are flushed by the background process. A larger gap will make it
            more likely that writes to neighboring pages may be combined. However, a high stop
            threshold will reduce the effective size of the database page cache for modified
            pages (Windows 2000) or for all pages (Windows XP and later).
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.Recovery">
            <summary>
            This parameter is the master switch that controls crash recovery for an instance.
            If this parameter is set to "On" then ARIES style recovery will be used to bring all
            databases in the instance to a consistent state in the event of a process or machine
            crash. If this parameter is set to "Off" then all databases in the instance will be
            managed without the benefit of crash recovery. That is to say, that if the instance
            is not shut down cleanly using JetTerm prior to the process exiting or machine shutdown
            then the contents of all databases in that instance will be corrupted.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.EnableOnlineDefrag">
            <summary>
            This parameter controls the behavior of online defragmentation when initiated using
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetDefragment(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.DefragGrbit)"/> and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetDefragment2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,System.Int32@,System.Int32@,Microsoft.Isam.Esent.Interop.JET_CALLBACK,Microsoft.Isam.Esent.Interop.DefragGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.CacheSize">
            <summary>
            This parameter can be used to control the size of the database page cache at run time.
            Ordinarily, the cache will automatically tune its size as a function of database and
            machine activity levels. If the application sets this parameter to zero, then the cache
            will tune its own size in this manner. However, if the application sets this parameter
            to a non-zero value then the cache will adjust itself to that target size.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.EnableIndexChecking">
            <summary>
            When this parameter is true, every database is checked at JetAttachDatabase time for
            indexes over Unicode key columns that were built using an older version of the NLS
            library in the operating system. This must be done because the database engine persists
            the sort keys generated by LCMapStringW and the value of these sort keys change from release to release.
            If a primary index is detected to be in this state then JetAttachDatabase will always fail with
            JET_err.PrimaryIndexCorrupted.
            If any secondary indexes are detected to be in this state then there are two possible outcomes.
            If AttachDatabaseGrbit.DeleteCorruptIndexes was passed to JetAttachDatabase then these indexes
            will be deleted and JET_wrnCorruptIndexDeleted will be returned from JetAttachDatabase. These
            indexes will need to be recreated by your application. If AttachDatabaseGrbit.DeleteCorruptIndexes
            was not passed to JetAttachDatabase then the call will fail with JET_errSecondaryIndexCorrupted.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.EventSourceKey">
            <summary>
            This parameter can be used to control which event log the database engine uses for its event log
            messages. By default, all event log messages will go to the Application event log. If the registry
            key name for another event log is configured then the event log messages will go there instead.
            </summary>        
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.NoInformationEvent">
            <summary>
            When this parameter is true, informational event log messages that would ordinarily be generated by
            the database engine will be suppressed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.EventLoggingLevel">
            <summary>
            Configures the detail level of eventlog messages that are emitted
            to the eventlog by the database engine. Higher numbers will result
            in more detailed eventlog messages.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.DeleteOutOfRangeLogs">
            <summary>
            Delete the log files that are not matching (generation wise) during soft recovery.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.EnableIndexCleanup">
            <summary>
            <para>
            After Windows 7, it was discovered that JET_paramEnableIndexCleanup had some implementation limitations, reducing its effectiveness.
            Rather than update it to work with locale names, the functionality is removed altogether.
            </para>
            <para>
            Unfortunately JET_paramEnableIndexCleanup can not be ignored altogether. JET_paramEnableIndexChecking defaults to false, so if
            JET_paramEnableIndexCleanup were to be removed entirely, then by default there were would be no checks for NLS changes!
            </para>
            <para>
            The current behavious (when enabled) is to track the language sort versions for the indices, and when the sort version for that
            particular locale changes, the engine knows which indices are now invalid. For example, if the sort version for only "de-de" changes,
            then the "de-de" indices are invalid, but the "en-us" indices will be fine.
            </para>
            <para>
            Post-Windows 8:
            JET_paramEnableIndexChecking accepts JET_INDEXCHECKING (which is an enum). The values of '0' and '1' have the same meaning as before,
            but '2' is JET_IndexCheckingDeferToOpenTable, which means that the NLS up-to-date-ness is NOT checked when the database is attached.
            It is deferred to JetOpenTable(), which may now fail with JET_errPrimaryIndexCorrupted or JET_errSecondaryIndexCorrupted (which
            are NOT actual corruptions, but instead reflect an NLS sort change).
            </para>
            <para>
            IN SUMMARY:
            New code should explicitly set both IndexChecking and IndexCleanup to the same value.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.CacheSizeMin">
            <summary>
            This parameter configures the minimum size of the database page cache. The size is in database pages.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.PreferredVerPages">
            <summary>
            This parameter represents a threshold relative to <see cref="F:Microsoft.Isam.Esent.Interop.JET_param.MaxVerPages"/> that controls
            the discretionary use of version pages by the database engine. If the size of the version store exceeds
            this threshold then any information that is only used for optional background tasks, such as reclaiming
            deleted space in the database, is instead sacrificed to preserve room for transactional information.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.DatabasePageSize">
            <summary>
            This parameter configures the page size for the database. The page
            size is the smallest unit of space allocation possible for a database
            file. The database page size is also very important because it sets
            the upper limit on the size of an individual record in the database. 
            </summary>
            <remarks>
            Only one database page size is supported per process at this time.
            This means that if you are in a single process that contains different
            applications that use the database engine then they must all agree on
            a database page size.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.ErrorToString">
            <summary>
            This parameter can be used to convert a JET_ERR into a string.
            This should only be used with JetGetSystemParameter.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.RuntimeCallback">
            <summary>
            Configures the engine with a <see cref="T:Microsoft.Isam.Esent.Interop.JET_CALLBACK"/> delegate.
            This callback may be called for the following reasons:
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.FreeCursorLS"/>, <see cref="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.FreeTableLS"/>
            or <see cref="F:Microsoft.Isam.Esent.Interop.JET_cbtyp.Null"/>. See <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.LsGrbit)"/>
            for more information. This parameter cannot currently be retrieved.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.CleanupMismatchedLogFiles">
            <summary>
            This parameter controls the outcome of JetInit when the database
            engine is configured to start using transaction log files on disk
            that are of a different size than what is configured. Normally,
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetInit(Microsoft.Isam.Esent.Interop.JET_INSTANCE@)"/> will successfully recover the databases
            but will fail with <see cref="F:Microsoft.Isam.Esent.Interop.JET_err.LogFileSizeMismatchDatabasesConsistent"/>
            to indicate that the log file size is misconfigured. However, when
            this parameter is set to true then the database engine will silently
            delete all the old log files, start a new set of transaction log files
            using the configured log file size. This parameter is useful when the
            application wishes to transparently change its transaction log file
            size yet still work transparently in upgrade and restore scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.ExceptionAction">
            <summary>
            This parameter controls what happens when an exception is thrown by the 
            database engine or code that is called by the database engine. When set 
            to JET_ExceptionMsgBox, any exception will be thrown to the Windows unhandled 
            exception filter. This will result in the exception being handled as an 
            application failure. The intent is to prevent application code from erroneously 
            trying to catch and ignore an exception generated by the database engine. 
            This cannot be allowed because database corruption could occur. If the application 
            wishes to properly handle these exceptions then the protection can be disabled 
            by setting this parameter to JET_ExceptionNone.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.CreatePathIfNotExist">
            <summary>
            When this parameter is set to true then any folder that is missing in a file system path in use by
            the database engine will be silently created. Otherwise, the operation that uses the missing file system
            path will fail with JET_err.InvalidPath.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.OneDatabasePerSession">
            <summary>
            When this parameter is true then only one database is allowed to
            be opened using JetOpenDatabase by a given session at one time.
            The temporary database is excluded from this restriction. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.MaxInstances">
            <summary>
            This parameter controls the maximum number of instances that can be created in a single process.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.VersionStoreTaskQueueMax">
            <summary>
            This parameter controls the number of background cleanup work items that
            can be queued to the database engine thread pool at any one time.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_param.DisablePerfmon">
            <summary>
            This parameter controls whether perfmon counters should be enabled or not.
            By default, perfmon counters are enabled, but there is memory overhead for enabling
            them.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_PFNREALLOC">
            <summary>
            Callback used by JetEnumerateColumns to allocate memory for its output buffers.
            </summary>
            <param name="context">Context given to JetEnumerateColumns.</param>
            <param name="memory">
            If non-zero, a pointer to a memory block previously allocated by this callback.
            </param>
            <param name="requestedSize">
            The new size of the memory block (in bytes). If this is 0 and a memory block is
            specified, that memory block will be freed.
            </param>
            <returns>
            A pointer to newly allocated memory. If memory could not be allocated then
            <see cref="F:System.IntPtr.Zero"/> should be returned.
            </returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_PFNSTATUS">
            <summary>
            Receives information about the progress of long-running operations,
            such as defragmentation, backup, or restore operations. During such
            operations, the database engine calls this callback function to give
             an update on the progress of the operation.
            </summary>
            <param name="sesid">
            The session with which the long running operation was called.
            </param>
            <param name="snp">The type of operation.</param>
            <param name="snt">The status of the operation.</param>
            <param name="data">Optional data. May be a <see cref="T:Microsoft.Isam.Esent.Interop.JET_SNPROG"/>.</param>
            <returns>An error code.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_PFNSTATUS">
            <summary>
            Receives information about the progress of long-running operations,
            such as defragmentation, backup, or restore operations. During such
            operations, the database engine calls this callback function to give
             an update on the progress of the operation.
            </summary>
            <remarks>
            This is the internal version of the callback. The final parameter is
            a void* pointer, which may point to a NATIVE_SNPROG.
            </remarks>
            <param name="nativeSesid">
            The session with which the long running operation was called.
            </param>
            <param name="snp">The type of operation.</param>
            <param name="snt">The status of the operation.</param>
            <param name="snprog">Optional <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_SNPROG"/>.</param>
            <returns>An error code.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper">
            <summary>
            Wraps a NATIVE_PFNSTATUS callback around a JET_PFNSTATUS. This is
            used to convert the snprog argument to a managed snprog.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.TraceSwitch">
            <summary>
            API call tracing.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.wrappedCallback">
            <summary>
            The wrapped status callback.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.nativeCallback">
            <summary>
            The native version of the callback. This will be a closure (because we are wrapping
            a non-static method) so keep track of it here to make sure it isn't garbage collected.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.#ctor(Microsoft.Isam.Esent.Interop.JET_PFNSTATUS)">
            <summary>
            Initializes a new instance of the StatusCallbackWrapper class.
            </summary>
            <param name="wrappedCallback">
            The managed callback to use.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.NativeCallback">
            <summary>
            Gets a NATIVE_PFNSTATUS callback that wraps the managed callback.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.SavedException">
            <summary>
            Gets or sets the saved exception. If the callback throws an exception
            it is saved here and should be rethrown when the API call finishes.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.ThreadWasAborted">
            <summary>
            Gets or sets a value indicating whether the thread was aborted during
            the callback.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.ThrowSavedException">
            <summary>
            If an exception was generated during a callback throw it.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StatusCallbackWrapper.CallbackImpl(System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Callback function for native code. We don't want to throw an exception through
            unmanaged ESENT because that will corrupt ESENT's internal state. Instead we
            catch all exceptions and return an error instead. We use a CER to make catching
            the exceptions as reliable as possible.
            </summary>
            <param name="nativeSesid">
            The session with which the long running operation was called.
            </param>
            <param name="nativeSnp">The type of operation.</param>
            <param name="nativeSnt">The status of the operation.</param>
            <param name="nativeData">Optional <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_SNPROG"/>.</param>
            <returns>An error code.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_prep">
            <summary>
            Update types for JetPrepareUpdate.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_prep.Insert">
            <summary>
             This flag causes the cursor to prepare for an insert of a new record.
             All the data is initialized to the default state for the record.
             If the table has an auto-increment column, then a new value is
             assigned to this record regardless of whether the update ultimately
             succeeds, fails or is cancelled.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_prep.Replace">
            <summary>
             This flag causes the cursor to prepare for a replace of the current
             record. If the table has a version column, then the version column
             is set to the next value in its sequence. If this update does not
             complete, then the version value in the record will be unaffected.
             An update lock is taken on the record to prevent other sessions
             from updating this record before this session completes.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_prep.Cancel">
            <summary>
             This flag causes JetPrepareUpdate to cancel the update for this cursor.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_prep.ReplaceNoLock">
            <summary>
             This flag is similar to JET_prepReplace, but no lock is taken to prevent
             other sessions from updating this record. Instead, this session may receive
             JET_errWriteConflict when it calls JetUpdate to complete the update.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_prep.InsertCopy">
            <summary>
             This flag causes the cursor to prepare for an insert of a copy of the
             existing record. There must be a current record if this option is used.
             The initial state of the new record is copied from the current record.
             Long values that are stored off-record are virtually copied.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_prep.InsertCopyDeleteOriginal">
            <summary>
             This flag causes the cursor to prepare for an insert of the same record,
             and a delete or the original record. It is used in cases in which the
             primary key has changed.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_RECORDLIST">
            <summary>
            The native version of the JET_RECORDLIST structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RECORDLIST.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RECORDLIST.tableid">
            <summary>
            Temporary table containing the bookmarks.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RECORDLIST.cRecords">
            <summary>
            Number of records in the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RECORDLIST.columnidBookmark">
            <summary>
            Column id of the column containing the record bookmarks.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_RECORDLIST">
            <summary>
            Information about a temporary table containing information
            about all indexes for a given table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RECORDLIST.tableid">
            <summary>
            Gets tableid of the temporary table. This should be closed
            when the table is no longer needed.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RECORDLIST.cRecords">
            <summary>
            Gets the number of records in the temporary table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RECORDLIST.columnidBookmark">
            <summary>
            Gets the columnid of the column in the temporary table which
            stores the bookmark of the record.
            The column is of type JET_coltyp.Text.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RECORDLIST.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXLIST"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXLIST"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RECORDLIST.SetFromNativeRecordlist(Microsoft.Isam.Esent.Interop.NATIVE_RECORDLIST)">
            <summary>
            Sets the fields of the object from a native JET_RECORDLIST struct.
            </summary>
            <param name="value">
            The native recordlist to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_RECPOS">
            <summary>
            The native version of the JET_RETINFO structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RECPOS.Size">
            <summary>
            Size of NATIVE_RECPOS structures.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RECPOS.cbStruct">
            <summary>
            Size of this structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RECPOS.centriesLT">
            <summary>
            Approximate number of index entries less than the key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RECPOS.centriesInRange">
            <summary>
            Approximate number of entries in the index range.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RECPOS.centriesTotal">
            <summary>
            Approximate number of entries in the index.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_RECPOS">
            <summary>
            Represents a fractional position within an index. This is used by JetGotoPosition
            and JetGetRecordPosition.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_RECPOS.entriesBeforeKey">
            <summary>
            The number of entries before the key.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_RECPOS.totalEntries">
            <summary>
            Total number of entries.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RECPOS.centriesLT">
            <summary>
            Gets or sets the approximate number of index entries less than the key.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RECPOS.centriesTotal">
            <summary>
            Gets or sets the approximate number of entries in the index.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RECPOS.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RECPOS.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RECPOS.ContentEquals(Microsoft.Isam.Esent.Interop.JET_RECPOS)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RECPOS.GetNativeRecpos">
            <summary>
            Get a NATIVE_RECPOS structure representing the object.
            </summary>
            <returns>A NATIVE_RECPOS whose members match the class.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RECPOS.SetFromNativeRecpos(Microsoft.Isam.Esent.Interop.NATIVE_RECPOS)">
            <summary>
            Sets the fields of the object from a NATIVE_RECPOS structure.
            </summary>
            <param name="value">The NATIVE_RECPOS which will be used to set the fields.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_RETINFO">
            <summary>
            The native version of the JET_RETINFO structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETINFO.Size">
            <summary>
            The size of a NATIVE_RETINFO structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETINFO.cbStruct">
            <summary>
            Size of this structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETINFO.ibLongValue">
            <summary>
            Offset of the long value to retrieve.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETINFO.itagSequence">
            <summary>
            Itag sequence to retrieve.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETINFO.columnidNextTagged">
            <summary>
            Returns the columnid of the next tagged column.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_RETINFO">
            <summary>
            Contains optional input and output parameters for JetRetrieveColumn.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETINFO.ibLongValue">
            <summary>
            Gets or sets the offset to the first byte to be retrieved from a column of
            type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/>, or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETINFO.itagSequence">
            <summary>
            Gets or sets the sequence number of value in a multi-valued column.
            The array of values is one-based. The first value is
            sequence 1, not 0. If the record column has only one value then
            1 should be passed as the itagSequence.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETINFO.columnidNextTagged">
            <summary>
            Gets the columnid of the retrieved tagged, multi-valued or
            sparse, column when all tagged columns are retrieved by passing
            0 as the columnid to JetRetrieveColumn.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RETINFO.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_RETINFO"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_RETINFO"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RETINFO.ContentEquals(Microsoft.Isam.Esent.Interop.JET_RETINFO)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RETINFO.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RETINFO.GetNativeRetinfo">
            <summary>
            Get a NATIVE_RETINFO structure representing the object.
            </summary>
            <returns>A NATIVE_RETINFO whose members match the class.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RETINFO.SetFromNativeRetinfo(Microsoft.Isam.Esent.Interop.NATIVE_RETINFO)">
            <summary>
            Sets the fields of the object from a NATIVE_RETINFO structure.
            </summary>
            <param name="value">The NATIVE_RETINFO which will be used to set the fields.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN">
            <summary>
            The native version of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN"/> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN.columnid">
            <summary>
            The column identifier for the column to retrieve.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN.pvData">
            <summary>
            A pointer to begin storing data that is retrieved from the
            column value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN.cbData">
            <summary>
            The size of allocation beginning at pvData, in bytes. The
            retrieve column operation will not store more data at pvData
            than cbData.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN.cbActual">
            <summary>
            The size, in bytes, of data that is retrieved by a retrieve
            column operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN.grbit">
            <summary>
            A group of bits that contain the options for column retrieval.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN.ibLongValue">
            <summary>
            The offset to the first byte to be retrieved from a column of
            type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/> or
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN.itagSequence">
            <summary>
            The sequence number of the values that are contained in a
            multi-valued column. If the itagSequence is 0 then the number
            of instances of a multi-valued column are returned instead of
            any column data. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN.columnidNextTagged">
            <summary>
            The columnid of the tagged, multi-valued, or sparse column
            when all tagged columns are retrieved by passing 0 as the
            columnid.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN.err">
            <summary>
            Error codes and warnings returned from the retrieval of the column.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN">
            <summary>
            Contains input and output parameters for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetRetrieveColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN[],System.Int32)"/>.
            Fields in the structure describe what column value to retrieve, how to
            retrieve it, and where to save results.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.columnid">
            <summary>
            Gets or sets the column identifier for the column to retrieve.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.pvData">
            <summary>
            Gets or sets the buffer that will store data that is retrieved from the
            column.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.ibData">
            <summary>
            Gets or sets the offset in the buffer that data will be stored in.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.cbData">
            <summary>
            Gets or sets the size of the <see cref="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.pvData"/> buffer, in bytes. The
            retrieve column operation will not store more data in pvData
            than cbData.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.cbActual">
            <summary>
            Gets the size, in bytes, of data that is retrieved by a retrieve
            column operation.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.grbit">
            <summary>
            Gets or sets the options for column retrieval.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.ibLongValue">
            <summary>
            Gets or sets the offset to the first byte to be retrieved from a column of
            type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/> or
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.itagSequence">
            <summary>
            Gets or sets the sequence number of the values that are contained in a
            multi-valued column. If the itagSequence is 0 then the number
            of instances of a multi-valued column are returned instead of
            any column data. 
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.columnidNextTagged">
            <summary>
            Gets the columnid of the tagged, multi-valued, or sparse column
            when all tagged columns are retrieved by passing 0 as the
            columnid.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.err">
            <summary>
            Gets the warning returned from the retrieval of the column.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.CheckDataSize">
            <summary>
            Check to see if cbData is negative or greater than cbData.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.GetNativeRetrievecolumn(Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN@)">
            <summary>
            Gets the NATIVE_RETRIEVECOLUMN structure that represents the object.
            </summary>
            <param name="retrievecolumn">The NATIVE_RETRIEVECOLUMN structure to fill in.</param>
            <remarks>
            This takes a reference because a NATIVE_RETRIEVECOLUMN is quite large (40 bytes)
            so copying it around can be expensive.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RETRIEVECOLUMN.UpdateFromNativeRetrievecolumn(Microsoft.Isam.Esent.Interop.NATIVE_RETRIEVECOLUMN@)">
            <summary>
            Update the output members of the class from a NATIVE_RETRIEVECOLUMN
            structure. This should be done after the columns are retrieved.
            </summary>
            <param name="native">
            The structure containing the updated output fields.
            </param>
            <remarks>
            This takes a reference because a NATIVE_RETRIEVECOLUMN is quite large (40 bytes)
            so copying it around can be expensive.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_RSTINFO">
            <summary>
            The native version of the JET_RSTINFO structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RSTINFO.SizeOfRstinfo">
            <summary>
            The size of a NATIVE_RSTINFO structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RSTINFO.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RSTINFO.rgrstmap">
            <summary>
            The array of <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_RSTMAP"/> structures.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RSTINFO.crstmap">
            <summary>
            The number of elements in the restore-map array.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RSTINFO.lgposStop">
            <summary>
            The log position at which it stopped.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RSTINFO.logtimeStop">
            <summary>
            The time at which it stopped.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RSTINFO.pfnStatus">
            <summary>
            The callback to the status function.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_RSTINFO">
            <summary>
            Contains optional input and output parameters for JetRetrieveColumn.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RSTINFO.rgrstmap">
            <summary>
            Gets or sets the array of <see cref="T:Microsoft.Isam.Esent.Interop.JET_RSTMAP"/> structures.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RSTINFO.crstmap">
            <summary>
            Gets or sets the number of elements in the restore-map array.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RSTINFO.lgposStop">
            <summary>
            Gets or sets the log position to stop recovery at.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RSTINFO.logtimeStop">
            <summary>
            Gets or sets the time at which it stopped.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RSTINFO.pfnStatus">
            <summary>
            Gets or sets the callback to Gets or sets the status function.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RSTINFO.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_RSTINFO"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_RSTINFO"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RSTINFO.ContentEquals(Microsoft.Isam.Esent.Interop.JET_RSTINFO)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RSTINFO.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RSTINFO.CheckMembersAreValid">
            <summary>
            Check this object to make sure its parameters are valid.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RSTINFO.GetNativeRstinfo">
            <summary>
            Get a native version of this managed structure.
            </summary>
            <returns>A native version of this object.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_RSTMAP">
            <summary>
            The native version of the JET_RSTMAP structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RSTMAP.szDatabaseName">
            <summary>
            The old name/path of the database. Can be null if it is unchanged.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_RSTMAP.szNewDatabaseName">
            <summary>
             The current name/path of the database. Must not be null.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.NATIVE_RSTMAP.FreeHGlobal">
            <summary>
            Free the string memory.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_RSTMAP">
            <summary>
            Enables the remapping of database file paths that are stored in the transaction logs during recovery.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_RSTMAP.databaseName">
            <summary>
            The old name/path of the database. Can be null if it is unchanged.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_RSTMAP.newDatabaseName">
            <summary>
             The current name/path of the database. Must not be null.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RSTMAP.szDatabaseName">
            <summary>
            Gets or sets the old name/path of the database. Can be null if it is unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_RSTMAP.szNewDatabaseName">
            <summary>
             Gets or sets the current name/path of the database. Must not be null.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RSTMAP.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_RSTMAP"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_RSTMAP"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RSTMAP.ContentEquals(Microsoft.Isam.Esent.Interop.JET_RSTMAP)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RSTMAP.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_RSTMAP.GetNativeRstmap">
            <summary>
            Get a native version of this managed structure.
            </summary>
            <returns>A native version of this object.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN">
            <summary>
            The native version of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN"/> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN.columnid">
            <summary>
            Columnid to set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN.pvData">
            <summary>
            Data to set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN.cbData">
            <summary>
            Size of data to set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN.grbit">
            <summary>
            SetColumns options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN.ibLongValue">
            <summary>
            Long-value offset to set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN.itagSequence">
            <summary>
            Itag sequence to set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN.err">
            <summary>
            Returns the error from setting the column.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN">
            <summary>
            Contains input and output parameters for <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_SETCOLUMN[],System.Int32)"/>.
            Fields in the structure describe what column value to set, how to set it,
            and where to get the column set data.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.columnid">
            <summary>
            Gets or sets the column identifier for a column to set.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.pvData">
            <summary>
            Gets or sets a pointer to the data to set.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.ibData">
            <summary>
            Gets or sets the offset of the data to set.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.cbData">
            <summary>
            Gets or sets the size of the data to set.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.grbit">
            <summary>
            Gets or sets options for the set column operation.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.ibLongValue">
            <summary>
            Gets or sets offset to the first byte to be set in a column of type
            <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/> or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.itagSequence">
            <summary>
            Gets or sets the sequence number of value in a multi-valued column to be set. The array of values is one-based.
            The first value is sequence 1, not 0 (zero). If the record column has only one value then 1 should be passed
            as the itagSequence if that value is being replaced. A value of 0 (zero) means to add a new column value instance
            to the end of the sequence of column values.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.err">
            <summary>
            Gets the error code or warning returned from the set column operation.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.ContentEquals(Microsoft.Isam.Esent.Interop.JET_SETCOLUMN)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.CheckDataSize">
            <summary>
            Check to see if cbData is negative or greater than the length of pvData.
            Check to see if ibData is negative or greater than the length of pvData.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SETCOLUMN.GetNativeSetcolumn">
            <summary>
            Gets the NATIVE_SETCOLUMN structure that represents the object.
            </summary>
            <returns>A NATIVE_SETCOLUMN structure whose fields match the class.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_SETINFO">
            <summary>
            The native version of the JET_SETINFO structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETINFO.Size">
            <summary>
            The size of a NATIVE_SETINFO structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETINFO.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETINFO.ibLongValue">
            <summary>
            Offset to the first byte to be set in a column of type JET_coltypLongBinary or JET_coltypLongText.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SETINFO.itagSequence">
            <summary>
            The sequence number of value in a multi-valued column to be set.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_SETINFO">
            <summary>
            Settings for JetSetColumn.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SETINFO.longValueOffset">
            <summary>
            Offset to the first byte to be set in a column of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/> or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SETINFO.itag">
            <summary>
            The sequence number of value in a multi-valued column to be set.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETINFO.ibLongValue">
            <summary>
            Gets or sets offset to the first byte to be set in a column of type <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongBinary"/> or <see cref="F:Microsoft.Isam.Esent.Interop.JET_coltyp.LongText"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SETINFO.itagSequence">
            <summary>
            Gets or sets the sequence number of value in a multi-valued column to be set. The array of values is one-based.
            The first value is sequence 1, not 0 (zero). If the record column has only one value then 1 should be passed
            as the itagSequence if that value is being replaced. A value of 0 (zero) means to add a new column value instance
            to the end of the sequence of column values.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SETINFO.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_SETINFO"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.JET_SETINFO"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SETINFO.ContentEquals(Microsoft.Isam.Esent.Interop.JET_SETINFO)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SETINFO.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SETINFO.GetNativeSetinfo">
            <summary>
            Gets the NATIVE_SETINFO structure that represents the object.
            </summary>
            <returns>A NATIVE_SETINFO structure whose fields match the class.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_SIGNATURE">
            <summary>
            The JET_SIGNATURE structure contains information that uniquely
            identifies a database or logfile sequence.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.ulRandom">
            <summary>
            A randomly assigned number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.logtimeCreate">
            <summary>
            The time that the database or first logfile in the sequence was
            created.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.szComputerName">
            <summary>
            NetBIOS name of the computer. This may be null.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_SIGNATURE"/> struct.
            </summary>
            <param name="bytes">The serialized representation of a JET_SIGNATURE from ToBytes().</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.#ctor(System.Int32,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_SIGNATURE"/> struct.
            </summary>
            <param name="random">A random number.</param>
            <param name="time">The time for the creation time.</param>
            <param name="computerName">The optional computer name.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.#ctor(Microsoft.Isam.Esent.Interop.NATIVE_SIGNATURE)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_SIGNATURE"/> struct.
            </summary>
            <param name="native">A native signature to initialize the members with.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.op_Equality(Microsoft.Isam.Esent.Interop.JET_SIGNATURE,Microsoft.Isam.Esent.Interop.JET_SIGNATURE)">
            <summary>
            Determines whether two specified instances of JET_SIGNATURE
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.op_Inequality(Microsoft.Isam.Esent.Interop.JET_SIGNATURE,Microsoft.Isam.Esent.Interop.JET_SIGNATURE)">
            <summary>
            Determines whether two specified instances of JET_SIGNATURE
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.ToBytes">
            <summary>
            Generate the serialized representation of the structure.
            </summary>
            <returns>The structure as a byte array.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.Equals(Microsoft.Isam.Esent.Interop.JET_SIGNATURE)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SIGNATURE.GetNativeSignature">
            <summary>
            Converts the structure to the native representation.
            </summary>
            <returns>The native representation of the signature.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_SIGNATURE">
            <summary>
            Native (interop) version of the JET_SIGNATURE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SIGNATURE.ComputerNameSize">
            <summary>
            Size of the szComputerName array.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SIGNATURE.Size">
            <summary>
            The size of a NATIVE_SIGNATURE structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SIGNATURE.ulRandom">
            <summary>
            A random number.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SIGNATURE.logtimeCreate">
            <summary>
            Time the database or log sequence was created.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SIGNATURE.szComputerName">
            <summary>
            NetBIOS name of the computer.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_SNP">
            <summary>
            The type of operation that progress is being reported for.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNP.Repair">
            <summary>
            Callback is for a repair option.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNP.Compact">
            <summary>
            Callback is for database defragmentation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNP.Restore">
            <summary>
            Callback is for a restore options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNP.Backup">
            <summary>
            Callback is for a backup options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNP.Scrub">
            <summary>
            Callback is for database zeroing.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNP.UpgradeRecordFormat">
            <summary>
            Callback is for the process of upgrading the record format of
            all database pages.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_SNPROG">
            <summary>
            The native version of the JET_SNPROG structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SNPROG.Size">
            <summary>
            Size of this structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SNPROG.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SNPROG.cunitDone">
            <summary>
            The number of work units that are already completed during the long
            running operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SNPROG.cunitTotal">
            <summary>
            The number of work units that need to be completed. This value will
            always be bigger than or equal to cunitDone.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_SNPROG">
            <summary>
            Contains information about the progress of a long-running operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNPROG.completedUnits">
            <summary>
            Number of units of work that have completed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNPROG.totalUnits">
            <summary>
            Total number of units of work to be done.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SNPROG.cunitDone">
            <summary>
            Gets the number of work units that are already completed during the long
            running operation.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SNPROG.cunitTotal">
            <summary>
            Gets the number of work units that need to be completed. This value will
            always be bigger than or equal to cunitDone.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SNPROG.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SNPROG.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SNPROG.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SNPROG.Equals(Microsoft.Isam.Esent.Interop.JET_SNPROG)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SNPROG.SetFromNative(Microsoft.Isam.Esent.Interop.NATIVE_SNPROG)">
            <summary>
            Set the members of this class from a <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_SNPROG"/>.
            </summary>
            <param name="native">The native struct.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_SNT">
            <summary>
            Type of progress being reported.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNT.Begin">
            <summary>
            Callback for the beginning of an operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNT.Progress">
            <summary>
            Callback for operation progress.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNT.Complete">
            <summary>
            Callback for the completion of an operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNT.Fail">
            <summary>
            Callback for failure during the operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SNT.RecoveryStep">
            <summary>
            RecoveryStep was used for internal reserved functionality
            prior to Windows 8. Windows 8 and later no longer use RecoveryStep.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS">
            <summary>
            The native version of the JET_SPACEHINTS structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS.ulInitialDensity">
            <summary>
            Density at (append) layout.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS.cbInitial">
            <summary>
            Initial size (in bytes).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS.grbit">
            <summary>
            Space hints options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS.ulMaintDensity">
            <summary>
            Density to maintain at.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS.ulGrowth">
            <summary>
            Percent growth from last growth or initial size (possibly rounded to nearest native JET allocation size).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS.cbMinExtent">
            <summary>
            Overrides ulGrowth if too small.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS.cbMaxExtent">
            <summary>
            Cap of ulGrowth.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS">
            <summary>
            Describes a column in a table of an ESENT database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.initialDensity">
            <summary>
            Density at (append) layout.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.initialSize">
            <summary>
            Initial size (in bytes).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.options">
            <summary>
            Space hints options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.maintenanceDensity">
            <summary>
            Density to maintain at.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.growthPercent">
            <summary>
            Percent growth from last growth or initial size (possibly rounded to nearest native JET allocation size).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.minimumExtent">
            <summary>
            Overrides ulGrowth if too small.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.maximumExtent">
            <summary>
            Cap of ulGrowth.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.ulInitialDensity">
            <summary>
            Gets or sets the density at (append) layout.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.cbInitial">
            <summary>
            Gets or sets the initial size (in bytes).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.grbit">
            <summary>
            Gets or sets the space hints options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.ulMaintDensity">
            <summary>
            Gets or sets the density at which to maintain.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.ulGrowth">
            <summary>
            Gets or sets the percent growth from last growth or initial size (possibly rounded
            to nearest native JET allocation size).
            Valid values are 0, and [100, 50000).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.cbMinExtent">
            <summary>
            Gets or sets the value that overrides ulGrowth if too small. This value is in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.cbMaxExtent">
            <summary>
            Gets or sets the value that sets the ceiling of ulGrowth. This value is in bytes.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.ContentEquals(Microsoft.Isam.Esent.Interop.JET_SPACEHINTS)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.GetNativeSpaceHints">
            <summary>
            Returns the unmanaged columncreate that represents this managed class.
            </summary>
            <returns>A native (interop) version of the JET_SPACEHINTS.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS.SetFromNativeSpaceHints(Microsoft.Isam.Esent.Interop.NATIVE_SPACEHINTS)">
            <summary>
            Sets the fields of the object from a native JET_SPACEHINTS struct.
            </summary>
            <param name="value">
            The native columncreate to set the values from.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_TABLECREATE">
            <summary>
            Contains the information needed to create a table in an ESE database.
            </summary>
            <summary>
            Contains the information needed to create a table in an ESE database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.tableName">
            <summary>
            Name of the table to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.templateTableName">
            <summary>
            Name of the table from which to inherit base DDL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.initialPageAllocation">
            <summary>
            Initial pages to allocate for table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.tableDensity">
            <summary>
            Table density.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.columnCreates">
            <summary>
            Array of column creation info.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.columnCreateCount">
            <summary>
            Number of columns to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.indexCreates">
            <summary>
            Array of indices to create, pointer to <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.indexCreateCount">
            <summary>
            Number of indices to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.callbackFunction">
            <summary>
            Callback function to use for the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.callbackType">
            <summary>
            Type of the callback function.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.options">
            <summary>
            Table options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.seqSpacehints">
            <summary>
            Space allocation, maintenance, and usage hints for default sequential index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.longValueSpacehints">
            <summary>
            Space allocation, maintenance, and usage hints for Separated LV tree.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.separateLvThresholdHint">
            <summary>
            Heuristic size to separate a intrinsic LV from the primary record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.tableIdentifier">
            <summary>
            Returned tableid.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.objectsCreated">
            <summary>
            Count of objects created (columns+table+indexes+callbacks).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.szTableName">
            <summary>
            Gets or sets the name of the table to create.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.szTemplateTableName">
            <summary>
            Gets or sets the name of the table from which to inherit base DDL.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.ulPages">
            <summary>
            Gets or sets the initial pages to allocate for table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.ulDensity">
            <summary>
            Gets or sets the table density.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.rgcolumncreate">
            <summary>
            Gets or sets an array of column creation info, of type <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNCREATE"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.cColumns">
            <summary>
            Gets or sets the number of columns to create.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.rgindexcreate">
            <summary>
            Gets or sets an array of indices to create, of type <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.cIndexes">
            <summary>
            Gets or sets the number of indices to create.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.szCallback">
            <summary>
            Gets or sets a callback function to use for the table. This is in the form "module!functionName",
            and assumes unmanaged code. See <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetRegisterCallback(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_cbtyp,Microsoft.Isam.Esent.Interop.JET_CALLBACK,System.IntPtr,Microsoft.Isam.Esent.Interop.JET_HANDLE@)"/> for an alternative.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.cbtyp">
            <summary>
            Gets or sets a type of the callback function.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.grbit">
            <summary>
            Gets or sets the table options.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.pSeqSpacehints">
            <summary>
            Gets or sets space allocation, maintenance, and usage hints for default sequential index.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.pLVSpacehints">
            <summary>
            Gets or sets space allocation, maintenance, and usage hints for Separated LV tree, of type <see cref="T:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.cbSeparateLV">
            <summary>
            Gets or sets the heuristic size to separate a intrinsic LV from the primary record.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.tableid">
            <summary>
            Gets or sets the returned tableid.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.cCreated">
            <summary>
            Gets or sets the count of objects created (columns+table+indexes+callbacks).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.ContentEquals(Microsoft.Isam.Esent.Interop.JET_TABLECREATE)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.CheckMembersAreValid">
            <summary>
            Check this object to make sure its parameters are valid.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.GetNativeTableCreate2">
            <summary>
            Gets the native (interop) version of this object. The following members are
            NOT converted: <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.rgcolumncreate"/>, <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.rgindexcreate"/>,
            <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.pSeqSpacehints"/>, and <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.pLVSpacehints"/>.
            </summary>
            <returns>The native (interop) version of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.GetNativeTableCreate3">
            <summary>
            Gets the native (interop) version of this object. The following members are
            NOT converted: <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.rgcolumncreate"/>, <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.rgindexcreate"/>,
            <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.pSeqSpacehints"/>, and <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.pLVSpacehints"/>.
            </summary>
            <returns>The native (interop) version of this object.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2">
            <summary>
            The native version of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_TABLECREATE"/> structure. This includes callbacks,
            space hints, and uses NATIVE_INDEXCREATE.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.szTableName">
            <summary>
            Name of the table to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.szTemplateTableName">
            <summary>
            Name of the table from which to inherit base DDL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.ulPages">
            <summary>
            Initial pages to allocate for table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.ulDensity">
            <summary>
            Table density.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.rgcolumncreate">
            <summary>
            Array of column creation info.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.cColumns">
            <summary>
            Number of columns to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.rgindexcreate">
            <summary>
            Array of indices to create, pointer to <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.cIndexes">
            <summary>
            Number of indices to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.szCallback">
            <summary>
            Callback function to use for the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.cbtyp">
            <summary>
            Type of the callback function.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.grbit">
            <summary>
            Table options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.tableid">
            <summary>
            Returned tableid.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE2.cCreated">
            <summary>
            Count of objects created (columns+table+indexes+callbacks).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3">
            <summary>
            The native version of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_TABLECREATE"/> structure. This includes callbacks,
            space hints, and uses NATIvE_INDEXCREATE2.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.szTableName">
            <summary>
            Name of the table to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.szTemplateTableName">
            <summary>
            Name of the table from which to inherit base DDL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.ulPages">
            <summary>
            Initial pages to allocate for table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.ulDensity">
            <summary>
            Table density.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.rgcolumncreate">
            <summary>
            Array of column creation info.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.cColumns">
            <summary>
            Number of columns to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.rgindexcreate">
            <summary>
            Array of indices to create, pointer to <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE.NATIVE_INDEXCREATE2"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.cIndexes">
            <summary>
            Number of indices to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.szCallback">
            <summary>
            Callback function to use for the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.cbtyp">
            <summary>
            Type of the callback function.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.grbit">
            <summary>
            Table options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.pSeqSpacehints">
            <summary>
            Space allocation, maintenance, and usage hints for default sequential index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.pLVSpacehints">
            <summary>
            Space allocation, maintenance, and usage hints for Separated LV tree.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.cbSeparateLV">
            <summary>
            Heuristic size to separate a intrinsic LV from the primary record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.tableid">
            <summary>
            Returned tableid.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.NATIVE_TABLECREATE3.cCreated">
            <summary>
            Count of objects created (columns+table+indexes+callbacks).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.GetNativeTableCreate4">
            <summary>
            Gets the native (interop) version of this object. The following members are
            NOT converted: <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.rgcolumncreate"/>, <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.rgindexcreate"/>,
            <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.pSeqSpacehints"/>, and <see cref="P:Microsoft.Isam.Esent.Interop.JET_TABLECREATE.pLVSpacehints"/>.
            </summary>
            <returns>The native (interop) version of this object.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4">
            <summary>
            The native version of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_TABLECREATE"/> structure. This includes callbacks,
            space hints, and uses NATIVE_INDEXCREATE4.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.cbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.szTableName">
            <summary>
            Name of the table to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.szTemplateTableName">
            <summary>
            Name of the table from which to inherit base DDL.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.ulPages">
            <summary>
            Initial pages to allocate for table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.ulDensity">
            <summary>
            Table density.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.rgcolumncreate">
            <summary>
            Array of column creation info.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.cColumns">
            <summary>
            Number of columns to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.rgindexcreate">
            <summary>
            Array of indices to create, pointer to <see cref="T:Microsoft.Isam.Esent.Interop.NATIVE_INDEXCREATE3"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.cIndexes">
            <summary>
            Number of indices to create.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.szCallback">
            <summary>
            Callback function to use for the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.cbtyp">
            <summary>
            Type of the callback function.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.grbit">
            <summary>
            Table options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.pSeqSpacehints">
            <summary>
            Space allocation, maintenance, and usage hints for default sequential index.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.pLVSpacehints">
            <summary>
            Space allocation, maintenance, and usage hints for Separated LV tree.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.cbSeparateLV">
            <summary>
            Heuristic size to separate a intrinsic LV from the primary record.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.tableid">
            <summary>
            Returned tableid.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_TABLECREATE4.cCreated">
            <summary>
            Count of objects created (columns+table+indexes+callbacks).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_TblInfo">
            <summary>
            Info levels for retrieving table info with JetGetTableInfo.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Default">
            <summary>
            Default option. Retrieves a <see cref="T:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO"/> containing
            information about the table. Use this option with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_OBJECTINFO@,Microsoft.Isam.Esent.Interop.JET_TblInfo)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Name">
            <summary>
            Retrieves the name of the table. Use this option with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String@,Microsoft.Isam.Esent.Interop.JET_TblInfo)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.Dbid">
            <summary>
            Retrieves the <see cref="T:Microsoft.Isam.Esent.Interop.JET_DBID"/> of the database containing the
            table. Use this option with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_DBID@,Microsoft.Isam.Esent.Interop.JET_TblInfo)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceUsage">
            <summary>
            The behavior of the method depends on how large the array that is passed
            to the method is. The array must have at least two entries.
            The first entry will contain the number of Owned Extents in the table.
            The second entry will contain the number of Available Extents in the table.
            If the array has more than two entries then the remaining bytes of
            the buffer will consist of an array of structures that represent a list of
            extents. This structure contains two members: the last page number in the
            extent and the number of pages in the extent. Use this option with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32[],Microsoft.Isam.Esent.Interop.JET_TblInfo)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceAlloc">
            <summary>
            The array passed to JetGetTableInfo must have two entries.
            The first entry will be set to the number of pages in the table.
            The second entry will be set to the target density of pages for the table.
            Use this option with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32[],Microsoft.Isam.Esent.Interop.JET_TblInfo)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceOwned">
            <summary>
            Gets the number of owned pages in the table. Use this option with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_TblInfo)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.SpaceAvailable">
            <summary>
            Gets the number of available pages in the table. Use this option with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Int32@,Microsoft.Isam.Esent.Interop.JET_TblInfo)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TblInfo.TemplateTableName">
            <summary>
            If the table is a derived table, the result will be filled in with the
            name of the table from which the derived table inherited its DDL. If
            the table is not a derived table, the buffer will an empty string.
            Use this option with
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetTableInfo(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.String@,Microsoft.Isam.Esent.Interop.JET_TblInfo)"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_UNICODEINDEX">
            <summary>
            The native version of the JET_UNICODEINDEX structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_UNICODEINDEX.lcid">
            <summary>
            The LCID to be used when normalizing unicode data.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_UNICODEINDEX.dwMapFlags">
            <summary>
            The flags for LCMapString.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX">
            <summary>
            Customizes how Unicode data gets normalized when an index is created over a Unicode column.
            </summary>
            <summary>
            Customizes how Unicode data gets normalized when an index is created over a Unicode column.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.localeId">
            <summary>
            The LCID to be used when normalizing unicode data.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.localeName">
            <summary>
            The LocaleName to be used when normalizing unicode data.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.mapStringFlags">
            <summary>
            Sets the flags to be used with LCMapString when normalizing unicode data.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.lcid">
            <summary>
            Gets or sets the LCID to be used when normalizing unicode data.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.szLocaleName">
            <summary>
            Gets or sets the LocaleName to be used when normalizing unicode data.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.dwMapFlags">
            <summary>
            Gets or sets the flags to be used with LCMapString when normalizing unicode data.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.DeepClone">
            <summary>
            Returns a deep copy of the object.
            </summary>
            <returns>A deep copy of the object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.ToString">
            <summary>
            Generate a string representation of the instance.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.ContentEquals(Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.GetNativeUnicodeIndex">
            <summary>
            Gets the native version of this object.
            </summary>
            <returns>The native version of this object.</returns>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.LcidToLocales">
            <summary>
            Contains a limited mapping of LCIDs to locale names.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.#cctor">
            <summary>
            Initializes static members of the JET_UNICODEINDEX class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.#ctor(Microsoft.Isam.Esent.Interop.NATIVE_UNICODEINDEX2@)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX"/> class.
            </summary>
            <param name="native">The native object from which to read values.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.GetEffectiveLocaleName">
            <summary>
            As a workaround for systems that do not have LCID support, we will convert a VERY limited number of
            LCIDs to locale names.
            </summary>
            <returns>A BCP-47 style locale name.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.LimitedLcidToLocaleNameMapping(System.Int32)">
            <summary>
            As a workaround for systems that do not have LCID support, we will convert a VERY limited number of
            LCIDs to locale names.
            </summary>
            <param name="lcid">A locale identifier.</param>
            <returns>A BCP-47 style locale name.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_UNICODEINDEX.GetNativeUnicodeIndex2">
            <summary>
            Gets the native version of this object.
            </summary>
            <returns>The native version of this object.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.NATIVE_UNICODEINDEX2">
            <summary>
            The native version of the JET_UNICODEINDEX2 structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_UNICODEINDEX2.szLocaleName">
            <summary>
            The locale to be used when normalizing unicode data.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.NATIVE_UNICODEINDEX2.dwMapFlags">
            <summary>
            The flags for LCMapString.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_wrn">
            <summary>
            ESENT warning codes.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.Success">
            <summary>
            Successful operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.RemainingVersions">
            <summary>
            The version store is still active
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.UniqueKey">
            <summary>
            seek on non-unique index yielded a unique key
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.SeparateLongValue">
            <summary>
            Column is a separated long-value
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.NoMoreRecords">
            <summary>
            No more records to stream
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ExistingLogFileHasBadSignature">
            <summary>
            Existing log file has bad signature
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ExistingLogFileIsNotContiguous">
            <summary>
            Existing log file is not contiguous
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.SkipThisRecord">
            <summary>
            INTERNAL ERROR
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.TargetInstanceRunning">
            <summary>
            TargetInstance specified for restore is running
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.CommittedLogFilesLost">
            <summary>
            One or more logs that were committed to this database, were not recovered.  The database is still clean/consistent, as though the lost log's transactions were committed lazily (and lost).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.CommittedLogFilesRemoved">
            <summary>
            One or more logs that were committed to this database, were no recovered.  The database is still clean/consistent, as though the corrupted log's transactions were committed lazily (and lost).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.FinishWithUndo">
            <summary>
            Signal used by clients to indicate JetInit() finished with undo
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.DatabaseRepaired">
            <summary>
            Database corruption has been repaired
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnNull">
            <summary>
            Column is NULL-valued
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.BufferTruncated">
            <summary>
            Buffer too small for data
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.DatabaseAttached">
            <summary>
            Database is already attached
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.SortOverflow">
            <summary>
            Sort does not fit in memory
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.SeekNotEqual">
            <summary>
            Exact match not found during seek
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.NoErrorInfo">
            <summary>
            No extended error information
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.NoIdleActivity">
            <summary>
            No idle activity occurred
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.NoWriteLock">
            <summary>
            No write lock at transaction level 0
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSetNull">
            <summary>
            Column set to NULL-value
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ShrinkNotPossible">
            <summary>
            Database file could not be shrunk because there is not enough internal free space available or there is unmovable data present.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.DTCCommitTransaction">
            <summary>
            Warning code DTC callback should return if the specified transaction is to be committed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.DTCRollbackTransaction">
            <summary>
            Warning code DTC callback should return if the specified transaction is to be rolled back
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.TableEmpty">
            <summary>
            Opened an empty table
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.TableInUseBySystem">
            <summary>
            System cleanup has a cursor open on the table
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.CorruptIndexDeleted">
            <summary>
            Out of date index removed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.PrimaryIndexOutOfDate">
            <summary>
            The Primary index is created with an incompatible OS sort version. The table can not be safely modified.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.SecondaryIndexOutOfDate">
            <summary>
            One or more Secondary index is created with an incompatible OS sort version. Any index over Unicode text should be deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnMaxTruncated">
            <summary>
            Max length too big, truncated
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.CopyLongValue">
            <summary>
            Single instance column bursted
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.TaggedColumnsRemaining">
            <summary>
            RetrieveTaggedColumnList ran out of copy buffer before retrieving all tagged columns
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSkipped">
            <summary>
            Column value(s) not returned because the corresponding column id or itagSequence requested for enumeration was null
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnNotLocal">
            <summary>
            Column value(s) not returned because they could not be reconstructed from the data at hand
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnMoreTags">
            <summary>
            Column values exist that were not requested for enumeration
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnTruncated">
            <summary>
            Column value truncated at the requested size limit during enumeration
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnPresent">
            <summary>
            Column values exist but were not returned by request
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnSingleValue">
            <summary>
            Column value returned in JET_COLUMNENUM as a result of JET_bitEnumerateCompressOutput
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnDefault">
            <summary>
            Column value(s) not returned because they were set to their default value(s) and JET_bitEnumerateIgnoreDefault was specified
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnNotInRecord">
            <summary>
            Column value(s) not returned because they could not be reconstructed from the data in the record
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.ColumnReference">
            <summary>
            Column value returned as a reference because it could not be reconstructed from the data in the record
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.DataHasChanged">
            <summary>
            Data has changed
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.KeyChanged">
            <summary>
            Moved to new key
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.FileOpenReadOnly">
            <summary>
            Database file is read only
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.IdleFull">
            <summary>
            Idle registry full
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.DefragAlreadyRunning">
            <summary>
            Online defrag already running on specified database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.DefragNotRunning">
            <summary>
            Online defrag not running on specified database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.DatabaseScanAlreadyRunning">
            <summary>
            JetDatabaseScan already running on specified database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.DatabaseScanNotRunning">
            <summary>
            JetDatabaseScan not running on specified database
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.CallbackNotRegistered">
            <summary>
            Unregistered a non-existent callback function
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_wrn.PreviousLogFileIncomplete">
            <summary>
            The log data provided jumped to the next log suddenly, we have deleted the incomplete log file as a precautionary measure
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.LibraryHelpers">
            <summary>
            Contains several helper functions that are useful in the test binary.
            In particular, it contains functionality that is not available in
            reduced-functionality environments (such as CoreClr).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.LibraryHelpers.DirectorySeparatorChar">
            <summary>Provides a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.LibraryHelpers.AltDirectorySeparatorChar">
            <summary>Provides a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.LibraryHelpers.EncodingASCII">
            <summary>
            Gets an ASCII encoder.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.LibraryHelpers.NewEncodingASCII">
            <summary>
            Gets a new ASCII encoder. It's preferred to use EncodingASCII, but some applications (e.g. tests)
            may want a different Encoding object.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.LibraryHelpers.CreateCultureInfoByLcid(System.Int32)">
            <summary>
            Creates a CultureInfo object when given the LCID.
            </summary>
            <param name="lcid">
            The lcid passed in.
            </param>
            <returns>
            A CultureInfo object.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.LibraryHelpers.MarshalAllocHGlobal(System.Int32)">
            <summary>
            Allocates memory on the native heap.
            </summary>
            <returns>A pointer to native memory.</returns>
            <param name="size">The size of the memory desired.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.LibraryHelpers.MarshalFreeHGlobal(System.IntPtr)">
            <summary>
            Frees memory that was allocated on the native heap.
            </summary>
            <param name="buffer">A pointer to native memory.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.LibraryHelpers.MarshalStringToHGlobalUni(System.String)">
            <summary>Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</summary>
            <returns>The address, in unmanaged memory, to where the <paramref name="managedString" /> was copied, or 0 if <paramref name="managedString" /> is null.</returns>
            <param name="managedString">A managed string to be copied.</param>
            <exception cref="T:System.OutOfMemoryException">The method could not allocate enough native heap memory.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="managedString" /> parameter exceeds the maximum length allowed by the operating system.</exception>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.LibraryHelpers.GetCurrentManagedThreadId">
            <summary>
            Retrieves the managed ID of the current thread.
            </summary>
            <returns>The ID of the current thread.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.LibraryHelpers.ThreadResetAbort">
            <summary>
            Cancels an <see cref="M:System.Threading.Thread.Abort(System.Object)"/> requested for the current thread.
            </summary>
            <exception cref="T:System.Threading.ThreadStateException">Abort was not invoked on the current thread. </exception><exception cref="T:System.Security.SecurityException">The caller does not have the required security permission for the current thread. </exception><filterpriority>2</filterpriority><PermissionSet><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlThread"/></PermissionSet>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.LibraryHelpers.FromOADate(System.Double)">
            <summary>Returns a <see cref="T:System.DateTime" /> equivalent to the specified OLE Automation Date.</summary>
            <returns>A <see cref="T:System.DateTime" /> that represents the same date and time as <paramref name="d" />.</returns>
            <param name="d">An OLE Automation Date value. </param>
            <exception cref="T:System.ArgumentException">The date is not a valid OLE Automation Date value. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.MemoryCache">
            <summary>
            Cache allocated chunks of memory that are needed for very short periods
            of time. The memory is not zeroed on allocation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MemoryCache.ZeroLengthArray">
            <summary>
            A zero-length array that should be used whenever we want to return one.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MemoryCache.bufferSize">
            <summary>
            Default size for newly allocated buffers.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.MemoryCache.cachedBuffers">
            <summary>
            Currently cached buffers.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.MemoryCache.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.MemoryCache"/> class. 
            </summary>
            <param name="bufferSize">
            The size of the buffers to cache.
            </param>
            <param name="maxCachedBuffers">
            The maximum number of buffers to cache.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.MemoryCache.BufferSize">
            <summary>
            Gets the size of the buffers that this cache returns.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.MemoryCache.Duplicate(System.Byte[],System.Int32)">
            <summary>
            Creates a new array containing a copy of 'length' bytes of data.
            </summary>
            <param name="data">The data to copy.</param>
            <param name="length">The length of data to copy.</param>
            <returns>An array containing the first length bytes of data.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.MemoryCache.Allocate">
            <summary>
            Allocates a chunk of memory. If memory is cached it is returned. If no memory
            is cached then it is allocated. Check the size of the returned buffer to determine
            how much memory was allocated.
            </summary>
            <returns>A new memory buffer.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.MemoryCache.Free(System.Byte[]@)">
            <summary>
            Frees an unused buffer. This may be added to the cache.
            </summary>
            <param name="data">The memory to free.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.MemoryCache.GetStartingOffset">
            <summary>
            Get the offset in the cached buffers array to start allocating or freeing 
            buffers to. This is done so that all threads don't start operating on
            slot zero, which would increase contention.
            </summary>
            <returns>The starting offset for Allocate/Free operations.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ObjectInfoFlags">
            <summary>
            Flags for ESENT objects (tables).  Used in <see cref="T:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ObjectInfoFlags.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ObjectInfoFlags.System">
            <summary>
            Object is for internal use only.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ObjectInfoFlags.TableFixedDDL">
            <summary>
            Table's DDL is fixed.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ObjectInfoFlags.TableTemplate">
            <summary>
            Table's DDL is inheritable.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ObjectInfoFlags.TableDerived">
            <summary>
            Table's DDL is inherited from a template table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ObjectInfoFlags.TableNoFixedVarColumnsInDerivedTables">
            <summary>
            Fixed or variable columns in derived tables (so that fixed or variable
            columns can be added to the template in the future).
            Used in conjunction with <see cref="F:Microsoft.Isam.Esent.Interop.ObjectInfoFlags.TableTemplate"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.ObjectInfoGrbit">
            <summary>
            Table options, used in <see cref="T:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ObjectInfoGrbit.Bookmark">
            <summary>
            The table can have bookmarks.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ObjectInfoGrbit.Rollback">
            <summary>
            The table can be rolled back.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.ObjectInfoGrbit.Updatable">
            <summary>
            The table can be updated.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Server2003.Server2003Api">
            <summary>
            APIs that have been added to the Windows Server 2003 version of ESENT.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Server2003.Server2003Api.JetOSSnapshotAbort(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Server2003.SnapshotAbortGrbit)">
            <summary>
            Notifies the engine that it can resume normal IO operations after a
            freeze period ended with a failed snapshot.
            </summary>
            <param name="snapid">Identifier of the snapshot session.</param>
            <param name="grbit">Options for this call.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Server2003.Server2003Api.JetUpdate2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Server2003.UpdateGrbit)">
            <summary>
            The JetUpdate function performs an update operation including inserting a new row into
            a table or updating an existing row. Deleting a table row is performed by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetDelete(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)"/>.
            </summary>
            <param name="sesid">The session which started the update.</param>
            <param name="tableid">The cursor to update. An update should be prepared.</param>
            <param name="bookmark">Returns the bookmark of the updated record. This can be null.</param>
            <param name="bookmarkSize">The size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
            <param name="grbit">Update options.</param>
            <remarks>
            JetUpdate is the final step in performing an insert or an update. The update is begun by
            calling <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetPrepareUpdate(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)"/> and then by calling
            <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetColumn(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_COLUMNID,System.Byte[],System.Int32,Microsoft.Isam.Esent.Interop.SetColumnGrbit,Microsoft.Isam.Esent.Interop.JET_SETINFO)"/>
            one or more times to set the record state. Finally, <see cref="M:Microsoft.Isam.Esent.Interop.Server2003.Server2003Api.JetUpdate2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Server2003.UpdateGrbit)"/>
            is called to complete the update operation. Indexes are updated only by JetUpdate or and not during JetSetColumn.
            </remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Server2003.SnapshotAbortGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Server2003.Server2003Api.JetOSSnapshotAbort(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.Server2003.SnapshotAbortGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Server2003.SnapshotAbortGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Server2003.UpdateGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Server2003.Server2003Api.JetUpdate2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Server2003.UpdateGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Server2003.UpdateGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Server2003.UpdateGrbit.CheckESE97Compatibility">
            <summary>
            This flag causes the update to return an error if the update would
            not have been possible in the Windows 2000 version of ESE, which
            enforced a smaller maximum number of multi-valued column instances
            in each record than later versions of ESE. This is important only
            for applications that wish to replicate data between applications
            hosted on Windows 2000 and applications hosted on Windows
            2003, or later versions of ESE. It should not be necessary for most
            applications.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits">
            <summary>
            Grbits that have been added to the Windows Server 2003 version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.DeleteUnicodeIndexes">
            <summary>
            Delete all indexes with unicode columns.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.ColumnDeleteOnZero">
            <summary>
            When the escrow-update column reaches a value of zero (after all 
            versions are resolve), the record will be deleted. A common use for 
            a column that can be finalized is to use it as a reference count 
            field, and when the field reaches zero the record gets deleted. A 
            Delete-on-zero column must be an escrow update / <see cref="F:Microsoft.Isam.Esent.Interop.ColumndefGrbit.ColumnEscrowUpdate"/> 
            column. ColumnDeleteOnZero cannot be used with ColumnFinalize.
            ColumnDeleteOnZero cannot be used with user defined default columns. 
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.ForwardOnly">
            <summary>
            This option requests that the temporary table only be created if the
            temporary table manager can use the implementation optimized for
            intermediate query results. If any characteristic of the temporary
            table would prevent the use of this optimization then the operation
            will fail with JET_errCannotMaterializeForwardOnlySort. A side effect
            of this option is to allow the temporary table to contain records
            with duplicate index keys. See <see cref="F:Microsoft.Isam.Esent.Interop.TempTableGrbit.Unique"/>
            for more information.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.EnumerateIgnoreUserDefinedDefault">
            <summary>
            If a given column is not present in the record and it has a user
            defined default value then no column value will be returned.
            This option will prevent the callback that computes the user defined
            default value for the column from being called when enumerating
            the values for that column.
            </summary>
            <remarks>
            This option is only available for Windows Server 2003 SP1 and later
            operating systems.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Grbits.WaitAllLevel0Commit">
            <summary>
            All transactions previously committed by any session that have not
            yet been flushed to the transaction log file will be flushed immediately.
            This API will wait until the transactions have been flushed before
            returning to the caller. This option may be used even if the session
            is not currently in a transaction. This option cannot be used in
            combination with any other option.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Server2003.Server2003Param">
            <summary>
            System parameters that have been added to the Windows Server 2003 version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Server2003.Server2003Param.AlternateDatabaseRecoveryPath">
            <summary>
            The full path to each database is persisted in the transaction logs
            at run time. Ordinarily, these databases must remain at the original
            location for transaction replay to function correctly. This
            parameter can be used to force crash recovery or a restore operation
            to look for the databases referenced in the transaction log in the
            specified folder.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Session">
            <summary>
            A class that encapsulates a JET_SESID in a disposable object.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Session.sesid">
            <summary>
            The underlying JET_SESID.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Session.#ctor(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Initializes a new instance of the Session class. A new
            JET_SESSION is allocated from the given instance.
            </summary>
            <param name="instance">The instance to start the session in.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Session.JetSesid">
            <summary>
            Gets the JET_SESID that this session contains.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Session.op_Implicit(Microsoft.Isam.Esent.Interop.Session)~Microsoft.Isam.Esent.Interop.JET_SESID">
            <summary>
            Implicit conversion operator from a Session to a JET_SESID. This
            allows a Session to be used with APIs which expect a JET_SESID.
            </summary>
            <param name="session">The session to convert.</param>
            <returns>The JET_SESID of the session.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Session.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Session"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Session"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Session.End">
            <summary>
            Terminate the session.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Session.ReleaseResource">
            <summary>
            Free the underlying JET_SESID.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.StringCache">
            <summary>
            Class that helps cache strings.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.StringCache.MaxLengthToCache">
            <summary>
            Don't cache strings whose length is longer than this.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.StringCache.NumCachedBoxedValues">
            <summary>
            Number of converted strings to hash.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.StringCache.CachedStrings">
            <summary>
            Cached string values.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StringCache.TryToIntern(System.String)">
            <summary>
            Return the interned version of a string, or the original
            string if it isn't interned.
            </summary>
            <param name="s">The string to try to intern.</param>
            <returns>An interned copy of the string or the original string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StringCache.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Convert a byte array to a string.
            </summary>
            <param name="value">The bytes to convert.</param>
            <param name="startIndex">The starting index of the data to convert.</param>
            <param name="count">The number of bytes to convert.</param>
            <returns>A string converted from the data.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StringCache.GetString(System.Char*,System.Int32,System.Int32)">
            <summary>
            Convert a char array to a string, using a cached value if possible.
            </summary>
            <param name="value">The characters to convert.</param>
            <param name="startIndex">The starting index of the data to convert.</param>
            <param name="count">The number of characters to convert.</param>
            <returns>A string converted from the data.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StringCache.CalculateHash(System.Char*,System.Int32,System.Int32)">
            <summary>
            Calculate the hash of a string.
            </summary>
            <param name="value">The characters to hash.</param>
            <param name="startIndex">The starting index of the data to hash.</param>
            <param name="count">The number of characters to hash.</param>
            <returns>The hash value of the data.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StringCache.AreEqual(System.String,System.Char*,System.Int32,System.Int32)">
            <summary>
            Determine if a string matches a char array..
            </summary>
            <param name="s">The string to compare against.</param>
            <param name="value">The characters.</param>
            <param name="startIndex">The starting index of the data.</param>
            <param name="count">The number of characters.</param>
            <returns>True if the string matches the char array.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StringCache.CreateNewString(System.Char*,System.Int32,System.Int32)">
            <summary>
            Convert a char array to a string.
            </summary>
            <param name="value">The characters to convert.</param>
            <param name="startIndex">The starting index of the data to convert.</param>
            <param name="count">The number of characters to convert.</param>
            <returns>A string converted from the data.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.StringColumnValue">
            <summary>
            A Unicode string column value.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.StringColumnValue.internalValue">
            <summary>
            Internal value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.StringColumnValue.ValueAsObject">
            <summary>
            Gets the last set or retrieved value of the column. The
            value is returned as a generic object.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.StringColumnValue.Value">
            <summary>
            Gets or sets the value of the column. Use <see cref="M:Microsoft.Isam.Esent.Interop.Api.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[])"/> to update a
            record with the column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.StringColumnValue.Length">
            <summary>
            Gets the byte length of a column value, which is zero if column is null, otherwise
            it matches the byte length of the string value. The byte length is determined in
            assumption of two bytes per character.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.StringColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StringColumnValue.ToString">
            <summary>
            Gets a string representation of this object.
            </summary>
            <returns>A string representation of this object.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StringColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.StringColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Table">
            <summary>
            A class that encapsulates a JET_TABLEID in a disposable object.
            This opens an existing table. To create a table use the 
            JetCreateTable method.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Table.sesid">
            <summary>
            The session used to open the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Table.tableid">
            <summary>
            The underlying JET_TABLEID.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Table.name">
            <summary>
            The name of the table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Table.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String,Microsoft.Isam.Esent.Interop.OpenTableGrbit)">
            <summary>
            Initializes a new instance of the Table class. The table is
            opened from the given database.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="dbid">The database to open the table in.</param>
            <param name="name">The name of the table.</param>
            <param name="grbit">JetOpenTable options.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Table.Name">
            <summary>
            Gets the name of this table.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Table.JetTableid">
            <summary>
            Gets the JET_TABLEID that this table contains.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Table.op_Implicit(Microsoft.Isam.Esent.Interop.Table)~Microsoft.Isam.Esent.Interop.JET_TABLEID">
            <summary>
            Implicit conversion operator from a Table to a JET_TABLEID. This
            allows a Table to be used with APIs which expect a JET_TABLEID.
            </summary>
            <param name="table">The table to convert.</param>
            <returns>The JET_TABLEID of the table.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Table.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Table"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Table"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Table.Close">
            <summary>
            Close the table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Table.ReleaseResource">
            <summary>
            Free the underlying JET_TABLEID.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.TableColumnInfoEnumerator">
            <summary>
            Enumerate columns in a table specified by dbid and name.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableColumnInfoEnumerator.dbid">
            <summary>
            The database containing the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableColumnInfoEnumerator.tablename">
            <summary>
            The name of the table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableColumnInfoEnumerator.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.TableColumnInfoEnumerator"/> class.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
            <param name="dbid">
            The database containing the table.
            </param>
            <param name="tablename">
            The name of the table.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableColumnInfoEnumerator.OpenTable">
            <summary>
            Open the table to be enumerated. This should set <see cref="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.TableidToEnumerate"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.TableEnumerator`1">
            <summary>
            Base class for enumerators that walk a table.
            </summary>
            <typeparam name="T">The type returned by the enumerator.</typeparam>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableEnumerator`1.isAtEnd">
            <summary>
            True if we are at the end of the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableEnumerator`1.moveToFirst">
            <summary>
            True if we need to move to the first record in the table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableEnumerator`1.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.TableEnumerator`1"/> class.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.Current">
            <summary>
            Gets the current entry.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current entry.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.Sesid">
            <summary>
            Gets the session used for the enumeration.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.TableidToEnumerate">
            <summary>
            Gets or sets the table being enumerated.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableEnumerator`1.Reset">
            <summary>
            Resets the enumerator. The next call to MoveNext will move
            to the first entry.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableEnumerator`1.Dispose">
            <summary>
            Disposes of any resources the enumerator is using.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableEnumerator`1.MoveNext">
            <summary>
            Move to the next entry.
            </summary>
            <returns>
            True if an entry was found, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableEnumerator`1.OpenTable">
            <summary>
            Open the table to be enumerated. This should set <see cref="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.TableidToEnumerate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableEnumerator`1.GetCurrent">
            <summary>
            Gets the entry the cursor is currently positioned on.
            </summary>
            <returns>The entry the cursor is currently positioned on.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableEnumerator`1.SkipCurrent">
            <summary>
            Determine if the current entry in the table being enumerated should
            be skipped (not returned). By default this is false.
            </summary>
            <returns>True if the current entry should be skipped.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableEnumerator`1.CloseTable">
            <summary>
            Closes the table being enumerated.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.TableidColumnInfoEnumerator">
            <summary>
            Enumerate columns in a table specified by a tableid.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableidColumnInfoEnumerator.tableid">
            <summary>
            The table to get the column information from.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableidColumnInfoEnumerator.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.TableidColumnInfoEnumerator"/> class.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
            <param name="tableid">
            The table to get column information from.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableidColumnInfoEnumerator.OpenTable">
            <summary>
            Open the table to be enumerated. This should set <see cref="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.TableidToEnumerate"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.TableidIndexInfoEnumerator">
            <summary>
            Enumerate columns in a table specified by a tableid.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableidIndexInfoEnumerator.tableid">
            <summary>
            The table to get the column information from.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableidIndexInfoEnumerator.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.TableidIndexInfoEnumerator"/> class.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
            <param name="tableid">
            The table to get column information from.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableidIndexInfoEnumerator.OpenTable">
            <summary>
            Open the table to be enumerated. This should set <see cref="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.TableidToEnumerate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableidIndexInfoEnumerator.GetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.TableIndexInfoEnumerator">
            <summary>
            Enumerate columns in a table specified by dbid and name.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableIndexInfoEnumerator.dbid">
            <summary>
            The database containing the table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableIndexInfoEnumerator.tablename">
            <summary>
            The name of the table.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableIndexInfoEnumerator.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.TableIndexInfoEnumerator"/> class.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
            <param name="dbid">
            The database containing the table.
            </param>
            <param name="tablename">
            The name of the table.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableIndexInfoEnumerator.OpenTable">
            <summary>
            Open the table to be enumerated. This should set <see cref="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.TableidToEnumerate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableIndexInfoEnumerator.GetIndexInfo(Microsoft.Isam.Esent.Interop.JET_SESID,System.String,System.String@,Microsoft.Isam.Esent.Interop.JET_IdxInfo)">
            <summary>
            Retrieves information about indexes on a table.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="indexname">The name of the index.</param>
            <param name="result">Filled in with information about indexes on the table.</param>
            <param name="infoLevel">The type of information to retrieve.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.TableNameEnumerator">
            <summary>
            Enumerate the names of tables in a database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableNameEnumerator.dbid">
            <summary>
            The database containing the tables.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.TableNameEnumerator.objectlist">
            <summary>
            Object list containing information about tables.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableNameEnumerator.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Isam.Esent.Interop.TableNameEnumerator"/> class.
            </summary>
            <param name="sesid">
            The session to use.
            </param>
            <param name="dbid">
            The database to get the table names from.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableNameEnumerator.OpenTable">
            <summary>
            Open the table to be enumerated. This should set <see cref="P:Microsoft.Isam.Esent.Interop.TableEnumerator`1.TableidToEnumerate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableNameEnumerator.SkipCurrent">
            <summary>
            Determine if the current entry in the table being enumerated should
            be skipped (not returned). Here we are skipping system tables.
            </summary>
            <returns>True if the current entry should be skipped.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.TableNameEnumerator.GetCurrent">
            <summary>
            Gets the entry the cursor is currently positioned on.
            </summary>
            <returns>The entry the cursor is currently positioned on.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Transaction">
            <summary>
            A class that encapsulates a transaction on a JET_SESID.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Transaction.sesid">
            <summary>
            The underlying JET_SESID.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Transaction.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Initializes a new instance of the Transaction class. This automatically
            begins a transaction. The transaction will be rolled back if
            not explicitly committed.
            </summary>
            <param name="sesid">The session to start the transaction for.</param>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Transaction.TransactionLevel">
            <summary>
            Gets the current transaction level of the
            <see cref="T:Microsoft.Isam.Esent.Interop.Transaction"/>.
            Requires Win10.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.Transaction.IsInTransaction">
            <summary>
            Gets a value indicating whether this object is currently in a
            transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Transaction.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Transaction"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Transaction"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Transaction.Begin">
            <summary>
            Begin a transaction. This object should not currently be
            in a transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Transaction.Commit(Microsoft.Isam.Esent.Interop.CommitTransactionGrbit)">
            <summary>
            Commit a transaction. This object should be in a transaction.
            </summary>
            <param name="grbit">JetCommitTransaction options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Transaction.Commit(Microsoft.Isam.Esent.Interop.CommitTransactionGrbit,System.TimeSpan,Microsoft.Isam.Esent.Interop.Windows8.JET_COMMIT_ID@)">
            <summary>
            Commit a transaction. This object should be in a transaction.
            </summary>
            <param name="grbit">JetCommitTransaction options.</param>
            <param name="durableCommit">Duration for committing lazy transactions.</param>
            <param name="commitId">Commit-id for this commit record.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Transaction.Rollback">
            <summary>
            Rollback a transaction. This object should be in a transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Transaction.ReleaseResource">
            <summary>
            Called when the transaction is being disposed while active.
            This should rollback the transaction.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_INSTANCE">
            <summary>
            A JET_INSTANCE contains a handle to the instance of the database to use for calls to the JET Api.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Value">
            <summary>
            The native value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Nil">
            <summary>
            Gets a null JET_INSTANCE.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INSTANCE.IsInvalid">
            <summary>
            Gets a value indicating whether the <see cref="T:JET_INSTANCE"/> is valid (checks against 0 and -1).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE.op_Equality(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Determines whether two specified instances of JET_INSTANCE
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE.op_Inequality(Microsoft.Isam.Esent.Interop.JET_INSTANCE,Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Determines whether two specified instances of JET_INSTANCE
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.
            -or-
            null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.
            </param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.
            -or-
            null to obtain the numeric format information from the current locale setting of the operating system.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INSTANCE.Equals(Microsoft.Isam.Esent.Interop.JET_INSTANCE)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_SESID">
            <summary>
            A JET_SESID contains a handle to the session to use for calls to the JET Api.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_SESID.Value">
            <summary>
            The native value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SESID.Nil">
            <summary>
            Gets a null JET_SESID.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_SESID.IsInvalid">
            <summary>
            Gets a value indicating whether the <see cref="T:JET_SESID"/> is valid (checks against 0 and -1).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SESID.op_Equality(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Determines whether two specified instances of JET_SESID
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SESID.op_Inequality(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Determines whether two specified instances of JET_SESID
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SESID.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SESID.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.
            -or-
            null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.
            </param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.
            -or-
            null to obtain the numeric format information from the current locale setting of the operating system.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SESID.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SESID.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_SESID.Equals(Microsoft.Isam.Esent.Interop.JET_SESID)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_TABLEID">
            <summary>
            A JET_TABLEID contains a handle to the database cursor to use for a call to the JET Api.
            A cursor can only be used with the session that was used to open that cursor.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_TABLEID.Value">
            <summary>
            The native value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLEID.Nil">
            <summary>
            Gets a null JET_TABLEID.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_TABLEID.IsInvalid">
            <summary>
            Gets a value indicating whether the <see cref="T:Microsoft.Isam.Esent.Interop.JET_TABLEID"/> is valid (checks against 0 and -1).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLEID.op_Equality(Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Determines whether two specified instances of JET_TABLEID
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLEID.op_Inequality(Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Determines whether two specified instances of JET_TABLEID
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLEID.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLEID.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.
            -or-
            null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.
            </param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.
            -or-
            null to obtain the numeric format information from the current locale setting of the operating system.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLEID.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLEID.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_TABLEID.Equals(Microsoft.Isam.Esent.Interop.JET_TABLEID)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_DBID">
            <summary>
            A JET_DBID contains the handle to the database. A database handle is used to manage the
            schema of a database. It can also be used to manage the tables inside of that database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_DBID.Value">
            <summary>
            The native value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_DBID.Nil">
            <summary>
            Gets a null JET_DBID.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBID.op_Equality(Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_DBID)">
            <summary>
            Determines whether two specified instances of JET_DBID
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBID.op_Inequality(Microsoft.Isam.Esent.Interop.JET_DBID,Microsoft.Isam.Esent.Interop.JET_DBID)">
            <summary>
            Determines whether two specified instances of JET_DBID
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBID.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBID.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.
            -or-
            null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.
            </param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.
            -or-
            null to obtain the numeric format information from the current locale setting of the operating system.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBID.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBID.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_DBID.Equals(Microsoft.Isam.Esent.Interop.JET_DBID)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_COLUMNID">
            <summary>
            A JET_COLUMNID identifies a column within a table.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_COLUMNID.Value">
            <summary>
            The native value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNID.Nil">
            <summary>
            Gets a null JET_COLUMNID.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_COLUMNID.IsInvalid">
            <summary>
            Gets a value indicating whether the <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNID"/> is valid (checks against 0 and -1).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.op_Equality(Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Determines whether two specified instances of JET_COLUMNID
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.op_Inequality(Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Determines whether two specified instances of JET_COLUMNID
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.op_LessThan(Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Determine whether one columnid is before another columnid.
            </summary>
            <param name="lhs">The first columnid to compare.</param>
            <param name="rhs">The second columnid to compare.</param>
            <returns>True if lhs comes before rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.op_GreaterThan(Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Determine whether one columnid is after another columnid.
            </summary>
            <param name="lhs">The first columnid to compare.</param>
            <param name="rhs">The second columnid to compare.</param>
            <returns>True if lhs comes after rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.op_LessThanOrEqual(Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Determine whether one columnid is before or equal to
            another columnid.
            </summary>
            <param name="lhs">The first columnid to compare.</param>
            <param name="rhs">The second columnid to compare.</param>
            <returns>True if lhs comes before or is equal to rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.op_GreaterThanOrEqual(Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Determine whether one columnid is after or equal to
            another columnid.
            </summary>
            <param name="lhs">The first columnid to compare.</param>
            <param name="rhs">The second columnid to compare.</param>
            <returns>True if lhs comes after or is equal to rhs.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.
            -or-
            null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.
            </param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.
            -or-
            null to obtain the numeric format information from the current locale setting of the operating system.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.Equals(Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.CompareTo(Microsoft.Isam.Esent.Interop.JET_COLUMNID)">
            <summary>
            Compares this columnid to another columnid and determines
            whether this instance is before, the same as or after the other
            instance.
            </summary>
            <param name="other">The columnid to compare to the current instance.</param>
            <returns>
            A signed number indicating the relative positions of this instance and the value parameter.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_COLUMNID.CreateColumnidFromNativeValue(System.Int32)">
            <summary>
            Creates a new instance of a <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNID"/> using the specified
            value as the underlying value.
            </summary>
            <param name="nativeValue">The native ESE JET_COLUMNID.</param>
            <returns>An initialized <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNID"/> structure.</returns>
            <remarks>Use of this function should be exceedingly rare.</remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_OSSNAPID">
            <summary>
            A JET_OSSNAPID contains a handle to a snapshot of a database.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.Value">
            <summary>
            The native value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.Nil">
            <summary>
            Gets a null JET_OSSNAPID.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.IsInvalid">
            <summary>
            Gets a value indicating whether the <see cref="T:Microsoft.Isam.Esent.Interop.JET_OSSNAPID"/> is valid (checks against 0 and -1).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.op_Equality(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_OSSNAPID)">
            <summary>
            Determines whether two specified instances of JET_OSSNAPID
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.op_Inequality(Microsoft.Isam.Esent.Interop.JET_OSSNAPID,Microsoft.Isam.Esent.Interop.JET_OSSNAPID)">
            <summary>
            Determines whether two specified instances of JET_OSSNAPID
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.
            -or-
            null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.
            </param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.
            -or-
            null to obtain the numeric format information from the current locale setting of the operating system.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_OSSNAPID.Equals(Microsoft.Isam.Esent.Interop.JET_OSSNAPID)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_HANDLE">
            <summary>
            A JET_HANDLE contains a generic handle.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_HANDLE.Value">
            <summary>
            The native value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_HANDLE.Nil">
            <summary>
            Gets a null JET_HANDLE.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_HANDLE.IsInvalid">
            <summary>
            Gets a value indicating whether the <see cref="T:Microsoft.Isam.Esent.Interop.JET_HANDLE"/> is valid (checks against 0 and -1).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_HANDLE.op_Equality(Microsoft.Isam.Esent.Interop.JET_HANDLE,Microsoft.Isam.Esent.Interop.JET_HANDLE)">
            <summary>
            Determines whether two specified instances of JET_HANDLE
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_HANDLE.op_Inequality(Microsoft.Isam.Esent.Interop.JET_HANDLE,Microsoft.Isam.Esent.Interop.JET_HANDLE)">
            <summary>
            Determines whether two specified instances of JET_HANDLE
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_HANDLE.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_HANDLE.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.
            -or-
            null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.
            </param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.
            -or-
            null to obtain the numeric format information from the current locale setting of the operating system.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_HANDLE.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_HANDLE.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_HANDLE.Equals(Microsoft.Isam.Esent.Interop.JET_HANDLE)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_LS">
            <summary>
            Local storage for an ESENT handle. Used by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetGetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS@,Microsoft.Isam.Esent.Interop.LsGrbit)"/>
            and <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetSetLS(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.LsGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_LS.Nil">
            <summary>
            The null handle.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_LS.IsInvalid">
            <summary>
            Gets a value indicating whether the <see cref="T:Microsoft.Isam.Esent.Interop.JET_LS"/> is valid (checks against 0 and -1).
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_LS.Value">
            <summary>
            Gets or sets the value of the handle.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LS.op_Equality(Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.JET_LS)">
            <summary>
            Determines whether two specified instances of JET_LS
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LS.op_Inequality(Microsoft.Isam.Esent.Interop.JET_LS,Microsoft.Isam.Esent.Interop.JET_LS)">
            <summary>
            Determines whether two specified instances of JET_LS
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LS.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LS.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.
            -or-
            null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.
            </param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.
            -or-
            null to obtain the numeric format information from the current locale setting of the operating system.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LS.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LS.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_LS.Equals(Microsoft.Isam.Esent.Interop.JET_LS)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.JET_INDEXID">
            <summary>
            Holds an index ID. An index ID is a hint that is used to accelerate the
            selection of the current index using JetSetCurrentIndex. It is most
            useful when there is a very large number of indexes over a table. The
            index ID can be retrieved using JetGetIndexInfo or JetGetTableIndexInfo.
            </summary>
            <remarks>
            The Pack attribute is necessary because the C++ version is defined as
            a byte array. If the C# compiler inserts the usual padding between the uint cbStruct
             and the IntPtr, then the structure ends up too large.
            </remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXID.CbStruct">
            <summary>
            Size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXID.IndexId1">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXID.IndexId2">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXID.IndexId3">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.JET_INDEXID.TheSizeOfIndexId">
            <summary>
            The size of a JET_INDEXID structure.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.JET_INDEXID.SizeOfIndexId">
            <summary>
            Gets the size of a JET_INDEXINDEXID structure.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXID.op_Equality(Microsoft.Isam.Esent.Interop.JET_INDEXID,Microsoft.Isam.Esent.Interop.JET_INDEXID)">
            <summary>
            Determines whether two specified instances of JET_INDEXID
            are equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXID.op_Inequality(Microsoft.Isam.Esent.Interop.JET_INDEXID,Microsoft.Isam.Esent.Interop.JET_INDEXID)">
            <summary>
            Determines whether two specified instances of JET_INDEXID
            are not equal.
            </summary>
            <param name="lhs">The first instance to compare.</param>
            <param name="rhs">The second instance to compare.</param>
            <returns>True if the two instances are not equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXID.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXID.ToString">
            <summary>
            Generate a string representation of the structure.
            </summary>
            <returns>The structure as a string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXID.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.JET_INDEXID.Equals(Microsoft.Isam.Esent.Interop.JET_INDEXID)">
            <summary>
            Returns a value indicating whether this instance is equal
            to another instance.
            </summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.UInt16ColumnValue">
            <summary>
            A <see cref="T:System.UInt16"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.UInt16ColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.UInt16ColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.UInt16ColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.UInt32ColumnValue">
            <summary>
            A <see cref="T:System.UInt32"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.UInt32ColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.UInt32ColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.UInt32ColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.UInt64ColumnValue">
            <summary>
            A <see cref="T:System.UInt64"/> column value.
            </summary>
        </member>
        <member name="P:Microsoft.Isam.Esent.Interop.UInt64ColumnValue.Size">
            <summary>
            Gets the size of the value in the column. This returns 0 for
            variable sized columns (i.e. binary and string).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.UInt64ColumnValue.SetColumns(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.ColumnValue[],Microsoft.Isam.Esent.Interop.NATIVE_SETCOLUMN*,System.Int32)">
            <summary>
            Recursive SetColumns method for data pinning. This populates the buffer and
            calls the inherited SetColumns method.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">
            The table to set the columns in. An update should be prepared.
            </param>
            <param name="columnValues">
            Column values to set.
            </param>
            <param name="nativeColumns">
            Structures to put the pinned data in.
            </param>
            <param name="i">Offset of this object in the array.</param>
            <returns>An error code.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.UInt64ColumnValue.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Given data retrieved from ESENT, decode the data and set the value in the ColumnValue object.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within the bytes.</param>
            <param name="count">The number of bytes to decode.</param>
            <param name="err">The error returned from ESENT.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Update">
            <summary>
            A class that encapsulates an update on a JET_TABLEID.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Update.sesid">
            <summary>
            The underlying JET_SESID.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Update.tableid">
            <summary>
            The underlying JET_TABLEID.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Update.prep">
            <summary>
            The type of update.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Update.#ctor(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_prep)">
            <summary>
            Initializes a new instance of the Update class. This automatically
            begins an update. The update will be cancelled if
            not explicitly saved.
            </summary>
            <param name="sesid">The session to start the transaction for.</param>
            <param name="tableid">The tableid to prepare the update for.</param>
            <param name="prep">The type of update.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Update.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Update"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Microsoft.Isam.Esent.Interop.Update"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Update.Save(System.Byte[],System.Int32,System.Int32@)">
            <summary>
            Update the tableid.
            </summary>
            <param name="bookmark">Returns the bookmark of the updated record. This can be null.</param>
            <param name="bookmarkSize">The size of the bookmark buffer.</param>
            <param name="actualBookmarkSize">Returns the actual size of the bookmark.</param>
            <remarks>
            Save is the final step in performing an insert or an update. The update is begun by
            calling creating an Update object and then by calling JetSetColumn or JetSetColumns one or more times
            to set the record state. Finally, Update is called to complete the update operation.
            Indexes are updated only by Update or and not during JetSetColumn or JetSetColumns.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Update.Save">
            <summary>
            Update the tableid.
            </summary>
            <remarks>
            Save is the final step in performing an insert or an update. The update is begun by
            calling creating an Update object and then by calling JetSetColumn or JetSetColumns one or more times
            to set the record state. Finally, Update is called to complete the update operation.
            Indexes are updated only by Update or and not during JetSetColumn or JetSetColumns.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Update.SaveAndGotoBookmark">
            <summary>
            Update the tableid and position the tableid on the record that was modified.
            This can be useful when inserting a record because by default the tableid
            remains in its old location.
            </summary>
            <remarks>
            Save is the final step in performing an insert or an update. The update is begun by
            calling creating an Update object and then by calling JetSetColumn or JetSetColumns one or more times
            to set the record state. Finally, Update is called to complete the update operation.
            Indexes are updated only by Update or and not during JetSetColumn or JetSetColumns.
            </remarks>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Update.Cancel">
            <summary>
            Cancel the update.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Update.ReleaseResource">
            <summary>
            Called when the transaction is being disposed while active.
            This should rollback the transaction.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Util">
            <summary>
            Static utility methods.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.ArrayEqual(System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{System.Byte},System.Int32,System.Int32)">
            <summary>
            Compare two byte arrays to see if they have the same content.
            </summary>
            <param name="a">The first array.</param>
            <param name="b">The second array.</param>
            <param name="offset">The offset to start comparing at.</param>
            <param name="count">The number of bytes to compare.</param>
            <returns>True if the arrays are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.DumpBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Return a string containing (some of) the bytes.
            </summary>
            <param name="data">The data to dump.</param>
            <param name="offset">The starting offset.</param>
            <param name="count">The count.</param>
            <returns>A string version of the data.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.ObjectContentEquals``1(``0,``0)">
            <summary>
            Compares two objects with ContentEquals.
            If both are null, there are considered equal.
            </summary>
            <typeparam name="T">A type that implements IContentEquatable.</typeparam>
            <param name="left">First object to compare.</param>
            <param name="right">Second object to compare.</param>
            <returns>Whether the two objects are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.ArrayObjectContentEquals``1(``0[],``0[],System.Int32)">
            <summary>
            Compares two objects with ContentEquals.
            If both are null, there are considered equal.
            </summary>
            <typeparam name="T">A type that implements IContentEquatable.</typeparam>
            <param name="left">First object to compare.</param>
            <param name="right">Second object to compare.</param>
            <param name="length">The number of entries to compare.</param>
            <returns>Whether the two objects are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.ArrayStructEquals``1(``0[],``0[],System.Int32)">
            <summary>
            Compares items in two arrays using Equals.
            If both arrays are null, there are considered equal.
            </summary>
            <typeparam name="T">A value type.</typeparam>
            <param name="left">First array to compare.</param>
            <param name="right">Second array to compare.</param>
            <param name="length">The number of entries to compare.</param>
            <returns>Whether the two arrays are equal.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.DeepCloneArray``1(``0[])">
            <summary>
            Clone an array of objects.
            </summary>
            <typeparam name="T">The type of object in the array.</typeparam>
            <param name="value">The values to clone.</param>
            <returns>A clone of the values.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.CalculateHashCode(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Given a list of hash codes calculate a hash of the hashes.
            </summary>
            <param name="hashes">The sub hash codes.</param>
            <returns>A hash of the hash codes.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.AddTrailingDirectorySeparator(System.String)">
            <summary>
            Add a trailing directory separator character to the string.
            </summary>
            <param name="dir">The directory.</param>
            <returns>The directory with a separator character added (if necessary).</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.ConvertToNullTerminatedAsciiByteArray(System.String)">
            <summary>
            Converts a unicode string to a null-terminated Ascii byte array.
            </summary>
            <param name="value">The unicode string to be converted.</param>
            <returns>The byte array with a null-terminated Ascii representation of the given string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.ConvertToNullTerminatedUnicodeByteArray(System.String)">
            <summary>
            Converts a unicode string to a null-terminated Unicode byte array.
            </summary>
            <param name="value">The unicode string to be converted.</param>
            <returns>The byte array with a null-terminated Unicode representation of the given string.</returns>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Util.ConvertToAsciiByteArray(System.String)">
            <summary>
            Converts a unicode string to an Ascii byte array.
            CAUTION: The array doesn't have a null-terminator at the end.
            </summary>
            <param name="value">The unicode string to be converted.</param>
            <returns>The byte array with an Ascii representation of the given string.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Win32.AllocationType">
            <summary>
            Allocation type options for <see cref="M:Microsoft.Isam.Esent.Interop.Win32.NativeMethods.VirtualAlloc(System.IntPtr,System.UIntPtr,System.UInt32,System.UInt32)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Win32.AllocationType.MEM_COMMIT">
            <summary>
            Commit the memory.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Win32.AllocationType.MEM_RESERVE">
            <summary>
            Reserve the memory.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Win32.MemoryProtection">
            <summary>
            Memory protection options for <see cref="M:Microsoft.Isam.Esent.Interop.Win32.NativeMethods.VirtualAlloc(System.IntPtr,System.UIntPtr,System.UInt32,System.UInt32)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Win32.MemoryProtection.PAGE_READWRITE">
            <summary>
            Read/write access to the pages.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Win32.FreeType">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Win32.NativeMethods.VirtualFree(System.IntPtr,System.UIntPtr,System.UInt32)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Win32.FreeType.MEM_RELEASE">
            <summary>
            Release the memory. The pages will be in the free state.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Win32.NativeMethods">
            <summary>
            P/Invoke methods for Win32 functions.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Win32.NativeMethods.WinCoreMemoryDll">
            <summary>
            The name of the DLL that holds the Core Memory API set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Win32.NativeMethods.HeapObsolete">
            <summary>
            The name of the DLL that holds the Obsolete Heap API set.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Win32.NativeMethods.WinCoreProcessThreads">
            <summary>
            The name of the DLL that holds the Core process/threads API set.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Win32.NativeMethods.ThrowExceptionOnNull(System.IntPtr,System.String)">
            <summary>
            Throw an exception if the given pointer is null (IntPtr.Zero).
            </summary>
            <param name="ptr">The pointer to check.</param>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Win32.NativeMethods.ThrowExceptionOnFailure(System.Boolean,System.String)">
            <summary>
            Throw an exception if the success code is not true.
            </summary>
            <param name="success">The success code.</param>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows7.Windows7Api">
            <summary>
            ESENT APIs that were first supported in Windows 7 (Windows Server 2008 R2).
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows7.Windows7Api.JetConfigureProcessForCrashDump(Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit)">
            <summary>
            Crash dump options for Watson.
            </summary>
            <param name="grbit">Crash dump options.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows7.Windows7Api.JetPrereadKeys(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[][],System.Int32[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows7.PrereadKeysGrbit)">
            <summary>
            If the records with the specified keys are not in the buffer cache
            then start asynchronous reads to bring the records into the database
            buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="keys">
            The keys to preread. The keys must be sorted.
            </param>
            <param name="keyLengths">The lengths of the keys to preread.</param>
            <param name="keyIndex">
            The index of the first key in the keys array to read.
            </param>
            <param name="keyCount">
            The maximum number of keys to preread.
            </param>
            <param name="keysPreread">
            Returns the number of keys to actually preread.
            </param>
            <param name="grbit">
            Preread options. Used to specify the direction of the preread.
            </param>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.Windows7.Windows7Api.JetPrereadKeys(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[][],System.Int32[],System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows7.PrereadKeysGrbit)">
            <summary>
            If the records with the specified keys are not in the buffer cache
            then start asynchronous reads to bring the records into the database
            buffer cache.
            </summary>
            <param name="sesid">The session to use.</param>
            <param name="tableid">The table to issue the prereads against.</param>
            <param name="keys">
            The keys to preread. The keys must be sorted.
            </param>
            <param name="keyLengths">The lengths of the keys to preread.</param>
            <param name="keyCount">
            The maximum number of keys to preread.
            </param>
            <param name="keysPreread">
            Returns the number of keys to actually preread.
            </param>
            <param name="grbit">
            Preread options. Used to specify the direction of the preread.
            </param>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows7.Windows7ExceptionAction">
            <summary>
            Exception action that have been added to the Windows 7 version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7ExceptionAction.FailFast">
            <summary>
            Introduced in Windows 7. Use the Windows RaiseFailFastException API to force a crash.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Windows7.Windows7Api.JetConfigureProcessForCrashDump(Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.Minimum">
            <summary>
            Dump minimum includes <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.CacheMinimum"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.Maximum">
            <summary>
            Dump maximum includes <see cref="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.CacheMaximum"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.CacheMinimum">
            <summary>
            CacheMinimum includes pages that are latched.
            CacheMinimum includes pages that are used for memory.
            CacheMinimum includes pages that are flagged with errors.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.CacheMaximum">
            <summary>
            Cache maximum includes cache minimum.
            Cache maximum includes the entire cache image.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.CacheIncludeDirtyPages">
            <summary>
            Dump includes pages that are modified.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.CacheIncludeCachedPages">
            <summary>
            Dump includes pages that contain valid data.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.CrashDumpGrbit.CacheIncludeCorruptedPages">
            <summary>
            Dump includes pages that are corrupted (expensive to compute).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows7.PrereadKeysGrbit">
            <summary>
            Options for <see cref="M:Microsoft.Isam.Esent.Interop.Windows7.Windows7Api.JetPrereadKeys(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Byte[][],System.Int32[],System.Int32,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows7.PrereadKeysGrbit)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.PrereadKeysGrbit.Forward">
            <summary>
            Preread forward.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.PrereadKeysGrbit.Backwards">
            <summary>
            Preread backwards.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits">
            <summary>
            Grbits that have been added to the Windows 7 version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.ColumnCompressed">
            <summary>
            Compress data in the column, if possible.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.Compressed">
            <summary>
            Try to compress the data when storing it.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.Uncompressed">
            <summary>
            Don't compress the data when storing it.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.ReplayIgnoreLostLogs">
            <summary>
            Recover without error even if uncommitted logs have been lost. Set 
            the recovery waypoint with Windows7Param.WaypointLatency to enable
            this type of recovery.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.Dirty">
            <summary>
            Terminate without flushing the database cache.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.IntrinsicLVsOnly">
            <summary>
            Permit only intrinsic LV's (so materialisation is not required simply
            because a TT has an LV column).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.EnumerateInRecordOnly">
            <summary>
            When enumerating column values only retrieve data that is present in
            the record. This means that BLOB columns will not always be retrieved.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.ForceNewLog">
            <summary>
            Force a new logfile to be created. This option may be used even if
            the session is not currently in a transaction. This option cannot
            be used in combination with any other option.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.ExplicitPrepare">
            <summary>
            No instances will be prepared by default. Instances must be added explicitly.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.Forward">
            <summary>
            Hint that the sequential traversal will be in the forward direction.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.NoPartialMerges">
            <summary>
            While running Online Defragmentation, do not perform partial merges of pages.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.DefragmentBTree">
            <summary>
            Defragment a single BTree.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.Backward">
            <summary>
            Hint that the sequential traversal will be in the backward direction.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.EnableAttachDbBackgroundMaintenance">
            <summary>
            The database engine will initiate automatic background database maintenance upon database attachment.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Grbits.EnableCreateDbBackgroundMaintenance">
            <summary>
            The database engine will initiate automatic background database maintenance upon database creation.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows7.Windows7IdxInfo">
            <summary>
            Index info levels that have been added to the Windows 7 version of ESENT.
            </summary>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.JET_IdxInfo"/>
            <seealso cref="T:Microsoft.Isam.Esent.Interop.Windows8.Windows8IdxInfo"/>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7IdxInfo.CreateIndex">
            <summary>
            Introduced in Windows 7. Returns a <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE"/> structure suitable
            for use by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/>.
            </summary>
            <remarks>Not currently implemented in this layer.</remarks>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7IdxInfo.CreateIndex2">
            <summary>
            Introduced in Windows 7. Returns a JET_INDEXCREATE2 structure (similar to <see cref="T:Microsoft.Isam.Esent.Interop.JET_INDEXCREATE"/> structure,
            but it contains a <see cref="T:Microsoft.Isam.Esent.Interop.JET_SPACEHINTS"/> member called pSpacehints).
            This structure is suitable
            for use by <see cref="M:Microsoft.Isam.Esent.Interop.Api.JetCreateIndex2(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.JET_INDEXCREATE[],System.Int32)"/>.
            </summary>
            <remarks>Not currently implemented in this layer.</remarks>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param">
            <summary>
            System parameters that have been added to the Windows 7 version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.WaypointLatency">
            <summary>
            This parameter sets the number of logs that esent will defer database
            flushes for. This can be used to increase database recoverability if
            failures cause logfiles to be lost.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.DefragmentSequentialBTrees">
            <summary>
            Turn on/off automatic sequential B-tree defragmentation tasks (On by 
            default, but also requires <see cref="T:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit"/> flags / <see cref="T:Microsoft.Isam.Esent.Interop.SpaceHintsGrbit"/>.RetrieveHintTableScan* 
            to trigger on any given tables).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.DefragmentSequentialBTreesDensityCheckFrequency">
            <summary>
            Determine how frequently B-tree density is checked (Note: currently not
            implemented).
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.LVChunkSizeMost">
            <summary>
            This parameter is used to retrieve the chunk size of long-value
            (blob) data. Setting and retrieving data in multiples of this 
            size increases efficiency.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.MaxCoalesceReadSize">
            <summary>
            Maximum number of bytes that can be grouped for a coalesced read operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.MaxCoalesceWriteSize">
            <summary>
            Maximum number of bytes that can be grouped for a coalesced write operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.MaxCoalesceReadGapSize">
            <summary>
            Maximum number of bytes that can be gapped for a coalesced read IO operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.MaxCoalesceWriteGapSize">
            <summary>
            Maximum number of bytes that can be gapped for a coalesced write IO operation.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.EnableDbScanInRecovery">
            <summary>
            Enable Database Maintenance during recovery.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.DbScanThrottle">
            <summary>
            Throttling of the database scan, in milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.DbScanIntervalMinSec">
            <summary>
            Minimum interval to repeat the database scan, in seconds.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows7.Windows7Param.DbScanIntervalMaxSec">
            <summary>
            Maximum interval to allow the database scan to finish, in seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows81.Windows81DbInfo">
            <summary>
            ColumnDatabase info levels that have been added to the Windows 8.1 version of ESENT.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows81.Windows81DbInfo.FilesizeOnDisk">
            <summary>
            Introduced in Windows 8.1.
            Returns the filesize of the database that is allocated by the operating system, in pages.
            This may be smaller than <see cref="F:Microsoft.Isam.Esent.Interop.JET_DbInfo.Filesize"/> if the file system supports
            compressed or sparse files (Int32).
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows81.ShrinkDatabaseGrbit">
            <summary>
            Options for <see cref="F:Microsoft.Isam.Esent.Interop.Windows81.Windows81Param.EnableShrinkDatabase"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows81.ShrinkDatabaseGrbit.Off">
            <summary>
            Does not reduce the size of the database during normal operations.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows81.ShrinkDatabaseGrbit.On">
            <summary>
            Turns on the database shrinking functionality. If this parameter is not
            set, then <see cref="M:Microsoft.Isam.Esent.Interop.Windows8.Windows8Api.JetResizeDatabase(Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_DBID,System.Int32,System.Int32@,Microsoft.Isam.Esent.Interop.Windows8.ResizeDatabaseGrbit)"/> will be unable to reclaim
            space to the file system.
            Uses the file system's Sparse Files feature to release space
            in the middle of a file. When enough rows or tables get free up by
            the Version Store Cleanup task, and space is reclaimed, the database
            engine will attempt to return it to the file system, via sparse files.
            Sparse files are currently only available on NTFS and ReFS file systems.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows81.ShrinkDatabaseGrbit.Realtime">
            <summary>
            After space is release from a table to a the root Available Extent, the database
            engine will attempt to release the space back to the file system. This parameter
            requires that <see cref="F:Microsoft.Isam.Esent.Interop.Windows81.ShrinkDatabaseGrbit.On"/> is also specified.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows81.Windows81Grbits">
            <summary>
            Options that have been introduced in Windows 8.1.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows81.Windows81Grbits.OnlyShrink">
            <summary>
            Only shrink the database to the desired size.
            If the resize call would grow the database, do nothing.
            In order to use this functionality, <see cref="P:Microsoft.Isam.Esent.Interop.InstanceParameters.EnableShrinkDatabase"/>
            must be set to <see cref="F:Microsoft.Isam.Esent.Interop.Windows81.ShrinkDatabaseGrbit.On"/>. Otherwise, an exception may
            be thrown.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.Windows81.Windows81Param">
            <summary>
            System parameters that were introduced in Windows 8.1.
            </summary>
        </member>
        <member name="F:Microsoft.Isam.Esent.Interop.Windows81.Windows81Param.EnableShrinkDatabase">
            <summary>
            Whether to free space back to the OS after deleting data. This may free space
            in the middle of files (done in the units of database extents). This uses Sparse Files,
            which is available on NTFS and ReFS (not FAT). The exact method of releasing space is an
            implementation detail and is subject to change.
            </summary>
        </member>
        <member name="T:Microsoft.Isam.Esent.Interop.CallbackDataConverter">
            <summary>
            Methods to convert data objects used in callbacks.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.Interop.CallbackDataConverter.GetManagedData(System.IntPtr,Microsoft.Isam.Esent.Interop.JET_SNP,Microsoft.Isam.Esent.Interop.JET_SNT)">
            <summary>
            Get the managed data object from the unmanaged data.
            </summary>
            <param name="nativeData">The native data.</param>
            <param name="snp">The SNP (used to determine the type of object).</param>
            <param name="snt">The SNT (used to determine the type of object).</param>
            <returns>The managed data object.</returns>
        </member>
        <member name="T:Microsoft.Isam.Esent.EsentException">
            <summary>
            Base class for ESENT exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.EsentException.#ctor">
            <summary>
            Initializes a new instance of the EsentException class.
            </summary>
        </member>
        <member name="M:Microsoft.Isam.Esent.EsentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EsentException class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Isam.Esent.EsentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EsentException class. This constructor
            is used to deserialize a serialized exception.
            </summary>
            <param name="info">The data needed to deserialize the object.</param>
            <param name="context">The deserialization context.</param>
        </member>
    </members>
</doc>
