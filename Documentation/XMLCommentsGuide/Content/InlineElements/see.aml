<?xml version="1.0" encoding="utf-8"?>
<topic id="983fed56-321c-4daf-af16-e3169b28ffcd" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>This element is used to create an inline link to another API topic or an external website within the
text in which it occurs.  It can also be used to apply language-specific formatting to a limited set of keywords.</para>

			<autoOutline lead="none">2</autoOutline>
		</introduction>

		<section address="Syntax">
			<title>Syntax</title>
			<content>
				<para>This inline element can be used within any other element.  Any of the following formats may be used
based on the need.</para>

			</content>

			<sections>
				<section address="CodeReference">
					<title>Code Reference</title>
					<content>
<code language="xml" title=" ">
&lt;see cref="member" [qualifyHint="true"] [autoUpgrade="true"] /&gt;
	
or

&lt;see cref="member" [autoUpgrade="true"]&gt;inner text&lt;/see&gt;
</code>

						<para>The code reference form uses a <codeInline>cref</codeInline> attribute to specify the
member name to which the link should be connected.  The compiler will check that the target member name exists
and will generate a warning if it is not found.  The member name does not have to be fully qualified as long as
the reference is within the containing class or if the appropriate <codeInline>using</codeInline>
(<codeInline>Imports</codeInline> in VB) statements are present.</para>

						<para>If the self-closing form is used, the inner text of the link will be set to the member name
without a namespace or type qualifier.  You can specify inner text on the element to use an alternate value for
the link text or to add a qualifying namespace or type to the member name.  By adding the
<codeInline>qualifyHint</codeInline> attribute and setting it to true, you can indicate that the inner text
should be qualified.  Type names are fully qualified with their namespace.  Class members are qualified with
their class name.</para>

						<para>When specifying type, field, property, event, and non-overloaded method names, the name alone
will suffice as the <codeInline>cref</codeInline> attribute value.  However, when referencing overloaded methods,
you must supply parameter type information to help the compiler determine to which overload you are referring.
The parameter type names are enclosed in parentheses and can be specified using the types for the language being
used (i.e. <codeInline>int</codeInline> or <codeInline>string</codeInline> for C# or <codeInline>Integer</codeInline>
or <codeInline>String</codeInline> for VB).  They can also be specified using the .NET Framework type names such
as <codeInline>Int32</codeInline>, <codeInline>System.Int32</codeInline>, etc.  If an overload takes no
parameters, just specify an empty set of parentheses.  If you want to link to the auto-generated member overloads
help topic, you can specify the <codeInline>autoUpgrade</codeInline> attribute.  If set to false or omitted, the
link will take you directly to the referenced member.  If set to true and the method has overloads, the link will
take you to the method overloads page instead.  If the method has no overloads, it works the same as	if set to
false and it takes you to the method page.  This is equivalent to the same attribute on the MAML
<codeInline>codeEntityReference</codeInline> element.  Another alternative is to use the fully qualified member
name with an "<codeInline>O:</codeInline>" prefix.  See the <link xlink:href="#Examples">Method Overload Examples</link>
below for details.</para>

						<alert class="tip">
							<para>To link to the root namespace container page, use the ID <codeInline>R:Project_[HtmlHelpName]</codeInline>
where "<codeInline>[HtmlHelpName]</codeInline>" is the value of your project's HTML Help Name property with
spaces replaced by underscores. Use the <ui>Entity References</ui> tool window to search for the ID if in doubt
about its value.</para>
						</alert>
					</content>
				</section>

				<section address="ExternalRef">
					<title>External Reference</title>
					<content>
<code language="xml" title=" ">
&lt;see href="url" [target="_blank | _self | _parent | _top"]
    [alt="alternate text"] /&gt;
	
or

&lt;see href="url" [target="_blank | _self | _parent | _top"]
    [alt="alternate text"]&gt;inner text&lt;/see&gt;
</code>

						<para>The external reference form is a customization implemented by Sandcastle.  It uses an
<codeInline>href</codeInline> attribute to specify the URL of an external website or resource to which the link
should be connected.  If the self-closing form is used, the inner text of the link will be set to the URL.  You
can specify inner text on the element to use an alternate value for the link text.</para>

						<para>The optional <codeInline>target</codeInline> attribute can be used to specify where the
content will be opened.  If not specified, <codeInline>_blank</codeInline> is used to open the content in a new
browser window.  The <codeInline>_self</codeInline> option can be used to replace the current topic with the
content of the target URL.  The <codeInline>_parent</codeInline> and <codeInline>_top</codeInline> options can be
used to force the content to be displayed in the parent frame or full window if the current topic is hosted in
one of those manners.</para>

						<para>The optional <codeInline>alt</codeInline> attribute can be used to specify alternate text to
display for the link's tooltip when the mouse hovers over it.  If not specified, no alternate text is added for
the tooltip.</para>

					</content>
				</section>

				<section address="LangWord">
					<title>Language Keyword Formatting</title>
					<content>
<code language="xml" title=" ">
&lt;see langword="null | Nothing | nullptr | static | shared | virtual |
    Overridable | true | True | false | False | abstract | MustInherit |
    sealed | NotInheritable | async | await | async/await | Async | Await |
		Async/Await | let! | async/let!" /&gt;
</code>

						<para>The language keyword formatting form uses a <codeInline>langword</codeInline> attribute to
specify a language keyword that will receive special handling when the topic is viewed.  When one of the noted
keywords is used, the keyword text displayed is based on the language selected in the language filter if the
presentation style has one.  If a keyword other than one of those listed is specified, it is passed through with
no special formatting or handling.</para>
					</content>
				</section>
			</sections>
		</section>

		<section address="Remarks">
			<title>Remarks</title>
			<content>
				<para>Use this element to insert an inline link.  Use the <link xlink:href="16cdb957-a35b-4c17-bf5e-ea511b0218e3" />
element to insert a link in the <legacyBold>See Also</legacyBold> section of the topic.</para>
			</content>
		</section>
		
		<section address="Examples">
			<title>Examples</title>
			<content>
				<code language="cs" title="Code Reference Examples" source="SampleClass.cs" region="see/seealso cref Examples" />
				<code language="cs" title="Method Overload Examples" source="SampleClass.cs" region="see/seealso Method Overload Examples" />
				<code language="cs" title="External Reference Examples" source="SampleClass.cs" region="see/seealso href Examples" />
				<code language="cs" title="Language Keyword Examples" source="SampleClass.cs" region="see langword Examples" />
			</content>
		</section>

		<relatedTopics>
			<link xlink:href="d297bc14-33aa-4152-ae36-9f658b15de87" />
			<link xlink:href="16cdb957-a35b-4c17-bf5e-ea511b0218e3" />
			<link xlink:href="db2703b4-12bc-4cf5-8642-544b41002809" />
			<codeEntityReference qualifyHint="false">E:XMLCommentsExamples.SampleClass.SomethingHappened</codeEntityReference>
			<codeEntityReference qualifyHint="false" autoUpgrade="true">M:XMLCommentsExamples.SampleClass.OnSomethingHappened</codeEntityReference>
			<codeEntityReference qualifyHint="false" autoUpgrade="true">M:XMLCommentsExamples.SampleClass.SeeElementExternalExample</codeEntityReference>
			<codeEntityReference qualifyHint="false" autoUpgrade="true">M:XMLCommentsExamples.SampleClass.SeeLangWordExamples</codeEntityReference>
			<codeEntityReference qualifyHint="false" autoUpgrade="true">M:XMLCommentsExamples.SampleClass.DoSomething</codeEntityReference>
		</relatedTopics>
	</developerConceptualDocument>
</topic>
